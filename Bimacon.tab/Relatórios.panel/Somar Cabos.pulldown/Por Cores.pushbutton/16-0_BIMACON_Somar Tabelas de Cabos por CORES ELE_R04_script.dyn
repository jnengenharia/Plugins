{
  "Uuid": "4c528b33-468c-4746-a69b-ce2289ee43ea",
  "IsCustomNode": false,
  "Description": "Soma os cabos das Bandeja de Cabos, Consuiítes e das conexões",
  "Name": "ok 2021_16-0_BIMACON_Somar Tabelas de Cabos por CORES ELE_R04_script",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 149,
      "SelectedString": "Cabos PVC ELE em Bandeja de Cabos (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "4d030244cdff41108dce6d340db3deaf",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b964da8495414e5893199d4cd72186f8",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 150,
      "SelectedString": "Cabos PVC ELE em Conduítes (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "152484bc5ea345878a4bbe2d5dd0715a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9aeaaa6b87ae402f89a2fac24e2ca724",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "27d9a802f570423f8e26ba473110c061",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0280b89f100948bebe59a02a90a14e1d",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a385565fc3484141a4b6867aac35eaaf",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bf98b0269a347379824b28bc24f818b",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d9123f7a7a3477f91d5821a01016038",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f642baf536e34a3e8cb74808c1787f24",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64b8d7f069974f2f929228c089227448",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "349991248b904436bcea734462ed6d1f",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1db743c165bc4013afd177f6c932f0e9",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite a seleção entre True e False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "974fecacb61649d08cad877ce085a399",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9615bdb888f247eebf0a56083937a7e7",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "acc59ab50eda4eb7804aa29818ca8972",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7af47773c7714e1285d8dc063c08c0a5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "f90d8ac5f6c047dabfe0a065af6080f9",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8675fb1d7ffa4ee597b2eab971b16e91",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite a seleção entre True e False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f7590613b1d5476d8c044b3ba03aa953",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c676b252c07443f18c605199dbae45ec",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f49a7f4d8ae4d7cacf763846cdb5a97",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "123959e42a3143618e3651440112b68f",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f349fb856ee44366af274238fab73b62",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "CrossProduct",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bf6f9c335b3c43e98b2207d1b01fe2c2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7c03bfc52a624418a86abdd65319c475",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d5f81b980474294b1ac1951210d4c56",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f2c1107d9c949a18e0f4ebc709c3a8c",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71ca807867fa4fb0afeedede13ec043a",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "CrossProduct",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 503,
      "SelectedString": "OST_GenericModel",
      "Id": "3f2930e639524104884d2098b4448567",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99dde69457cf4d6d9578f13315df1d2c",
          "Name": "Category",
          "Description": "A categoria selecionada.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as categorias incorporadas."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "7fddc8fb8c954860a2df0d7a22c43634",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "4310073426d541e1ba4d3cb4e2c1df06",
          "Name": "Category",
          "Description": "Categoria",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4254dbf8caae4208b2cb1632a30e9f85",
          "Name": "Elements",
          "Description": "Uma classe de elemento.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obter todos os elementos da categoria especificada no modelo."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7da0e4ef66f34bdfbb0ecb8334f07421",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "35146d01740b413f840e276a764ace30",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2114c2f34ee4719bbdfcbf65755c5ce",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fa2d34accde421b94dc04a973e243f0",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3389f9092c734d2c9598ef9bcfb2101c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "33a7bc11b2a444e3802c7c5d2e4fc52b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "59ac523d8e88498bb9ae912d988f4e3c",
          "Name": "object",
          "Description": "O objeto a ser serializado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97213008797f4410a0e794bdfffb9127",
          "Name": "string",
          "Description": "Representação da sequência de caracteres do objeto",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converta um objeto em uma representação de sequência de caracteres."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7bf2b5eafbad4faeabbfc7584be7ba14",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e0d9b5fa8df24fbe8da0374e4e97b933",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d243543d632c4d68ad7b0d3cdc320bc3",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b41432edfa34ada9f0cefdae4a3080e",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "44340526a5b344abb9b3ca86918e837f",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "92727865dde24bfd88dda3d1217bf211",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"Somatória Cabos\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c1efda31f3e84611a77d59b2d1aeca27",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d1b0ad2d3eb4ee8becd611a249add84",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79cf4d2d9949471d959ef160795e1d6d",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03bb301654be4be9b0ab374baaf70a28",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e996f8db77e4ef8adeb5c64c398e49e",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "ab27601c3cb140c68b13c05bb0e860ae",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2c320f26e21c4f20b73809b68921493d",
          "Name": "",
          "Description": "Nó para avaliar.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8211589b4ed74553bfa86c876574cc6f",
          "Name": "",
          "Description": "Observar conteúdo.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizar a saída do nó"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "619c7114a6424bfa9c5de721523e9f6f",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0761a1935d064a07a8908789afefc345",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite a seleção entre True e False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "89703e4a5b9246e3bdea83fbc2a06057",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e667de43a594af4865b6ead750b5d76",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5f1ce0004cef400db75e51a9d10d3ea6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "aeabe37359ab40cfbfe3f52642f5ef6a",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c68ab2f35864d278f8f646860d78047",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45056102a82147fa8e2e2b9f63689272",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b4e1fd9c5fa4767a6ea585f7765b6c4",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "CrossProduct",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 151,
      "SelectedString": "Cabos PVC ELE em Conexões (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "9da28366193e400a8ccc983fc5c20c0d",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6cfcd6e6b1f4f169813262a1d8c0beb",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4d7e08b6e37f478e924a9cf2ea262994",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "fd9735cb4a354a2281e518fa950d7a30",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45b36a1b0d954ea98818cb5ed99a33c8",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5ec18d8720e447daaa275c98d0b30b8",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6af2e25020a14ccba637128df9a11024",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b+c;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "711799435ea544b7bf1c92c884568888",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "41ac1f444ece49c795fb9b16adc27af4",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4f5611a3bc24b8b9910690d6f45cf32",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db92798f6e394e54a32c09b4c6d632bd",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5f3d435ad4845259f65a522ac3c7c74",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6b45cb627bb74fc3aa8f08c37f858e31",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c03da7cc8964490faa7ad4cbe333e300",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 500,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8874d9c34e1d43c0b0ccca35ebb7cbb7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "43dc10bea8284f459f3ee30779e632c5",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4790a3a935d4842a92484c027452ff7",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f63afd79f3714ba5980d5ad11122e8ae",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fec687803fa44d3a998ffad5ab7aa735",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c6e894fc609c440c96bac78b1c3da0f1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "41b4ccce8cb1448681502e6006604948",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "869db1a3639e4bb29e47e123588b8d3a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "982fdd3e9efc487aa8219ac24d10d275",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "275fe3ec0dd7407d85f51be1d5256e72",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "28819a0827604e69a7c98df7150cf688",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98cc23606e5e411e82c993ecec056d51",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0152744d510f45219b1e8720ac3e500f",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0493b62a52445f48faf075bbf32a7f7",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "8bb45464e593403e8b926ad117f1543c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58470743a49b491b8ee15f6f50ddd64a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 50,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1e029989d0ed49609f77315ae45d18af",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a32adca522be4b91ad264f477551947f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7561014a6e94f0bbddac40c7002a793",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8f10ab9206243f7b4c423cdf373fb4b",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a373fe50944428ea74435730ed01c58",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9fdf77fc2edf41b2b4766d28c2803740",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "380bcf8595b04b1d97ffeda1de2446d5",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f3172ba0c74443888d2f47427ef1b6b",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c3494bbc7ad4ff78b22f7a0bf169e83",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3e85b5bfa3674016882cd79b804c9f5e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eb8a7f31cd9f429a885315b7299210b8",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23626868f1e147cb8472f472708dc354",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "362d39f074c543169a60410e5e480955",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d10260fbd1747c289ddae54ad180273",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "966671f7e8554a0bbab13595b8a3d89a",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fb8bbce3212240ec981c5aff12b6252e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 70,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "baf65d41f5ff40f8bc772daa576badb5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "458a75973a74491ea7209a10ed3f2fab",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "963aa75112c74741b30487d129e3518b",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d1a2a86f065470298e2c9550f80115a",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62da45e1efed428d8be4d031fc7e0649",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7ec7362edebf4700b5d415060fd0ec92",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "993001b2630948c9b8f6d9fab32d70dd",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "938374df2b0b4ff1bc4e9c97da819cbe",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "589d0bd4aa234f9788c8bdc309a4343d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "13926a2ca81d4b708abd2a8278c8a1c2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5940aeb89f2f46069fc50b16b90b51e5",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79876150ad134a499b2508495be80922",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3084e3d55032457c8fdf0f565b8079c7",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc886e08910640d283d57c8d140b3a00",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4689bfbd3bb74877b6ddc4d0928040f8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5387bec68d04ebc8e6ffb6148f13ab9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 95,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aebda548f69d4dce94794d9c37b340da",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8baf6396448d41a284867faccaa8374f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3cdb2f4da08465a96f936d98aa300d3",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24e3dfdad5d844a7b54f4fd3f1d077bd",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef7afad1068940c382cae7892d97b005",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1e3787eb281f468c80154b943c8f3998",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "94c3f4d0dc4c4630864dbd577d26432f",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a7c39c1ce054da19b21051b2100089a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "396dbe7628744a5d9e0e2723a9675727",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "197761c9ef1b40d6ba11daafb5b8014e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "80a916aaea5443ee9212c85355c9108e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd49809b898647c1a1916baaad6e194a",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b0274efac0b44c795b26458408fc798",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "322290bbe20140b08024c82303bb5b68",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "726f6bd40550412393262aa0ecdcc02e",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc1fdba2a0cd42e786ba71e032493f4c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 120,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b1b2d0a2a12e4bebb5ed99c7221477ae",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "73370822be864d8d852d3e8f6f6d188b",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cee0bdb52f2143198528138caf273513",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5564e0b14ecd4963ac7eaf45898d5e49",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a80f18e6c2144a0ae20ef6ffc24fc14",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d89d7d5b6d274ee3b6d25de6e4ace489",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "08fc1c17025b42448396ff4882c06769",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "596968656ec346e3bcb8c2f733699796",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfd98503cb2040b4baaa727720e11bd7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8cf42e354088472ebabf054f2a9e0a75",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4f3776147fd24736b75e15f03122d533",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2de6a221ac654f1a8d04a8a1013b54fc",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42fdb02f11f45ed90d5376734203d10",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a8ef61bafaa4090982a81d5ac018c6a",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fec4dda2e5524397a4015bc666d8ddad",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b783eb3b8e9c4c918d004276211c11ad",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 150,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "749e9a2531f746d4b5536ab67b231c68",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7e7238d5f3474d1b9c899e32b89ba547",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83796a602f3648afae0435593f181b7d",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4bbe9457b394f81adc5cd53837a5465",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77353faec1ed41a5b4b5b25b05726bac",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0aaea6ae40904a958775f14ca74efca3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e27d3e9ddbc64c9ab2b4037c1d4acaef",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7fd0c3f2c9841b089dde206a0839dfd",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a63867f0f4584810acdc2128bfa4e185",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8a5de4ea6549413cb1bfd5e6cea2141e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2cb35e66b1654e29908eab4a7223ec1a",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0783b6e07a742a7af086eee589a5442",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16217165f21f49c5ad3418d84a1bdd07",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac39a64f8af34095baaaa2c257dc6028",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "cba7f20d6195459f85c3ce79eda997ac",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ebac563ae259472dbe085558ba59a991",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 185,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "13ee484b62fa40a8b5f59f2723506e50",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8060f66cec5c4a4cb5af523a72e5e5f4",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f94ab63253664622a2250c00f66aeda7",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6d343d0648d4264a97b4a446b9ee02a",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "155e314b430a4770b0c95d872ee37fb4",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "31c6ffab7ce7465ebc877154b77cf737",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ebb9510ddb64b8293bf103709b056f4",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93e975dc5cbd406283b0471ab0de8d49",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "272dca1ad30f48749a41c8b30925e743",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "81acf1bb22984d0bb81f6f8aa8556c1a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bca5ec30b21746668a31d398322347eb",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7741fa47ab5a41d1b1827ae0ba9cac7c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f61fa15a55bc45a2bacd0713c2734e44",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5aea2925ec55464ca4ed03c95b018b8b",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "428285aefd054f1fbdcb87ffe36f1dae",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ed65efd6b9545c78e1eb6105bc6dc04",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 240,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a49522455f2343eda7964927f2347d35",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5f12a8a8a9004d549c41a7ac359536e7",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "244329f6d0224360b686bd9c8e193f25",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fc210090ff6443e93fc26beede7788b",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5832315ab17046fa8dfe1d91c0ac7a9b",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3311ba0c8fcf4637b552a981965115af",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "62faf7f0ba3d4c55bc097f942a3ad820",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "522bb702df3947bd8aa2500205eb938a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63e6ed2f5d7e4f268b7265bf7728e9e7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "06d95876aa8a4f57916ad02f21b458a8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4cc35d2fdfd94124823eb3168a5ae13f",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b3622445df146a1947ddb0bcfa9c566",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fd6fe5956664d97bc2b61ed17357059",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2df6bb743f044fa58d8c688e6577ddf7",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3735cbfc38e84aafbdc202a59a2edd71",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6c1e9fcfbe4a4301ac6e12809f508d40",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 300,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7a0a4995d8ef441e9b75f58e6a99a0a1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c2b0c0d71d65447597c68d2ea9cc5bb2",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fa453a53ceb461ea1b3551ce04fde6e",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dae3bb4153314b4587f19cf677bf20d2",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc00354392cd49fe8a41e831c89d6e0d",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "99640e582c054fa2950e244742c839b3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6c17efe9cc2c4d4c871feef713f4015d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14294e6ec3114e08bda0810cfeaf0add",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72ab7a2014e2461f9a2ddcb1e891eb05",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c20485f5cae744b2ac008c39a42524e2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1b307a90dd654810a9363f50547b9cf0",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "385cda84065f4158893bc368b627cd79",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba7067b3ebd942e2b063977f8c49e12e",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f25932d7af0e4cc99cba75a0ded6b405",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4495e6d204184472a2f66600b9951fe3",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8583b2664f5a42ec9a39db59ffda7414",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 400,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9a04f29a0ad54e48ae5489f0035df7d4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4c5e2d4604ae4613805675b9337da49d",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be40a59b94ae4e11956987373958054b",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd4bfe2cd9b848488f9e35774f910d2e",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4d9bc36be164c0f9f733d8b0b5a19db",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3794f6371cba46f68611f665bf0a8ada",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d83e6377b6a74ded96b3ae72a8a3afd4",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9c7d39503724daf935c9072aefca4da",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e345107e463450b855661f5acf9e22f",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8d9987f83a204dc189454eb037b8fd88",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e304ab9145404ba29e3e74f492fee236",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7f084facd474071b9eded05e91bb8a7",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bedd26822f28404ab78f78c9704e5740",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ce09ec648d8426988521c8de88697f0",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fec894e262634fb3a0bcb88ec954f69c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e3cc6f76cd941028016d43f9fc26c43",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 25,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dc7709e307e54201af25a71415efee54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bfeaa8e44bb54cfb8a6a9dfbd179d939",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fee8e89afee449089242b6605fa5b5f",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d39c42aca3844e8b965bd065e096c26",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba1d08b1d1bd46e1b604a5b5d88a3f65",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "174358f71cce4bb9bae4a23479d6423b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "decb592e37b94099adfd35e018863acd",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e0f5715ac4542a282fb5f54e2ac7adf",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56dcecb4cf60484aae512de3cd0fb021",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1132cf14a34d4380b7f6aaccd0ad6f06",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "56c53132ff454743b73c0195520415bb",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "571a4c7a15104dab98b1d5061e82c25f",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56ae9b4281084d82b23ccb410bd5e412",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "532273cceabc4a56b72c39f440d8ecaa",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "e36a8fd8d48c476480a52d5b2ea66c17",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "90074a8fa9264abfa9bccdc93cee35b2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 35,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e24afc457573473ebb1a7db6e0bc907f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ef07fda158843f6b91f66701bd19177",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3cde36a76b4e440bb5019856c921b5ec",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "062adb58b6224350af55cff4e584d36e",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0150807e3e894e488269eb961b894aa2",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b4ce53b5cdb44713891cde7695d6beac",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0269582ac734435698db74e7e911d0ec",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8b4fab8d87746bfadf286963274e642",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3e49766dc634bfb97b70145d356938d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "651940114cdb44c59ebc6f74e5105910",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9a20cb9b62a449ecb1a4af0cfcbb8b93",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bdb879309f44482a6d8b22d05c63232",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7aaa004783a4380ac3b959638f0e359",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e9cfe8bd6954ed3b1f70a8918bb9518",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "970cb8fc7fc142deb38f70b7f4524c31",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34069c14e796455e9065372b5a16e292",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 16,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0bf98cca2ebe4c4bbba5f12100f4852f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ea80dcce342a477eb5872047394e1191",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cff62133bc2442e8980846e916006659",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ad45b4d132541a3bab9585d5a7f08d8",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9595df8e8ca45f997bad12f79f6c22b",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f2e4468a88874631a1a690869095eee9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0037088e6405403d985247c6e58baa5a",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8966ccd60b949429e18bbf43ef80bfb",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e39115f999724ba9b8a677b3ad09ba70",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "0a04106339c3444994bf800624f70ddc",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "597f628dbf394006af14a3ecac2ca574",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 10,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e9e98fbfb605430dadd77fb064cee60d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d8fb710b9c674310bae52a933322ea6d",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c022be9986e4f458779bbeb4f048fb6",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e023f3fcc5947fdb6fbb38faad2d4f5",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d285b8d258c405b9076ff1b91d463f9",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8df3c6f6d51a4beaaddf474ec66e2ed0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ef77791abb5c42609d3463a64238eed3",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbf392cec56b49ba866da4b8efd0ba84",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03ee2a4df90b46f39b7555eba2e6a118",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd4e617832cd451e8cc0236fe0f88e2b",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7902519511c14bd2ad7470492be8d9a8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ac82649020c48e99934d8a46794c000",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a3903e5d00d435b82f94f71416047a2",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "188f8ab922984c27b563074577f7b9ab",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "8f5b01259df7489baceac60cd95efa24",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "88a8361743954571996a162a7578322d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " Preto 6,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "70ea1bcfa8f64135974fb3fe0d26befc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa3c2a35c7ee484cbbc95928f780788c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "209e586d865e4355bdd14d196a0f5345",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfc0159c9c8c40e18bb483f6181eb698",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6501bd0ac8a4432e9af31bc7dbe1611c",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f25f6506a2874f079b4b883f267dd982",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "06e33728371948369531d7728a349e8b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c4f44869da0424e877d2ab3cb43c55b",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e6f25646fcd4459a1fb46dc9a30aa5d",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ec0799aa125434e995fef440e3f54c4",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "27c61046f30a40ffb984ea5e1cf73f0f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e77915ea1d7a46e68fa2660b97cdc97a",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e477b93c38e84094b8b7c48b1ca91a65",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2239c598c16944b9a373924bcbf07f1a",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ab80e451dba34bc6a2c8d9357d3599f0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b8c1ba50ad7746398c0884a7059d315d",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab5f4fd05974493c94b0615904e336a4",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1e6a017affd46968edb657aa812ee88",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba00819773ed416f9c347a69db775f30",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6246b8c681940f3ba71f98f02b540d3",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6af976371f594a8e91552722ecc56895",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48befdb17fdf4a47a986d042c982fd0a",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "e3e34310d6524c83bf769fe929e6518b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb247b2df71e4d4b894140b72648e800",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 4,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dfbd944cfe67412a8e4100640baa293c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4ddad5e03d8346ec907d94c4c3a5b2ee",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f8972bcd8e54d2db3097ed7dcb1c6e2",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6dbca812247d43629b3de4bdfeab7496",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b32f61b70bd4e13b7824dcc01b6fffb",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a50b7b9abdac47d992810920c6bd231f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "954275315ab44aafaed4eff4de50368e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b988b39acd34185a5ed6581b8bc4791",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e06161111684898b268ea413e10cd09",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "524034b7be374ae791a4a092fab2153e",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9f17f4fd7e36454d820ca8c3518620db",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8fe48729e18841309bf4d19e6ecf2bd9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2720b98bc8174349ae3f931b025d3c17",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a5fd1b7f961449e94081d71998cbff1",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b49e31fc70e9459891db9ada0181f8b2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45e1b063184042cdb202784bd2710c18",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "814d1cfbfc6f4825b4dd0a33753e6e5a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "50c9d023e30d4b7d8707bd2208c8613f",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc40f6e7bfda48ab9904529921307422",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6624ebe52eb1499daa755a1ade4b2440",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6258c4d2dab445d49387e165944df1e1",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa908046c4c34c7ebd4f4f1c62edfd11",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 66,
      "SelectedString": "03 - Qtd. Cabos Entrada e Dentro das Caixas CEMIG",
      "Id": "11bc756a54ef4b69b0f09430c0b850f9",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "82a328bc426e4ffe84900e7a2e5b3ec5",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fe7cefb9b5b44d8c9be612489edbe5af",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1ce87585c4e5468d93ebdd7563c64168",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe650fa36c01491ca8d1ea5bfde1fadf",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "460867fefa444cf8b4d44a77b6e61399",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e820d751b7ee4b76a692f29798382129",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "bbc526d645df4d09982d28c2fa4caf51",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0fadd5de42e8472db946d878ca1f617e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 2,5mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8f8d4ec321464f9fa4279954da2bf52a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "033c6a41db23483bb86e8d8cf10319a3",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d799752f0554306936b9dce4cfcf069",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5abd0d7d10a74e91b022111e97ecb5e1",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62f9447f90814aaf960471f1a8bacdd3",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "37d5b6458ea14ca49db46c8501b8a974",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "08e942837538496cb745ce0a6bf4526f",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "029760f1fa044840b3c80f36575ece6e",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7e6d37994da43d5943fb87452fa55a7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8c848fef24754e0c86ebcf97baa8c35e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f4e59b0a7fb74f439861b4c74d93cf16",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e285902fb34041de81001a4c89665d79",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b3e01543b92435180399c5aea3dac69",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24d96bc411504b5cbce63c08a5d78178",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "9b89ab9eaf2544cba05497d7cbd66047",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0365d3e3a17445359d30084a2795c151",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Preto 1,5mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "12c8880566a44e5d81497ea3fe5053ee",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "996238b199bf4e5e87ef7c9f7095480a",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6393e812d1a44ac8eb3b45ab02c59e4",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "155679a2738040c69d284628c29c5179",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "238a9136a2674cff97e61f3bfcadba1c",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9e3b6032b3914cab801ffd52fe1b3584",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "64996753c8f44b9381c8e795495ce015",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ac80d808466400297aba2b77fec6a0d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "999783df1cae4233bae91e0c68d0fb19",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "080aad95b79a4e93a105fd0d97f62e58",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ee97c57980784c33b4163c99ec2bfc75",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b16b269ba2d84dceb63ec6bb706db5af",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6c4928e209c459fa4ab7616c11f86bd",
          "Name": "item2",
          "Description": "Índice do Item nº 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "611b970fe5b84b7689f85b050c3bc8f9",
          "Name": "item3",
          "Description": "Índice do Item nº 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cccfb11396894907bb23a719173ba73c",
          "Name": "item4",
          "Description": "Índice do Item nº 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ecdbb7c3ea64b30a6dfa55cb88a60ad",
          "Name": "item5",
          "Description": "Índice do Item nº 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60cbb57c5ba4489bbf6039f4c896c926",
          "Name": "item6",
          "Description": "Índice do Item nº 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05d30222f5034065bb5018a32fd9b969",
          "Name": "item7",
          "Description": "Índice do Item nº 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a249ca156da47ab9d89443dd2df9fce",
          "Name": "item8",
          "Description": "Índice do Item nº 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a30ae5aab37d412cab5501ae2fdcb13b",
          "Name": "item9",
          "Description": "Índice do Item nº 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f87b068374c4331b28637c11ebf2946",
          "Name": "item10",
          "Description": "Índice do Item nº 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1f34e8c6d4d4f86bbf9c3fb40479377",
          "Name": "item11",
          "Description": "Índice do Item nº 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5240c939971b42fc9b6a4c4d7fa05e6e",
          "Name": "item12",
          "Description": "Índice do Item nº 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e6ee17585da4770a1cafda66653c7c7",
          "Name": "item13",
          "Description": "Índice do Item nº 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b92106deec654835a8d5889669e1554e",
          "Name": "item14",
          "Description": "Índice do Item nº 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d8ba5a98d56468ba46e30ce2b16c897",
          "Name": "item15",
          "Description": "Índice do Item nº 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8647cd77b60c4a21be4f8b8baf585e72",
          "Name": "item16",
          "Description": "Índice do Item nº 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6abece9f08604389992393e2d9a2e0d5",
          "Name": "item17",
          "Description": "Índice do Item nº 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "795666342a4b4a9a8b1e09459fbb7990",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3a6fcbcf105048fe808d5fd280e0ae9c",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df5fab4e61144ee59b270d20933fec28",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d647642129d04b85a181260c5aa926de",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "20;\n38;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fff2c4e5120442d38eb6a0ddcd35d0a6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3b010d0862a0483cb2df25a9389c6b46",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1f00f0309d334ab9b118e2ac276b6034",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b59c307106314d109a15f006286a7ddd",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c532d041a3ce4b6dbd8a35f15a632ebf",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9171ec86dde4447fbdc5ce905dd0a962",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5ea68abc58274b8a9eac209d4003b2d5",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "cb19de545a694f5ead0ac177d3d3dbe5",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a0a2e443b484ad5bb2c04f25e0654c6",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d324de19732844efb0137c5b0aaa2be5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "76702725510f44eead608eb86fe05b03",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0b48cd8c5f8f404099d9302ab8181f83",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85892eccfe874a5abbf96a3bd62f70b8",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fd45e69e11e440388d91f07f9eb22a2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0264cb85964b4cfb99a5092fc294e8f9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "20cda17e32db4efea12b7deef6194133",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2663b7ae3b924227bd9b770fab2d1d8b",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b81a036eccdd4ef18ba6729e3cd5052e",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2662280bda014cae9db58c6a6daf8466",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "430acdcbe6d6464b93318ad433792444",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cd5cc45d8a0344d1afb7b53181793a45",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "cce3a57b8c6e45458649c7a57d6c139d",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12675ae089ee47f59e9634fa6678103d",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "095a285a9b75414284670392fed45e31",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e9a194e040444eda08dd1890ecfa1a8",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bb308284f1964061a67517f5fd342675",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d1ac92769ef4760b1a9e0ae700ad65f",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f2b9747e9f347b9b4d67097c1bdb338",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "20;\n38;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "5792102c31474414bc37d62ab8993723",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9cd9846f931947d9806fd1ab576e749e",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a4be22b76e642a787f91c01f2013110",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bae4b11f4f44439c9cbadc8a13009aa9",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4458058813b44af39bdee96f51b3296e",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22c9a99f85ed4e45a25a50af5a84ff1a",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "56;\n74;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cfe04e5b74454badbd45285fc5abbcf8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d00a5374d7f4454295339440dfbfcd12",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "58a266eb0e834349a8c8ff566ed8d396",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2eb8300e62942d0ae4d8e099f40aa09",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88866cc45dac4ca3ac97a174f7c1a682",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ba72ce3a47b4818aba440ec3d6cd9c7",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f3a741d8bc004daf9099c3fee10ee27d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a6beab41736a45d7a3917740514c940f",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a59c5194ddc94f9f88e5d6c785a54bcc",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d809a63a93bb4cabb3e23c8d912ca907",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "346b786bc94d4fa1960ab4cd3b3c19fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a07b5afda6e46b89452e3d01935ee8d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "462e6fab3e624ee39f709ec1fd1605ee",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad60135aa09c4708811138a20e4a0edc",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1b6cd2aa45a94da3bb25466207f6918d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f317348c3dd64169856397a2d512a180",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fdc5fda1af0461fa1ef7d24aea21c97",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc15f123a4e341c69770cff3257ab862",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd211242a61d42bf9e1eedf3c159c365",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "60365327e5e34a8d9fc017c743c29f59",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "35b5f703281b4385bca45ebe4029806a",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d0a8290819f4793a1864126db556a12",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f38818b9a79042629779841061d094b3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6733913f44c048499ada827c0821ca9e",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "db26a9c287f249e5a7fc552eebb82853",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62faaa001af94741b377f8e831ff7236",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9728c0a719dc4755ac22c158cb94b455",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48c90507c57e42dd9b55c703c14be7b2",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fdd89884bd6a473d994f2ebd1e5ef918",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "71e46dff6c0e4b62b645832c99b187ff",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e844e21ae3d2440db7c9223ef932b1d9",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "56;\n74;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6cfc8da815ed4356b4ab6430f814773f",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "edbc6b4bf6e3487fbe948edd79247015",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08fc537e6c684ee0b8acef2d9310d10f",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "74;\n92;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5aa9c989391d41df8735d941af6ff791",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da1f9d27b0204b1e87f601caf2f074c4",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2c03659a44434dacaf45dc880bcb4443",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61e1953495994a1f907b55771e5ce0d2",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1d0d40a22c545c08f4b3a6ef4713e4a",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42d0c8914f6e4c03b6d9f51b437d84a2",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b661269aeb8e4eed8140febe22db9b4e",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ea599f2dd89441999ea0d8fe02dfe1f7",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b845f70904a343a88fc673f7be3b41ae",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3f1eb1716234da9acfb56303dd2295d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bc4da1abeea443c8a0c3f79ebb46d4a0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dc1ff008f1764e8b8d0ea68595e9bc68",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0dcbe37f86f44fbbccf29cbdc7fd2d7",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdb800254dc047bda09e6320a0d64888",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cd40d7cd4a394a62b5ffd0ec77461ad5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fce38bcf2c8c4ef5a21a4e8b1d88441e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b32e6bbfb4a48489337f025fe12373e",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25f46ebbcfe34ab7af5c2a219997ebf1",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e1e516d255141b29ff8d7523f06ac09",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "25f095c741a047b38ff443f97a07d20e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "a2efd4dbfcf341b69c7f45c83f50cafb",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a407f1f3199845bbb623822dafa5f346",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4bb27b286321416abc8335a4477394d3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "98f323d6f9454997995be76206ed3e32",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1e70a389037e4d1693a46666c7a34beb",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1fb89a8a79842bfbe9c0a38815bd1ae",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96f35c7e1ff24aa8a087f10c6c09c663",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1983d5802364f9eaa963c8641a67e7e",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "dc2d0a4f4e8c4f42a132daa84ae9a746",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d309a27cef449a7bbb74fed1f602066",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54ef68fac254437ba796e843b4cf1bc3",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "74;\n92;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "f3d17641a3924cf0ae94adec8ca73e9d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "67d0075f79eb4624bf8d5ae8958a484e",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2630199b1a334740a43777cc4f250d66",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd77db0f70c74b77801b9b2744244887",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "18f0f297ec524587a7afff655de8cc5b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8e7d451f2f764ff9822d68315f75e146",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f1ac9f9e38f444e9b3ff8262708ca0d",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad73b1677680425687cc5c39bfbcd781",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0de2679396a3463b8da032e22bf12dbf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "decfd1a1718b4271a41c22252a83b388",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "89d2d558ad774b918df45ae1a83700ac",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3619bd61b5694d29a8c44f5ebf01e313",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b84e87549e44175ac16e3a0e4899eca",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62f9df3201b8474ca83796921a82a988",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6416c23d4f43465ebd6a2477c937ccc6",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da2fecf3fae84db5a691c8772d7b6d52",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48a422ce72444477ab0a14e20afb9ac5",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;\n20;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7828976f8dab4de8bde775d339ecf4ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3abfa997e81f4430bc2cefb0e20dbeb6",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a654304835dd4ed6b489257ed62c2466",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e31c3160413b4bedb2d52f11bacf0e25",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfbef18e50864344b57e5b372f2193cc",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "804408f51b8c41ecb13ab0c5b92a008d",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0aafe501db724b49850281c6dc437ec3",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3870228fede4046aee243febcda8f9c",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc33662e466b4b99bbdc5b03e5c6922b",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;\n20;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "444f427b7d564c7dace894f73d257e6a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2aee8cbfadf44bc4aee08bb1f1e0869c",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "df6cdce3a45f4be99eb9ff1bfc515f5c",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31832606852b42e29f6bf9221ea09f92",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c80b12af43b45ada0b279ef12969935",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "028f4cca5c5d4919bfbd74dae0b94564",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e7fd1be7a17a46789ddc555110353039",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9bc98626bf3b4c8bbd670e0804b89555",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "45013ec8fd8649fc9b8c1a86bc45ff12",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a63c229903f4303870128f1bf52229f",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7f0d4455e4b45b88cfd599aa12da4b4",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63ddb68ede5449879228248dd760ffa4",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bfcf03ca68df41379a4d9d91a5d0b9ac",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84ca55fc5b7446b09e7fc70734d08686",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "413832043dd0496e9abef6b3af3230f4",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "38;\n56;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b042e3423a9141bb8e02620e041a7a6e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1d53c840423148ffa1931b8ffd94ba4d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "768a77809ac14996882e262a7cc96806",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "38;\n56;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e243161d0c4a4db8893b65e0d8bc3b1a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "35509073ffd74fe3aa61ef2c0d0d11d9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33d6c2b90f8e4ae39808c243a9140330",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da5abcafc8114955883e4e09a2967be6",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a7e4e42424643f6afb7260e68813259",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c92bbfa85c23479c8f551d5d41b582a1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c664af3df9114dd28f84121c91f7cc7b",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2ddbdb0ab79a40ee9ef9f5d2ffc81431",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c4000ba8bca4d769c13028ebcb19313",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcf84bfa5bea499da09285c56095a75a",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64298fecf37f4d0cb4a062c89dbb9ac9",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2efbc059d4d84d96855e370f4e74eda4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3760a0221f71403da9f5bf8a43308bf0",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7a1d397cb09540da9d27aed0a25dffe5",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f95e192149f409da42d49668d1b627c",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "075232fb2ec143a395af0002c6485ddb",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6394e5b8d1643319ae4a9d406dad006",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6bef753e97914db796d33c4ae92b6ae1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6cd588283c6843d893f3b5cfd9fc5a2b",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00511fa894e94b879135ae3ece89b8f3",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "92;\n96;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3e04103da0504259b30d0dfc813deae8",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2ddd10184a141189727f634e51881df",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea93250d792f4ae087faabc69c0b5ee3",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "92;\n96;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "178c23889e8a40bba2d4b75e7c908b44",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "17e597e37a08452eb5843e2db1a24453",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "384466872c3c42358f390892a9cd3f71",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f4f0ea93bb74fb2b04e4de902918b03",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ae0393ee6454ecd90f66006020d3f3d",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5f3b4067b57149119c29a3c823eca7d9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "abfbbf55d4ef4c1db11f17b4b248b8b2",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4effb8471f854298a642467c92c50444",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d2b5db879d04cf682e975009d422cd8",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a1802b9f63a4e4c966b9f276a314e1f",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c55c11394c5640fe9aa4369bbacbe751",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0edf538f6c784735a352ae738f234364",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d6a20135167495ca09b75081e3d5ee4",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6eb402a8a7814e9d87af177091e5b055",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34f68ed028ba4ee6888dd6723f35d89c",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "09204cee5213427ea72a5bae1ed7bf97",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "74ba3cecfe60496aba23b8551dd7029f",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5960044b8c8411d993d18596b215822",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86554882d77048289bc817bc44b47189",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "253eb1a29f874899b315610ef3be8fe5",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b38531302caf4209a2e77b671f0a9232",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 82,
      "SelectedString": "04 - Qtd. Cabos Flexíveis (conduítes)",
      "Id": "1c06dc9685274959b7da876e4cb7c1a0",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e73dd544ce044b08b851228be5e7f180",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2dc2b24018a94df98dbb6fc3812cafe1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9f7b6dae275c421db49294cb0dc09216",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7dabdf2dee944b9a4529e3b4422d02e",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77454c1e932e44598908345533703066",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef3c1e6a3d004adcb090fc9ec61a1e76",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef90a126357a4fc0951ed931eb14b5ab",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0e6d9c3cf66b4319981602cc42ab626e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f9505372ca4486a856d7098cfcaf53e",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "debb951e87bc4a91836355655519f418",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cec35643e2134a5594fcbd17f6a97dbc",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d456c4453014dc1b03243ee0fef8b30",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96cbe4800070446aa1ce43ad9b630a74",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "29764d7f12904699ae84b143a62c98ea",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "702516ed0f9e411883eca2fca5d280aa",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\" \";"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "0e9c300f2eec4762855177c733dea857",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "25c7cc864778477aabe4313405033883",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "713f1b8dd93b42e1a9ec6a428c97ef08",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19a02e2a5bd64aaa9342398ed5b39ec0",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "49012652526947aa84c1b43648136dd6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "224b8e0cba464476817469cf0ea9761a",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbc4ac4dfd054254b7bdc282ac3434ad",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec1f2034dcaa40e4991ed2c6735093b2",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dc2ce1f1f3c043b1a9ec24714029f76d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8809fe3f9696454bb748500f340d0c6d",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "641621c6e99942ac93b1fe5647b71f48",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e7b8a1efaf7742ff909c9e5e587aa256",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ec9e55668a7f4a0e8d442d3b9d39a1ca",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4ad5035b0224d939ae4ae1a62f1c7f7",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7d0442efa8c242f98d40efcd9b049187",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d07ad7861d6f45bb95e9083f8960ab30",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c46b189e6cb447bb9151b386c69a0756",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "457387e1fe9144f39340bcab96bb0911",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "628447754a4641618c64916cd07ea87e",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6db487d907a14ba5b8c632c0274b5c1d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "27fc6846452b4906bb0a13d539a5205b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a102001ab5c248c286ffe7f6dfc5f834",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80de088a285448a6835e6b57eab7ceb2",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d658ca84f1494e36a028a03a9a99f462",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "393550e223704ade9de7949337665a34",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c745ae57d25b4630a70cc1aad10f4ffd",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1e212fccc8204abe8b59d734c1520fa9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "78d8f4613c7b41df85f316955c95e199",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf913cbb54484846bb570ae5ecb38e0f",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2b9daa4628ce41f2a0127e603a9feff2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3af13935031c4f2a9aa01198755265b8",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2c0e545a5584a3b803340d7b911a200",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2d7f9d4a6fdc4f94bdba275ffcf3087a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "39ec6df3db364097a68d12ae8fdb6155",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a47626ed343644fa90f1ec298bc2efcb",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1dc29b5614514e3f8036ba7c022da2cb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0571ce74d9044452ae8d9f6ed624e123",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f35b4b6813546498b52b15985d4bc82",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "93694b93f7ed41c6bd50fa8502535d74",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4fabf3c48e664a408b95355095b08655",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38f4704feb8a428d86b7bd21d7f588ba",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aa78f6cff5df467e98b84983c865ced4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f4b40975664e4794ad4e3833db19223f",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f694e52ea6f74bc9a97726116d30853c",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bf20593eb86e408c8269e1a00d63680a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d0cd97d93a0b45c49ba37caa064c82a9",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03bc17a067dc4e0398bdd044553181ab",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d58508d5927742bd878da7beddecfcac",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f38ed0d0ad084ffaa378b849a4cf3b36",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "255f4836ff054481b3835ced72b32d36",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f812c9b855f14e2e8ac6989f052825c5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e33ee4c485584d26a3f3b079ce8cbef6",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c780981121945ec824c022a6f6ccccd",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f26ce196f31f40a7b97f0b97835c6f34",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d0fa55cbe1ae4ba6985895308ad9517a",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f0cc4c505d64cb1952ca96d5d196061",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4096523e1ea74e199975c82821ba6503",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "26f091bf29124859ac007a6ee47da2a8",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fe882872f0a48c6b916b8f39709db4a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c1903a02fb07450d855440d23ca69c71",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "642c4413536a4a61848130422f0eec44",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ac43778d2c14c3d8da72c9c140541c6",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "ca7c0210e75a4da0847796e1728da419",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9bac3307e99843cbab009dfcd3b5921c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 50,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "32a996a04dfc47f5a06780e11d82d9e2",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c37d55434b34875ac5d03d630901a8e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 70,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "37bea85d49e5492bbb8c8d89a1cde8fd",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7aeb90f62fc403dbdcdd78e6c18f54b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 95,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "b80a600aca174d8cb99b93b4ade06f7b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "016824392584446ca031e39b484443e7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 25,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "e129d36377fc4f7ea58090786b18513b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "43dc8999ead641b3bac382e25fe74f78",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 35,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fb7d5c15de9f4ad6b583308c51f379f0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f374baed67944e8b37fa5a5d5fa6d92",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 16,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4b3d5f2dfe724eb0963a0a1376ae90cb",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59c7601c2f2340968b8e2cdfb3958159",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 10,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "669c6a87132145fdb301775968ddbad0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2f1d65b64c3c40e199d89db729348de8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " Azul 6,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "74b403977f3d4935950d10c7f0d16b4c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4bb78b82beae49748e0b36f9b79b607b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 4,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5c32949207994695a0386fd615d94eed",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2396838f69a944f6b4aad003c29edae1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 2,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "04581ac78cb24ad9b42a8654a74204f9",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d738ec313cbd4ef49a187e6392880f63",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 1,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "cf3be8306204402c81150f9c234cf7cb",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "16f8d92c4a0a4bed8181909f5686c82b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 500,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "21d46a587eb943dabb845decd6908a04",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0135270f82ed4447adfb1a36942dcdf8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 185,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f16fc1632cd144d18c1a73277162430f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80e8b51b545d44d18c805c40b783db46",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 240,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6c7e6936cd134c859c1df1dc9b1d997e",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "999f0d30e2d74921b7f895f1e835b5c4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 300,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "0ab78e9a766c4e94982e4075b7546e39",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e94a6f30d6ff48c2a49f0d517eae7ef6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 400,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "89e76357d63746fe879937928aca628b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2fcbdfb9aa5e4b7db88967b405ec3e77",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 120,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "cace1f2d02de46d2bdc4edd497ff86ff",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68758b1afaf741b4a4fc4c863a2e8ab5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Azul 150,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "d9d0dcf190a4449782bf1150a560e6d2",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "89c04e4e7e744586ac0dc572e6c70dc5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 50,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "e08a7abfce054c64916dfe0be8ea45b8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0112409df20346d1bc7c66e299d3f03d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 70,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "22a2e4ed3239447f8c3b0be1c502b1b8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d5dcac603934258b1316c4a4d1ff67f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 25,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "ed15be9fc7c9461abd80c50824c309a5",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27bacce377314a32bd43af21d3431ee3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 35,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6c2065b963f646b5ac067c8a229caa03",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f0f9e9b5f2734b2e9a606e64ce0f7552",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 16,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "31db8cd7afdd463abee23a9d40ae4fab",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "536c26b7cb7a420ea900d43f714a54ea",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 10,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "62a1182722a449a1af8814653c5fa6f1",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7df570949e4f4375aba98a2dbb34d44f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " Verde 6,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5b0ca05f498443e4a6fe2777c345bc8f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "05d9e0e0480640b0806ecaf48e803a49",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 4,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "2b8968f10df14a99b63a666ce1bf0d84",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc55be5137314e40af1b8bef14fd0f17",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 2,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3b483b5dacd54af785d1c99ad1b737f8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b715613891cb4997b388357c83058735",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 1,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "759a300e556f40ee93c7190847284e12",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "78b819100a3e4705a74ee6730c97dd8f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 500,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "2ac355c8d8ff4028960cf48e9fec97ad",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ba9428b603740b181eeb04e076c5a46",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 185,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f6a7e5d705a94899aaced7ee9c39bedf",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42071ba21393463b964926a16830537a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 240,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4c4a8645ebe54e379752280e3961e9e9",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b973d48b7a134bd3ba3f883a067c3bbc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 300,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f5fd3fca1d8e49f6802293ad0f362cfa",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dfa6ec9e9f0840ec95f5bee3cc2e0930",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 400,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3fa0d74d876e499a999e107780b83e7d",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87b4dc75e6c541d69dc67ff362616210",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 95,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f64a2129538540e0be6602b5708e2f91",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe4f774a978d4655857f4aedeabf39ea",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 120,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "061eafacd7434118b99778d6428e99d9",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "176091bc57eb42a7ab2fe61359e3ec8e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Verde 150,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b371fc6578ae422ea8eafe2ccf855d49",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e72facb3251a411cb3ac204f45d23683",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58b17edf3969481a837b5851d8c4ea84",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71ab95370362424e8518c9b51788d5cd",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b127d6c2a62b4942a485a8bb5a6c19a2",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b11fc1404bbd4007a3d5fb521b80f62f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0b2bcf6861ac442cb9e839a165d8bb58",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29b5078d849a46099526f3f164d2c134",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f3bab0951124f1fa033751cdf17ab97",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82440619af544a7c9df908614c1d0cff",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c08a031cb6de45288fb2c9080a64abf7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6a911ffdebba46ebb4e4cb28a2af8499",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2d7d121fe774af9906fb028249def97",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "981f8316f458467ba1a9bc3a234de967",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0de3b776265e445d9ef0594015c976a2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7a41aa1bdb3342fdad8f64edbbaa5243",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "710ebbd0055944c3ac7037cd6c2c4856",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "639fa97deada4d53a72ca592ccfcf1fe",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b99cd0a199ef466b88583398c04067bc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a73000573d3c4c969b3217806aaf780a",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c27d82099fd447c1bdb15b1ea8a1edea",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01ed5a9f43ff40f2a186f3ecc28aa9a9",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d137ae066c4f43078a647c2f8e3436d0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "23ed2a1fbf2a4aa49cac3280c77889de",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a73af23a4eb84a7893b1909b4da38d14",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cbf5a8ac83b41efac060512c54f75a8",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8dd2db94ec584b54b2b6fd05347b6fa2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fbf2f3bb24ad4a569392f18ff3c1a9fb",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4c76e5029914fbc811e7592837bf4bd",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "559847ec8bc64d80a74a8895fae25a53",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f6633a57ed6f4cb5930d77c4eb728864",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "580d39c045f7479483cad47bfdf44eac",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f0e07ca72c4d45b898b6ef02bf32997a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "811e16ebb48b4dab8c9d8456fc92392e",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d31d4ac0c6784f12967fd06d2e82079d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e2bea0baecd345bc81516aefd66c1a9f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "084ab3b3e7124a02883c80d5539542e2",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "995dda1f1a0f457e98ff6272ae715d3b",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fcb85e023b942148f333f5c2ff40d60",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e271534b82e84fb1abf2d692792d1c7c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ad5bbec687244d928906c45cecbd3d70",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5fed68219aa841f0bf20843cca2b32ce",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9cb27b25d0e407eae4608db815d55b2",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c05a2c5df9904c44b0d7a6e1fb123bef",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "265fa4c768d945b2a86431cb03139e77",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7d38592318144c3284da913f5bd93469",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8c89e2cf163444b7afc4ff01eaef4bf6",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fac409030b8645e09415ace37d1c1d93",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55d57282e4cd46d8972b1a42022f080a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ffa716c2b784e079a3b75225badeab1",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "34255ded7c85469c86e03d88d0496334",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f28108faf0f04b13af3f9dd781a7d3d0",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16aba5547a0f4d4daab5f72ab6b2a37d",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33cb887951104cccb951572e41e9c17a",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b28df4c0b4e84f798624aebd004d3f76",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aa887b4eebfb4285ab9593c0daa24746",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2b454b6ac8bf4448917dfd8462bc52bb",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdb506dd9dcf437c92d4fa077fc78b6f",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67455dda0ecd48f48310ada4ba5ca618",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8005a134207746d4bbc50ba77b08c226",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f99b16d7864a4556b989f728536837a2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e1da1c5325674e3c85685631c463af4f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d798fd374d404b4bbdd6065ee03bc36d",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3bfeb97f40a42c193548cd38b0d6745",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5ea428ef53a4018a845c0e12d00bc94",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b3c901807d644a638b0fa9753f5577e6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "11659ae0463944dea54c823536f54173",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea0c5b7621f545e2a28786647d8d8a23",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0fd82a48b6b438bb19b8b2e7de3bd52",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac18fda8e4594fdbb17becc5c682a901",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8d52d3b5303347209c62d16d6ef5b873",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2988595ad2d04442b435120ca2a77e89",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "930401c058c34cb6947d4c1b0b330918",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45f962b4da1f44dab6b334359a3dc815",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98ee67fb80db4a66ab63ab5bea7ea940",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "010e57f4c9d24f6a9d18bd1db15b06b3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "718666684dbd489588de7ebb2846961c",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42724584f3ba46c2bf7187134ed0742d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d96dcca308e44eab1e41146142d5078",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aa0bcbc0748e45eba407fc1004d2d54b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e9586dbcd2aa4ce086b88456dde9eef5",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e6574f6f52e4ebd9ccdb50f0a94e0bc",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bf24d15145f48578980a2bace0c4f70",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "626f0b4fc1e84e608757bdb4005efc4f",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "741d9229fe5c44bebb0ffe0a9d4c985e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c65c80d5484c4023bcf9e75e3f2b9b91",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1a26c85e1664f4aa488ecd85ac30bfe",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1cff71b2c4d4915bbfbc320a0ffd948",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2454b2fac724eabada7b0f9da8c23bf",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "089c19f8def14d5986b48436baebfbbc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1a88e8a44ce04185af46d16ee112c5c9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9fdbc65a6e64a4a8d1ad7f9deead1f5",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a69ef050ed34e94b2ce5f7757f1db80",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "70d54fe59fc54ccc9e91fdb59afa98ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da690c65e17e4ba5bb6ed39a74df62d4",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2432c7d885e4ab782adf702396bf364",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8ac539cffa246029ef96dc785e2dcbc",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f21b41672974c5d89b277ef6d36c1ac",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c15a11187dfc443388218665115ee9f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c13cb2226b2745c6b2e99af90cac63dd",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b51f37db2d2e4bd9b552ea73ae70e5f0",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38322ad27bd448e2867733cecae06eae",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6474d5b31db455687c52cf0354a2ecb",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "38f528c295594b8b94097aa6d2b75b0d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a5c32a0f79444b13bd43d0aab1c26918",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f49c8b662a714568927de9bc33c4c0bd",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cb6af4861f649c3b3a3a53a022a08c7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b10f3f71f60745d390a3973d509ac396",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "de6925c2c541479f9293beb4a2d38d9e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d68407298754c2682577affe332bc7a",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5c4de6142ae4ba99aa57fb3c78870f5",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bb9999c3da643c8989a7a289e6687da",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0772e19c200e40f8a61bd747d8c1670b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dc04b722e86547d7925058eb17428a05",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "349aaf7d900c40cd86e37883c4acd44c",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd551273849e4964a34d9ec8dffe7167",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "112ec39dfcff4850a118f9d62e444780",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "40182becba1f443dbb9c602a40aaaf4b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fd63b0c7acbe4743b8ff3a0e17d9c5f2",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5360ff7c3f2445f5a5fdf01d520f9328",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f38eb5a97d1d496aba833544fcc1f56e",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9526325046554a11ae18f363d1652eab",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "431611a9f58a47e587b84f27d6cceaf6",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af41d692f660404c898304c6b078fdb4",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e22418f74f5c41d0b1d59f0ef41c0ef8",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d49019c09f104747a2db1622469cdbbb",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7b8f230c012c4e23802fe40d38f62f18",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6a2a33e0965846a38aba3bf870fcc791",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3078ec796df9498c918a0f9d9e61f202",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42054d55ee52487aa349f0f74207ea75",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e5b47e6000044779abf5e0128d7af01",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e8672e46847e4835889c6b4ab68d61ea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dd32f1fff92e4342975e8ecb48e77e27",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60daccc0e2d945e8811d606abd9ebdfa",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cea468b33e8f4156a593bbef311e14e9",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9e323f93670d4975a41878c56d415c12",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a0ddce5f26d04a8297ab730900ac0cbc",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d83ef63cfba440348ae6c8797ca64ec2",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed798552f21a42daacb05decebc99f6a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "348567e938544569b012dc44bafa9a73",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "73183a6ef9fb47bd98fc6faa0c2f17c1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c8bf6dca787e46db9a601f9270592bb5",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e694d69d9a646e6ad8157d1087f1867",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2a8e1401364491b9d744b57a004206d",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb4cb90fd4af417dbccbbddac40c22d1",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ebb11d6277d54caaadbe49175eddda89",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5a7f831db89d440d89b05888230cc8ec",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85717213d8d943e0b4eff5b8aea77d6c",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adec5179281246ec932457bff147a705",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "979a5b4654f14797bb0a7f77610969f7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5585c2e82e1649d5be6e8ad61fd5ad83",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44e6cd1a19014a3187c09446c46445d5",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d35508b19ef472ab7f0dc5c06983d6f",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d12069cc4bb248c098d83cb350ef0bf7",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d0e83e88505148d3becb1a7c63275d94",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8a22dcd891d84418a8f1d074746b838c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0887800d9e09470aa270914e559c7489",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95fff4f3269d4f17909ed0f1337f05ce",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e54c52ac1f2d472780be19158e4af013",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "185c9a7e6ab64e439cd370f368b8445c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "14c5b44841b24f89b8313ae7869ec36e",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebdab49c563a4c418d6c5c0ceafdf18d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25990b158d6844f8a16bdc7abc2715e3",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bc2e1f68ed9d464380c8602b370e7a40",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0dcd4b0338e54b588b7bf69d3db370c1",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f91178521fa9464a9e52f95ef734e04b",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9810f46659a7488981f92818a292cfed",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d25a79ece65d4ef094f09a89d7375071",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e4efd77bfac743839a80d5f8dfd08b2b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "75027f6e420346de8b2304b1b6faab4e",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0968c8a9bc864d36988f1bdca5393be9",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bf09e511df042fbb63ea6b06322e132",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fd09b56f0344909892d334658ceb6af",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "08ae709330f94caea4cff456027120ff",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c7c5d72711c74138a00e430386e40c11",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d66b2560a1743518dd4b07892860216",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21096325a8f14290aaf324d775523ea9",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "59b9db125cec46808bfca0f4b2bdf093",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f3d01fad9cc2483796f873dc307b17fe",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7cc9129dbaa465a8aea2b34bb9d4a1e",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fee57260dc3641208440773ca016b2b3",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5eaea7e3ed834a95be806aa91dfc484f",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "92e7b0e09c3c417487b86c404dcbc33b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "403d4a062f1c4dad9880d290a933cf9c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4e0d59eec8343f581c782196804ecc8",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e489546a83c243f5989b509ad4c68eb5",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc9e784234c74046b58aab7849cabae1",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9ee63791298e4b4bb7ebacdd88ae2657",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "24049c6c8792424e8159699839546295",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d724ef012e347c98ae88210a284a29c",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc04909842cc417ca18da5baf65d7a5d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "931b1e762e3e4f1ab3c0c5ebf3e834c6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c4a12b5c00bc45a0bdfb5b292bd2345f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ec15833fd7f455faab8ecdd5e996de0",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ce186099a0f405bb494afa612ba393e",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d69249e227c643a19abc1768bfc6648d",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "db939a26dc364d4c917f6dc3e31a0735",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f599b4f7aec54492a806282740a31e66",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff87bcad0ef8403eb790809bde193db9",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cab219c7fa88405b920847416e32e7a6",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcba2a89d6944cf9a84396372eb9a854",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "10ca2a7ceadf40e08fb1ad31d17b3e08",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4ee642ecf7bb48af9a14a1b4262c72f0",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afa6475b8452474faaa9af4d55337a9c",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b82223ddff024fd69ffd9e881e35cfe2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2c1a1322d2a24e97acbdc3b5899e213e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e6467bafafc14a0da53b61b19c4beddb",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82d5a957755847b3bb1ddbc862d79cd5",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "589477f6fb184d02bae9cb24b4d75523",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "990f3b3e825040069552382d4595d689",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5167c925d44b433fad2136eb22e7ce42",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b18b2b861bfe4b9b83021c919870dc97",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a90c6e5cc30846868c75f5625ee0bbf1",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05c14818f85645a3b2d8cd16c9d14217",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4975e2d27d7c401fad48cb7ac5cf0a93",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "72c92afb4bdc4a1b83d05a5ee334ae17",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "037ca443f4ae42a48393e8eba1e9440a",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fa2bfefc88140489487e75cf0efa7bd",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "358fd5846e634cf19e3aec361f0278b7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0292b2829e3e4f5f97b0ad7f2e3365c6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b4f624310f1e4b3585965136234d7500",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d43a963f0d9b472c95dfcbf9c8877a60",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32e74d05e1ea4e4ca692b6f639888180",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5f2c742973b45b396d5b2231b70fde2",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "748b1808144748f6b91c9a2883a15345",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c2eb7b3ca1274a50923189d5c9dee729",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5782def923f24c7db8c3649d3aac0e03",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e094bd7798d54ebc8be09ec775b08c76",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6d5bcfb43c6642b49d41b49bde0bacea",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f110b4d1932434ab9da7c2e738f01dc",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62b8e32a7d1542ddb8409b05be9edd3b",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c94e79b96afe4631a7822cc25397e7cc",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "894ec82cf4714d6fae9ec3537d6a129e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d5f284f1052043ce83f0964cf5618c47",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8f57443fc8041a6a07cef48a0cad948",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d89f29813e974484a643a6c4e854dca1",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85ab0f1edbb14921a0aeb44549faca4c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a9b237828a4c404b8369e3fbec76f178",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9c598722f0554ac68b7f028677a94f98",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e95bdd57c3fd464faab53bc59007f5e1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f574eb16ecd483ab7cbea87c0fe39ed",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ed0ed73ea13f4b7ebd8810affd5bcf0a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb435d1a40d44b74a2dfbae19497a3e5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9475894c57024487a1cfaa835e7e14fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "86791e7e5f9143c1987513bb0973a3ba",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad24f9f79d51438bb05843b82379a0b8",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b042e6b3cfc4f2987887ed9b6dafad0",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1ccd1b1626f483092dcb15f8b243c62",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3e3d71f0e904cf1b19fba650ccd9c10",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 66,
      "SelectedString": "03 - Qtd. Cabos Entrada e Dentro das Caixas CEMIG",
      "Id": "432f8ca55410470ba9f8e97d0521da8d",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73139cbb10784ff495fd4eddcd338a87",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "5e7c6429c8034ee5b106035906958ae4",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c4b42cbff0e54651847de81d7cfc9327",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bf6480cfd014ee7a132bf7093ed94c9",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e22a65ec0e6342f5856a1e7ecfa8f25b",
          "Name": "item2",
          "Description": "Índice do Item nº 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a62c8d8ac5be4b00a607f75c7c230a7d",
          "Name": "item3",
          "Description": "Índice do Item nº 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d12e4e844834350884879101677d080",
          "Name": "item4",
          "Description": "Índice do Item nº 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2a54673ea5c4d2585599092aebe88c8",
          "Name": "item5",
          "Description": "Índice do Item nº 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edfff6be54be4e5db940ee5071d04002",
          "Name": "item6",
          "Description": "Índice do Item nº 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d90efb7e42ba44d8b8b9bf406a38210c",
          "Name": "item7",
          "Description": "Índice do Item nº 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd7550708b714241bfae654febca80d1",
          "Name": "item8",
          "Description": "Índice do Item nº 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5b5cd8bf66b441e9f841c2c73a27da0",
          "Name": "item9",
          "Description": "Índice do Item nº 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37015a315c87414e8305cb68554f259e",
          "Name": "item10",
          "Description": "Índice do Item nº 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a0397aaab294d21b034b8e5c007353d",
          "Name": "item11",
          "Description": "Índice do Item nº 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7632763e2164cf5913189e8080af46b",
          "Name": "item12",
          "Description": "Índice do Item nº 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5d8c5f7cb3c41a6b87c751c9524bbd1",
          "Name": "item13",
          "Description": "Índice do Item nº 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39616ef3356b478dbed22f69ad9177bd",
          "Name": "item14",
          "Description": "Índice do Item nº 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0065b4a9c6f4a71bc6fd888a8399795",
          "Name": "item15",
          "Description": "Índice do Item nº 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66354f5af8254a08b0a571d753d6d52e",
          "Name": "item16",
          "Description": "Índice do Item nº 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecb49223aadc40dc8827eab9d8eb03bd",
          "Name": "item17",
          "Description": "Índice do Item nº 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "243867add70345b08ea8291e7bbc5317",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8af2fda5aedb4cca936a6610218fd574",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "67ba40faa16c42c795b4dfd42b3dd9ba",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e8778755ba49e08b66f6b923b94fd8",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "decd4825d01c49c7a83e0df4f3c59d10",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd16a13ecd234511a0f8fa2013cb26c6",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc557631a7f64dc9a5edb32651ffd9bf",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "369fade943af4102bfc35728466ed8ac",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "40b355f0d9a14a65966ae42d9e20ddd0",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8cb893b055a14e5b80e79dee1b425d26",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "caba2b5cc81e415cbe8a5f23667fe09a",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "993aaab29da340d39cb90bd621493010",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "22098bb9277d47c1b59eb3c82eb6d349",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7ff2e7bc0bc4651a38910e2776de81c",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8503717c1244904946abcf3e32c11ad",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c913d4521848430e9a55678254cf63f2",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04003ba5ae7c4259b5b8e38ec6cba248",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 82,
      "SelectedString": "04 - Qtd. Cabos Flexíveis (conduítes)",
      "Id": "2a73868f85a542b3a1fe3e220f338d75",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3eb52c33560e4541a29a721b83243fdb",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "36b4f9e751c04965b515db8430be5619",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "81a2232712f44f608b8dfe6a597a65b8",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b20e88764ebe4187af81fabf2a11453b",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08354a624dac4c9bba44081304b6969b",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0119b66e4e284a86a866685239d31e6d",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c6b32cee9c9449dbe1ee782cd2e6b9e",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "16caccd4966247b9a97774fadb9539ad",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8186371973249b6ba656eb81cc54e3d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "642b1474226443dc8412830633bc4898",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8ea2d731581144ec964498b4243d755a",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeaf65fafacb47f1b780cd98ba40c2a2",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24a68780c6f24508ab194dce16f3a3c4",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "eb05030585ee40cfb76a1b950e9b6403",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1138247c555048c8b4f3b5aa523c424b",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\" \";"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "e6335fa31d0847179a0152414565db23",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "72476ab817b64b9984572c3c694cc25a",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fb33586526a41339fbd4505ce5b05f7",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "497ac25c58494d3fbb1c9e4da055073e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "cc12c09019b54b9c80e8743dea6efabc",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8727e7d54b5d4b79b25617c5f1decdea",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e4151d42b0a474a94191c9e0c454fea",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "68db88fd583041aeb539027fbe53c992",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "44984ab0c3434fbfbf03edff861c2fe9",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c77ac53b6b114aa087417a4bacda8835",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1e54155f48084e4db53429b2ac754ec7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7521bd4b480841e0afcfda1463694015",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6813aa6aba18452397fb7589abf11c45",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9be2748c42ce4732a3d1a696f3f14b85",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "049a4f0e095d4a538a9b7953d05a7e69",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ec15d4a82bd4127bada8b03f5ebb5a9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c50adb14fbc4a5aada0460bd5fa5198",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ce5d24de48f04122ae38105e091dff4f",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "779f8536cf6b43a482a3bec875d740d2",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "43f6c93a33a347528e6e5207eea15c28",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0edf36ba34464295ab4b48b908df7358",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f30ad88679134521a156166486f7c508",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0415fd8a84f446cebbd769d64b4807e9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8bac4dcf88fb404095a41ed6a683adbd",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffadfa7ba56545328e844a39382a52d9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "49238e81565c4fc48e07f026f7d8d3ec",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "aaad8078db6443b29fb5d3deb10d194e",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f19cd26f3e3b47fb8bc76db4bad4aaa3",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de4c9ee4132247779ed15059b0a87788",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eb8d43494a624857825609ae2f70e209",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "803cd4244f4a4c1a887e4197eb2103c5",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a0fabaf461d94fe88a4bbc56ec1e400b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e58f45acd30c453db2c497e74be5c820",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85f5695b10b24ebfaab3ba9a1ba1e5ea",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5eb0009f5e134692a736201cd7e28354",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "927837ddb0bd4e40b08146e7fc977b8a",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "740c403e2fdc479190e76332c761655a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5c79b3460093445c8d45a52254145746",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ced686d881974fc29fd467e44276ea69",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ccc1b972c434ca7a1c5bf6867e7cc37",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a0193b4bd438446c84642da184c181f0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "23f73959fe0346febc394208ee004b8b",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33ec97935baf44f8a5579af06f495496",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1c12735526214e01bd8456206ab83007",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "835c42615e6e4bd092d4e845e6224b28",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fe86eaafb0043ca8447184eda60cef2",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e700a1f561794d8a905dc41328ad6b60",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7f101e6e94194011a1e53a47deb0ec1c",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b210863553b04dc9976af9cb6486e2f1",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69be4b3aacd746beb2a3371bbcf8ba7a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "080ec0e7627240e6aebeb14d05bbd87d",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de5bb8a167d54d308ec59c00594dbebc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "81b969588f2946ab8e7dd0114dafd060",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9177d58180e4ec3997d26f8f85807a1",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76cb3ecccd5149ce88945cfb4fd904e6",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95b0837cba5347efb89deef768afcce3",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c5c4f2cd5c1d4bbd83010e34526e0414",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b7f15c6143194bd681a14cdd17df81c6",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ede0de591e934714824d7af44416bd0d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4acaaa47cd804f3d87af2a94f044a835",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3255682d6b824eda8653f3e883a74b31",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "187c0aaf1efa4a40aa469b9194ca9a1c",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6c8f6290bbc4f2296e90ce665b1b1e0",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22b195e00ec44accba4cff7e8c7e5625",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e16a8084d8784e04b482121ad52f1d9f",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4e6f7454d0044c4b92f696c4e0238c23",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6609c00d7202460f909d543259e3b022",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07992821b7254315ba7a79a9a10d9d7b",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4daa562dc2394172a86be478dce694a7",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7494ccf9d9b84658afd521e482f9ede7",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "509c8104adff43788c1f3dea34cb293a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b563ae30c20c4d0091fe9b0f28bd39f9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71d7c57d400843349f0da53fd4881c24",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fad1098ea9d44b709ac942deb35d09c2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "51719cfc139647189038895af8999cd4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f4bf70e82e1643328f0e00dc85976b03",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa32a167238140498da177530e71b84b",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d8614cb702ab430380441963484658ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f806e9ea99a244668a9ecdeba5064ff5",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d50101d8ce74d61985af088b764361c",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6599cf262f354ff399771a0ed69ebefb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ae8d080ec6994ac98934ec481fe69546",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9129cda56fcd4815b108338b4ca6cc14",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5f3ae5fbf4b4f0c90fae119d5de6573",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6bab105e1c64e6e9ac8bb4d9e0a18bf",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "039f446258fd4e10be7392a06eb57e99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8c13fc8703114f9682245bb39cc9e681",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b45623207718409cba0cb338e5cc31f2",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f73c65260a994fea87a924ea7d9a9f19",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9939793c3f6416db942d3c202414932",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3ab8f15d0cd346b08944fe242aef7d71",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "aaa6ce738d4345218169f661ef39bc5e",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbb612880ecf4a6b80be45e69abe2461",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "334f3a5edeb546cd96810ac72167f5e4",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7c8ba4f1930c411eb1098be06e786222",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6ba827a1047b4da9af05a4b234ba9cd0",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf948fc2d8034052956d5e4c27c82562",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb3b13a1f72b47289c2be72477346795",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "53f0cf61c62d402caf05bf7dd29c59dc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d61c87d2feb14b5eb4b480d1a106f031",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17cc1d2e0b2043388a8a7d511111eb0e",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a640e5211ab0458ab1772cb8cd9a2fb3",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ea3de33b637343d98e2150c79e17e88f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c1b82a8b0f4a40a5b5d50be93130c7da",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9856326b4774625b62d9ccdc833ec28",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c052e544a344674b43e301cb8b3d6d5",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8d6766be39fa475f9ddc809421ab7866",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d9e7e86fc6d4a7cb36b19accdc55c81",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79123844d06c49549e217e70284d05a2",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cb2a4b236eaf43a9b868e61fdd1bb002",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f99aaff980d642aa92bfe5492a05f938",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8168c985000644f4a5c3a2e22ff53d19",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "64ff351967d34ff2ba5d11b14952072d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9a4fe44d079b472bade2a2925461e608",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26eb3b2a1a6a431684824e4fc0a10859",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a9199462a0c142ca9e5b639841ddc6fd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e604201d5fb34c75ba506189cf59c79f",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a735c53f0cc24da5928e05b3c9189e14",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18c08daa51304a8ca7b37aa264ab7e7c",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c530e53c5384bc8ada07c4ea1425dca",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f6f0867ea29949d28dea9013aec98cb3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "730f3c5ce33e437b91ecd64a38793584",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfa250d90e2647118977f0e05c64b0ab",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f53bcabbfc074cd6877205718eeb2989",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fc10d6675ba43b4a35c1655f379d784",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05472bfdd6804097ae4f3d92759aeac8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0eb7df9a2e444c83bca1df7166a65b1b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c671c156cc3847209d676f15b3a5f564",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3e24e1e7f2a49b4a171cb21c41733b8",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff188926b2634f8195b611a4da523080",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1321b8aa73f2470391a79a134a85d229",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0ab66292c8a347d4866590d72282738f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fd0c1a3f61e43459bfd2eb621e75e6c",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0148bcaced714098ac3b5587bc313fa4",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff818085879e435d820356d43e1d10c4",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2ab851c8b5194d36963ee82f71448f07",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "39b416f215b24390952d78242772fba4",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c567df6d3e4049ebb69852afb136d2bc",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "710b028968354a74a84b07aa2b00edcc",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7306422448749428a15af52f638ba38",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "64ba8ca6d2c246c6b11ae0394d9c4955",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "02adea033d8f4110a689bd3bfcc93f35",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2c7f48a60ef4ea6b0986f63ff7d7f7a",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "950ed712d8ad450b82fc9fe9a2752521",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed947ba659e94be1a656e71193a9bfba",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0d712f8d7ea946739920af46c8d64f6c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e8d6f5fdb529489f96f2fdfe3d0944db",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4da24a7fdafe424faee002db73b891d0",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6943b17e71d24b738124a37c1c04c74f",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d4febf5ced4dc48f2e354905660074",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "06c4275b367547249b70b8381b68c7ea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ffa3c0e4fd06463db7296c92e1df78ef",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b4cb4c6099147338e563a1bc4e6c022",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7496d8df76de4104a066f070649a7551",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69047cad11bb4065b5c96eedde007982",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6fa67fc27b14449d8855fb0542d8e318",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e7c76c62601e4dbf9910e6441f2d167f",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de00eed4dd6a4c3ebf3285b313d25ce2",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8b7e291bb24401b8c1beee88c6d9227",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "346265cb06024658a3d84adf3c541757",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "291db59c84bc4feebf381f508002ea72",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0317d5ca4ea74dbf9c43ae2155076494",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77776ac36d0b4ad3b44bae91e2f97c17",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3acb14b60844d82ac66f97b8cb2d3a6",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c43df2c23bb940edb20635e64dd5ab13",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9cd49712f6844efaa214429dc3649bbc",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a95c4b9c490d42dd92cca7858de9956e",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "765c20ffa5a24a24a10afd80b7a480e0",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a57c3bc4bdc8401792bcdc72bd763fc8",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4c611f9fbff440abb8e234c15bd6bfe5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6dbeb0e4236d4beab544dad9707174a2",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccb6457e7df84a68834dcc5209405571",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3d33ef4441b4c27be2ebccd4472502d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4b77c86da8a0450ba7a959e89ccbdf1f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b4fd1a8ac0ef4f2b83a3e56c061ac5e1",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70591653c6f3449aab2a90a7286d3a91",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89ef9f4095f2471b8ed1e3559aa10767",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5b9da93913c4a109564fa2ec60a6cd9",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "444400ccc4504896a37d83141854a038",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9234e7bee2274dfab88733e980675595",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9061e0ed9584befac81c4b4eba09afa",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9faa6fd6fdb44c49b4e5293e898ba99b",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "609ab2b1f4ec4558b56754e97666b45b",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cc2b61fb17964e33aa1fc89a6789d5d0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1277c6268562419bb1d377e6b88f22a7",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1547c2627d6c4c79ba580608a66eb3ca",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f6c9464da154363865326193a6978fc",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05cdc67247f746828cb03fb7e7cfbaf5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2181b3cab0674982b979d74c992ef70f",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0fe08702edc47d69f909a61a975d99c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f9e2c7e5cdb451bab6630cfa17acd1a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c630a3a5edc4e318ffa7a66178e8f43",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "72834b0590194cdfbb3bc9f8692de523",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "49679fa676764f2286b7a1c8a9d1c2bf",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d757ad31ac240188019ba7fd8ac42a0",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a25e3b8cdfd40a6886b070ea1ab9e34",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b68db5934344960af194dc5a0d0ba0c",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "96f3ad48d0aa4e2ba0bcb801794c20b2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5c03f5627f93448f9cb8e53e9178d4fa",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "756b3a00c5cf421caecdebbcace46569",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66ef7981b5f14a06b87540913a0edd0d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "510bb4c0d2b740d4b981375f302d99ba",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "002cb85c541040f6bb4c0dd96c1f7d2c",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bd8c44153c54465be4d28421160d793",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2211d0b2ce8a4f53aa572d80c0fd2a9b",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e5147d4ca1d44a8aefdc4c77bc82e83",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "77847df9e67e438991bf4079b4e3d812",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6f664f1349f741a2b1de8b50b318e951",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11c3e6aee71e4d37b4095df6ec9b1dfa",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98c8e8b3ee644e7780c84cb8ec85216f",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ac0f1b0c4794b97aa86daba377cba69",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a77fc09f8b784c5cad81303ee6f178f9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2936ed22157c4e22b28ed2ce905e60ec",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9125b71539834fc2b6e2108eb982a875",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d5305995f6d449dbfadc1df06bd52c0",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8231212ce1c3457d8e28b9b235690942",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "de3313871ded47b99b3a00695fe276ad",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "785abd9220c54d7da6d39b8331ca963b",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "046a56c16a5441a28bc0f252bce58a73",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec4b95ad4fec476495fd564d78b8461c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d05489c3689745a49cc92884a8b9467f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d7d94b6b064a4dd8acc8675a30895a00",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f65fcaee6fa14ed48ff71221d0896d99",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb6d946deebf407e9f9972633766dfb7",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5f59f1972934dffa44a58e0df48a6cd",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0bb424621ad1451c8938efc00d9bdd86",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "48fa8952a64d43f8ad1d680ea255b750",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed6844f3ebdc4c20a8ab25302ff83d47",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18e76fbf2ff7417d9a6851793c6a0e44",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ec471c982d4c487182d5c7330b8e0260",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "38088591c3ab4c9e8fde24db89e58e94",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8f30d230d8946cab6b3084b26d9720d",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10062e57540449679227ce31a88db658",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af528e710ddf41b4acee66e1940d3c04",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bce23ea975c0481d88feb5cdb2a2ec8d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "77e08a6711a94f658232a3b63c465a4e",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "defad9f2f6684157b924aec67016d01f",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76b2bbde76b049c188e557db52ecbb7c",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd47a51dd9c9480c998e5de7a4610ec0",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "56271b7db8bf4a3ca6823b9e9b171ae4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d795842247404e26b4d02ff7a68ed480",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b024e2ed99f49968738603afc079824",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e48273f317854b8a87034810fe5b5ca2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cd9037eaecf447d09888716b576d4425",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6ae10e1c67fa4d3997e98a508a779b7d",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "725b24bf72cb4a0dae4a9ea9a0ef00e3",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3106162eda6b471a9ff3c0a32d334d0a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2331ec5e00234a809d7f6dee213b904c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4841a8ea7ba34cc2b9936f85428c322d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "430e072bbd994100903dc8d579fda9b1",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ea5d0c64b0d4ba5b6407ef40081b846",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "658dfbd94965446291507d70ebba9a07",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84efa1db165943aa9764ecb422a30304",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f79fb0ac28284f3ca6a5ab89e3815919",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "24bd967f66624e9eb74312c5f21a2fc9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aae37dd2e404127837ffc2a2059c878",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca635dad98824fd8b0e2f1300d8c58dd",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e28fec4fd58846358c3e91fa0598b25f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2cd366831aa04a869f4df406bd23499b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f2ac2db74f74254b2dbc5ced063a553",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "317c29b1175c4a38a783791ef2dacf9e",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "128847cdc9fe4a2bb8f77db5d3ff7380",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e0aee7e71f35429785f9c6a0ff0c54cb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b90a8eeca48e45f6b77f50c39bbdaf1c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a3c48e6990d4997a5d07e543e9f6aa2",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bbacbf659a34959a7190fad68b2c431",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a9c5d9ee49347d3be6e881abc989f4a",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "461e5661f36a48eab278dccac80ffc1e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "49e0d1e4f29f4a8e92e36b11f81697ce",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "204ef688089f4eb298b4bd6d3f446150",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac555ca13a1e4c4682fafa593e6ce284",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1ca676feaf2944f8ba6aa4253511aa08",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da84b00e6c3b4f1683c566dc8734fce9",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63dc263bdd8e45a785f185c0c94c1bcc",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8dca7c62153b42ccbe5d73e4e8d75a53",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1ab4fa769e24473875a9a9f9046cb01",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "02b9118d849446f7b7841874f8e30d3d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fcbfe8c3997d46dc848a85dd503523d7",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a0d4f3b24da4cca93275b85594d8f9c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "396be3fbc032450eba1f3c68929cb757",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85c1f3d6d6f94358b6c2eaf4f1cef577",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "57983bc95cb6459c84ae11e69e70a5ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab4880e399c64fc4b45ef63105959f6b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a670c3cafd45466096b2a3fda8bbcf35",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ea4e5e7745f4100a06e57992b6e02ad",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05fff04bf80e42e6825df302b2fe49e0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7f945c71029044b6aa630b3cf9a92bac",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebd08fc370ce471fb6cc81bf30cee3dd",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e68498846a94b8a898559eb38ac30f3",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6afdbaaac1b4d908d7731445bf5ab52",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9b9415c92c6d421ea2c3d935ed4a7d7e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "85b12e2e575f422c9aa676bf76d62a8e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b83d5a79e3e40e8a4d86ca154f0143c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c4e10380365420caceafdc1ec113200",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5724d6e8a1d64bdbb85e7a18039c16f3",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1df51a0a08294d0d92796d3e4dd2599e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "84e39f3dfe7b47dd866da7db86357430",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "104b4bcfe870436695fe6c90cc98ac10",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "472ae57a3d904c5180b90cbf07cdd2c2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f8bfe4f6139742529d67c350d2ada456",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7abad3dc8db845998028381d12e24363",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcb494efba014b09bf30c9b52f4d9741",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f64f7aab2a9743309d6096c8ebdb3d9d",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d94c92d166e45aab54013c8ac29c770",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3278362a19fa459ea98b199219e18bc2",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1534781173484fa6b937ef126003808a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c80e22765dc44c5b93c49a149af419b2",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ce1c4c98c3454368892816b5236b1bd8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a855e328cda240b7b9015c8c0d097a6e",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1df9825651e24603b264def6eb8de7a2",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be4c11e2cfdb4bb5be64f13eabb46bcb",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e69839404f3414190efda14eb5ae16e",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "82bd1b455be44c98b27a530b3fe28edb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f88be50ed8a046fa9634dadd73253efb",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7faa08d369f1479385d1c998475cd098",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3066ae90e9bd4fa8ad7921dac92dfa9b",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65759bb8ec7a4d39a366b1363a2a9b10",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d8df060b92ec4fddb48e5bef52096c99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "78620b61c1df4bcc86ba365078e0069b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81567f31b9754466ae72a751029e2c29",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a40c2be98d72468dbfec3ef90ff53772",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9c64cc6e0e25468eb5acca627404edb6",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46ff4ed56f4d4d1eb4a32af2f46a9585",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bbc3aada4e3340bf98021d9da40e1069",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7be8c187e8cf478dac0002882a114af5",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc1d499e20134430914c3001b14f2a65",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7113a89716754440bb873fbaf8c656ea",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23386ec149034da19de2d85e873dc07b",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66558ccc0d7741f68bde9641973b50d7",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 66,
      "SelectedString": "03 - Qtd. Cabos Entrada e Dentro das Caixas CEMIG",
      "Id": "d2f883fca4004b31977c1556a2795d7f",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e127d9c0e0cf41c6863db8420c4a04d2",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "aa58c164b440492093fe41f79866576a",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3f67d0bed9e54c2eb8e0af447d4709f1",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "573fbf92972e4dbf94f8df08762e12f0",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a555934c36c64457934684715f0294e0",
          "Name": "item2",
          "Description": "Índice do Item nº 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9c6d969121e487382b9ffcd09c20c73",
          "Name": "item3",
          "Description": "Índice do Item nº 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fde91cf155149fc81ce319840e637b1",
          "Name": "item4",
          "Description": "Índice do Item nº 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c33005bf83342b7b9385a8802f40be8",
          "Name": "item5",
          "Description": "Índice do Item nº 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfef75f7307f42718d031ac2a4c33970",
          "Name": "item6",
          "Description": "Índice do Item nº 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00a639539f78460681421ad44886d98a",
          "Name": "item7",
          "Description": "Índice do Item nº 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b440d5a2cfd4dae9cf15d7e3fd1f48f",
          "Name": "item8",
          "Description": "Índice do Item nº 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f59b8ebae204ceebc846170ca4ed085",
          "Name": "item9",
          "Description": "Índice do Item nº 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c461e4a263dc48ecab2c97daa2470908",
          "Name": "item10",
          "Description": "Índice do Item nº 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef7f7599ee534d4e9dd8baf2fe21e213",
          "Name": "item11",
          "Description": "Índice do Item nº 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "927e44fed6ed4c1ab30f7366d94bf9a8",
          "Name": "item12",
          "Description": "Índice do Item nº 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ba688d098c2466aa3b2d47f06957f11",
          "Name": "item13",
          "Description": "Índice do Item nº 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9194526f98d42639cf899764eee6253",
          "Name": "item14",
          "Description": "Índice do Item nº 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ffce6d13ea64917a5c99d981a6ea528",
          "Name": "item15",
          "Description": "Índice do Item nº 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a5099f040ec4732b2946791ab7da40d",
          "Name": "item16",
          "Description": "Índice do Item nº 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09f645eb7f25419ba88d2a0ac77eeca0",
          "Name": "item17",
          "Description": "Índice do Item nº 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f44b3bf61504f5f9526793a564b757d",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6b0633cdec294b53aeedc83628173b74",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "85689fe272fe4808b18600a18ec08457",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39d64c1ade2140bc8b3a48c77f82cf6e",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1ffe2ce27b149c099be927a7e2eb4c3",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5eca70f5572d44cbb6de34c23f7c7966",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f645a3a9a47d4bc1aa89ec0a77e45016",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "dab2cdee2c2d43d0ac450db2ca4f3a78",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9a742056a5a849c7bdf27ce3e73269e1",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9661baf203d54f468c8834d1f9554556",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e2b0254d5244d8fb161a8112521109a",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d6556b0795454668a764bdd8e7e13467",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "579e2cf68ca3487886bcf050fe2d2147",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46d544b35e4c4b4c945e8473d4fa1412",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e4d25d705e542be816f4e87d649d2ff",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41135d47b6504f27851008db71d061bb",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b26dccc13bdc4e24b4f847e7f07ae3dd",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 82,
      "SelectedString": "04 - Qtd. Cabos Flexíveis (conduítes)",
      "Id": "d4125daf3390484394f2a9e403a325cd",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7c96453f5be04737a1aca27fdd677838",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d1926a5abde4fd5966bceab45e52762",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "87fb8645a5b3484fb00f6d1211e02d72",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "751417d8df5242a3b890a0fa88d00e90",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa868c1794064943a1ccfde6bad0fbb6",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90cf4a12bea9422394661fdb7da35420",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7aa7c10018c744b587e39a537b10bfad",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "46715e1ef6a042879cc75f0f3f2f6222",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6547eccf2e364d44a3c833e936f56766",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cf315551ce7a4da2b8b991b4b853a85f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "26b5439ec2234745aa735e20906846d2",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24ee2f65abca4cc3ba6b397d1bdbc1d9",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19750a5fb9e9486db4827965a72564d3",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1f41d2c41a324b129122786ccc50dc6a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "137b67eff2fb438b8a4e2aaac4ceb58d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\" \";"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "36bebed2bd1c415db91ce84d35556341",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e20d63e8c0fa4735ad255b9fd4573cb1",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c9f0e0936e84e3f8ce92e68e040fc2a",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d971b151cc14960936ad102d7019c9f",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "42321a8afa374812bc229582b848271c",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "38fef7c06bc2474eb2c3dd33ee2a8ed4",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecff46cdac824849a51b694f594df1e1",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b08d435ed1c9412c9a5e0218023950d3",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "510d044f40c946f48434be43a89bfcde",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab8bf52e812446c0aa349b77b4fe6680",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40a97689080748e8a6289b597b7737be",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "150eb04ee724423ca8d5e3bc1c8bb349",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "324cd835c5554c809f5bc2baab718179",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e78a1d58fb1742b98b5806007a36305a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9ef9138ecbe44ac5a0143b1b058c7e7e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0931c17fcdde4bd6b99d064853604e69",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "949267877f534a12909835651a72573d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5ceba41b485f4ac5ba9b6173663fa70b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6abb553fa9fe49d6b5f83dd92d93352e",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e019705cdb34882b5b3e29b1ca6d0c4",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "25496c8dee5647c49a6fb6f001d67fb0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a461c58b9fb146ccb1224b7d1ae2df7c",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37305a39acea49d98b39b15b8f5becc3",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "980c90cde9384d5498383e7fb94c56e3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d3cd93de8cb142898f315fdd90ada7c0",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07e4ff73989b4f10a55739f356de850f",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "af2da4b3c1814b4c83456de0559c22a0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e250350a9ce640a3a7ecce55da095afa",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46d4965e41cd487a9189adbd90b92aff",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "41bdb1b6b61a40e69c6241c662ec4ce6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "54d93560130d4aa18d33062a2616fea7",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "212222013fe4485995552ffac259d985",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "552ffbae176c4f479e67ca2cf294b46e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a4ce6f4e4fa04570a7fc9b1a0cc0fa43",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0911c0ab17d472cabd6b2af4f2b390a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "60057ff1400347be8da995cd57a02f2d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "50e0a472b7bd44ecadb832aec804bac0",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cef11a76e6642c29d31889acd8ab6fc",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "69c225f4e76b4113a23d94fa030448a3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1dfd9cdf34f545189a318493cf18b81d",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50ebb0a6d3dd403d820352dc1422600a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "edd7c83fa3b94b5499c365e875e22cce",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "949e75a4a4b74d14b4b009dd4dc6d683",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eeb364e99de04f7ba81a1902295ee087",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f14832f1c2474e7197d1a063e48ee398",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e59f87b655cf4f0fadc738f68c33319a",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ce4dded9b05406c902d5231eba7d14d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de9d55e9b68f40499e0b23763779a010",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "260ba2094bbc4ea2aa641a23fba15bee",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e75cd870d2f43f399294393dfeade29",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "577ee3696e5149f69cba1bffd73a4baf",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64d6012baba94e7ca5d26805c0d407d5",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2d77c57a7c81465d9e5a8b81118d9ab7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ee990e1fae0f4d0db64a03ba4cdbc725",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "355b37fd1b3844a18ac4580e7acf84ab",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74c9803440804fdca23268deef7e2b96",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f77ee37293304771befe54b08a27ab0e",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "eec85c66b8064c0e8a757aad744ff9c1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c9167b4bee154217b5c90625f137eff2",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc5d41a84e9f4ab8a8b1b3a47e32bdfc",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01f1e354c6194d2c8a1a0ccb64e3644e",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9132726271924e7c99b846663e15464f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ce4490ccb5414a12a4918f57708b3a7c",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "449f0f63591e4f36b739adcc8baf9be2",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23bca4772ad147ecbe52c391e679a283",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22dffdf3a3bd4ba19b1367c120247f1e",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6646e3548654bb7a429c7b5639362e4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cc36bcabc9494b2189452bdd4c35f284",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6c3f29c86324bc38993a82ffbe96df6",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fae1dae2d56b4cea91dd7738c02bb6be",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4582a57278dc441cb34e1d1e9bc821a6",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8904456623e2435f868ad97fcd6197f2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a78a270a8c8c4aaca389d7c66f8256bf",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9bf4a9a77514be4992393144ceb82ae",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4948512f8a3a49a787a848e74169666b",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "787e6b4fdab5480bac231f1f0cd20ae4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cbfa6ab904534eaeade63878ebd8ba16",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f27373c284854096ba9da988d664814e",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6a384ab14f1c428aae73d4e03545ad5c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c13e56cd036d44f1932c033825a1e4c3",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c17ba2129485413eb4d73c4e495d57a4",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "Id": "3f3ee99372964bf390d0281dabe15968",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d3b2b4993b3543729df7aaae722f750d",
          "Name": "test",
          "Description": "Testar bloco",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28eda286bc9b4abea940a7c00ac3cebf",
          "Name": "true",
          "Description": "Bloco verdadeiro",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e62ea1e5670f4ac0b14c1d020e8d2b79",
          "Name": "false",
          "Description": "Bloco falso",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b9cadb4e1f64837bb6175b0a3012898",
          "Name": "result",
          "Description": "resultado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Declaração condicional"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "baf2c601d59647e28834f1f5e53c9b6d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7a17475190924521af14778e37360183",
          "Name": "x",
          "Description": "Valor inteiro ou duplo\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc272ce7c8844272b1168327cc160155",
          "Name": "y",
          "Description": "Valor inteiro ou duplo\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9616ba4ffec14dcca1d05ced8ea23b1f",
          "Name": "bool",
          "Description": "Verdadeiro se x for maior do que y; falso se não for",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x é maior do que y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "eae3f274e0f746f29f5b07a2219340fc",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca9c4f028d274f1b96fc3a84c5bc4fd0",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[\"Nenhum cabo foi somado\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c141ec9d85f24934b88c33204e34483e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "230842c03d524882aa5f08cf45cad604",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[\"Feito! Todos Cabos Foram Somados na Tab. TOTAL POR CORES\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "926f58999966422289946380770ba2dd",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0d221523aa64742b5bf8297d58fb29e",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "87786a888dd94d6c8d0bf3c204024ffa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "67c6589b0e0641f2831e56ea6f162478",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "951d35a91eba4544b7e92e37eedf3224",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2036189fc62f49dcaf7cceb8418997a2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importar as bibliotecas necessárias do Revit\r\nimport clr\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import TaskDialog\r\n\r\n# Pegar a entrada do Dynamo\r\nmensagem = IN[0]\r\n\r\n# Criar a TaskDialog\r\ntask_dialog = TaskDialog(\"Ok\")\r\ntask_dialog.MainInstruction = mensagem\r\n\r\n# Exibir a TaskDialog\r\ntask_dialog.Show()\r\n\r\n# Saída do script\r\nOUT = \"Sucesso!\"\r\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "8628760ccb024e07b61a20b041d1a119",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "3c5fb72a67f24b61957a7a485fceaef0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5db80c7bef34ee8a709ff8f1b760447",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "620e60b4d46c4fcb9e768926703d10e3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c4e31fd268234428a7a11cefa225266f",
          "Name": "list",
          "Description": "Lista da qual para obter a contagem de itens.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c58501fd3cdb4c62be5b4b50d8bacbdb",
          "Name": "int",
          "Description": "Comprimento da lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna o número de itens armazenados na determinada lista.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 503,
      "SelectedString": "OST_GenericModel",
      "Id": "f85c98e080e04eb6acb0bb729e54a532",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b6aeffbf94ef4b7fb2871319a88ee5a7",
          "Name": "Category",
          "Description": "A categoria selecionada.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as categorias incorporadas."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "6eb60b2767484b308780d18f538379f7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9509010ecd2443b4a4d0d1a3c1d90c39",
          "Name": "Category",
          "Description": "Categoria",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "478aa8dea86d4b7a85789e609947bbbf",
          "Name": "Elements",
          "Description": "Um tipo de elemento.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obter todos os elementos da categoria especificada no modelo."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "31f7f59bc7b84cf7ac2dc47d45f40996",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3ad9e89a4abe4560933052001316691f",
          "Name": "obj",
          "Description": "O objeto a ser serializado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e69cc68f10734e5f9c54514dd0d0b634",
          "Name": "str",
          "Description": "Resultado do cálculo matemático",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converta um objeto em uma representação de sequência de caracteres."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b052cf6cb65b42d68e5f0975a6c08dfd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a3edce327989422ca297cb4faa9dc99f",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "437d81cdaef04d5f883d5f46a61aae8b",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cb8459afc3549858f177d0558e3dd65",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4df1efa47b5a4b0f8a619da254951fde",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c11a490977c140e881bc2b48f4d95e6a",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"Soma Arredondamento Cabos\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0541bce4ea9b4837b82d361040d8fbab",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b6c16468b21342e5a77f3fa2612548f4",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "221b0d08cccc4c06bb22914e13894872",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69ed193dc677442a87517bf4f39dfdee",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "034527ed886d492ca7b3c224e0b79195",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ae80c1740d534f11bf24cdc15252434b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0705421cb95e4d82a5f13e2ca2d9f153",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a33b940cc20a4461b37fe38fdeab44d2",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fae7ee1fe274c77abf73fc471d0e983",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d2f65ea64c4449eba9d5abe6ec2c4a8",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "73e352e2385b4c2483ce2da4564c0e5e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e5ccc46d0afb405ab7f68ba8d449d964",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0910604e3014460a8e6f6dcb6de4fde4",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b73878aa361413dac40fcbcaa11b22e",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "228e43690ac64d19b070695c40767251",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e144c9a37ce54f3b9432eab41b38164d",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53174680097f42219c080c2432ecd334",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3310c77e30e3419da9b875412fb6dd5a",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a29a6c0c5790476caefe7b676412b1c3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4eb8fe799cde48a7bead35c9ffba2099",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85c317df1c634daeba7b9bb3f7e431a7",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3805689eb37b4c9ca878973b6d4cae11",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ffaa13d00924e8aa7393574e4786787",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "72376e4c19424467b5fb8f8412a6b16c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dfa9dfd56f2b4fbd8069395a2a8318d0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2db3506930844feebcac24cc10dd2d17",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ca685c149eb4e4dbddddf634680d378",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "045a73e3ccd049388398c56f68cc89bf",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "8e4dbeeb8dd64e959fa6937163548227",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa76a8eb34564b36a7f954c7807faa2c",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de5cedb19765421993eaf427f432168d",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a6bcfe400f64f15aaa47d667fbc72b9",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "708a55abcf684d7e946b25d1b912f6e5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e01f845ed27a4874931102566cbcaac0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bbaca15b4d541ff9fc6f5031fd31fe3",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff84c36e67f9488288a09c1a5fc159c3",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fa680d56f9f4cf7ade33136189f94c5",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "04d896ff8c4849dd8517f09e1f9d72c2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "49936f6ea0d2449d81efe670bc498222",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c7d7467ad764553b323456b91279942",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdaf6f307ec44273b029007973bf99de",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "09ab425b17224c6e9a045cc6548101ac",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1811e3b295454ff4b2cc886cfaff2fdb",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad6068ef0a0b4acc9affb05144d62b26",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1ed69c83db0490da236c05cf3c86f44",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "07e4f85a78b54be6aca8955cda036c62",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b7ad0a75704c4994a25a71bcda5e2011",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90f042ad5f99444ea9e4a61fa8cba2e3",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa0929dde1634fdcb153d441f7f3b5f6",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7a334066cc348c99c587b7c6b517b65",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "1f07c63319be45e8b08127f48721cae6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9b3177abf78945c08994517977de5e0f",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5db05b05b8224712a5bdbc0571a7beb2",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38ded34b381d4b179b480417b1749368",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "31679b8016204e339d504521939c534a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9c324e7df47e4599b23b05b1300996b5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef1d7283429d4dedb42dff5a62ccc75a",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b80b1bb219e4aff9fcaff14ee0e2125",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fc5c343bf504071a81c51ede62bf584",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "ebaaa66a34c84c1fb33fefafeadeb16c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9537b45adc714bd19edf113d88b15107",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6af9809681fd44648c5a576d7ffa1d93",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d9a4bca6c024ef4bd7918f8febc7188",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "a78e9b9b1f204d1db53d5f748a467218",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4545e687ac5b47738d8dcca911d44726",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c67e869c201e41629c93b3338b0eebca",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "836c3885e995453199b5e13f96f8873c",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b7aeaf390b5d44c5b4e8aa0fdc593b04",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "792220d59d294230aa3a1c585c83f56e",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "343131545bca4081959146253ce28a26",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f613e4705e3427eaec4166c4021decb",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "5a14d0f677f3441f99ad4917a609e09f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "722a1c9ef60b4925a180e470f6e65acc",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "044fca0da34d43da856e394786b7d56c",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0bb29da86b7c433bb5e35a9de9c79ce3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "16d9a748f6af4c439040e7f70fac9a6b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80a07d01a2434629b33fcf2dd8ba29fb",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a87c970b265a41be84a49d7388ee1e16",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "181369cda88a4633bcf5114fb963b0fd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e681769801724a6ca1dddd9dff8a2403",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8797ad5d5b3e4598bf605a8e14f2a4bf",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cab2ece7ac544b0d93266ac1efcba8e6",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90824d48258842d097ba984ae729e371",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "9959a6c46cf342bc8d69862b339d4714",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7328c77624824996b211eef94395d6bc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 500,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "290b6f6b543d4946b8fecdf38ff3597d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9654f69eb75d40438a14a0e8a63873a4",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54930ed1e67841ecb58d3337ce549e55",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67ba7a5c3d4c4001b1526df778a5b50c",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08df5184a6424eb1bdd58d75bdf05f34",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ba9669c97aa640c488a7a5eb43873b42",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "67b5e649d6dd4cb7a9690c6f4a4b3a9d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8223ffd8d344ef188bde932e45f0b3b",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fd6b734a3a44db2ab7018d9331860bb",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aa3a5a557dca4855881d46f9fb1f195f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "df5daf9d04c94ce4b7c3cddb4e163646",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9debc4d336704ebf977b86d450c97076",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b8b1c156ab14550866af1f50364cbc5",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "87b0cfc7199d480ab3a4c580d0c5c32d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ff67a4ff94204f75952fd9fefb228646",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34c427e5e5ed4a55843abfda93455e2c",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "166d842ac3764c64bcb90543c80d250f",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "49fe56255ad74e3e8cd3206e15cbefaf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b4506fc6ca4f4fcc86d37ec545d28b6d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "581d943d3fcb4bb4b8572cf8cd62c7e0",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45c0f891d8cd4c2db887469bc96e9e78",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "52497759c05c458794d03edc59350863",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a9578db4bed4f72a6fcba31694dc768",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c729ee4c5504d92b13ac3365e2d247c",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0ccc11d2279b4947ba33f20c3306981c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fbb0b620ae814f0db2494189ff2c9da0",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95735a5e8b69422f968959a33084f1aa",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0bae5ab006794afda72fe2bdfb9b4652",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ec6dbacb8d6c498395e9af633c91c9e9",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36a8508c156244228fbe2af08ecac9c1",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "382bdfc529d34ee987a1eb9f5b7e9e9b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cfd200da00494ff584d652ff7851b583",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1edf9ab66754fa1911253fe792563d8",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54d91307af9f4df99e7d255ca834902f",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7286769fbfca41c68892b306a267416a",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "ea6611d5d17b43dbaabbc15473fb465c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f5baa91478040a7999663c7e88c3b62",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 240,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8be4d17ac9bf4e248d08ace31575fa62",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "164b3ea9ac704df281a8304e4403bbb6",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e27c0cd33af340f9a6d7f52268a838ec",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aeb157286801485b9e3af4f15317c7e9",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77253447d5104b8fb04b84647b6a1114",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4f9c9e6cc93c437ca57a56856ff4772e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d0dbc736ed9d4fd393977641fb49d03b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbcf6ab5cf9043dcab988147066dfde6",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc6317a6ad964582b86f5d712210bb59",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ed94e8533c044efbf431c3b3742c543",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6152103476df4277bc976ff7ad0a1b70",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5d1c7237d6f447acaaff2df14bce1963",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 300,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9f55ed52562e43eab8ef833fa4dd3894",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "24128f465a144a43a4b5981ba3cf5f7e",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c69d4f7d97774c2faf4351ee5c53bdbe",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30fec126616b4e48be159a1b8efc77dc",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51505445a22542b7ad6406d592c4a274",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "146c221586ac4c15817e94ac48fca76d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5ce61fbd64af4ac68cccd9e9d1700bc7",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d77af156604d4ad3aa666a0852fe1154",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d74e07554154b05a9ff283bd292b4f8",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d629ff68aa92429b957160d995d5b5e6",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "72b1611c08e44e71986d95d059668809",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb20f51cb69542219785ea721ef9440a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 400,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2b4bd961c48b4a658d736db00c4430dd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ec50e955e9f341dca9bade6df6ecda88",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "519ee9a2bfb94895bb7c479558f888aa",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2844de3d8072454ba7a34a1e3dfbb8d4",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78625c55de574c379ce6470a6cacd57c",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5ff5df3ff2d9447f8390946c1a9b1451",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c0199e2c8cc34dafa782e0cd0999975e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb2b583c785946dd9663c70f92e4e0e9",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "141c078a65334c4e996de034f9dbdb47",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3181b1040c164890bd10e6f382a18a2d",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "b0e33373a0db48d19abfde653f03f0a5",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b4152cca0604403872d8cee720e6ba5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 50,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "87c430fee56d4ec58d6146b2dca60ea5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5cbd2b79778c44f89d638f2018c1ecd4",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "086d39300e9b429896234d81c33c029f",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b2b2d461e674cb19a0d90910a713e6e",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a360674bbb84c11aabf9692ab910e95",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "63ceeb75530c4fa2ab840b650196c95a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0d6d0448102d4f96ba48296deb635332",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e5ce102c46b42a0a1cd77744dce0ecc",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14838e58683f4d449f5bddfd8589be0f",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4cc71ccf45ec4868a7deb5d502b31515",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4447d4bf5ecb472992c9b47ebbc87b4e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ada429d36234acab10a095545a97855",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8db2365983a84f768865419730d59c45",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4fc4ea086ec4f01b07865da0e78f843",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "a32e60543f324a5692eeef7a956d8d41",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f52a02070cd446f9efbbda7ab3c3ff6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 70,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "712b2783065046deb2e7fc9a9229d37e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fd053064d9cc41c9933b310090aa851c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fc2934c35f4489888182de2831a44f6",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcfe20dc66c54de69c3267398deebce6",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b55116c0ea6249f2b83f644093f9e924",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8e880c2c6c8b46cea6d1c3b5d2069bed",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0bf4a08b2099417f98d745d97288055b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94deec05413f4fb289ebe492d29c137a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0964d63aad4460e82f27951f193fab0",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "18abb32be01644929407f325ea226b00",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d3f17ae4e1dd4c639d2ba9165e3f2088",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1fd1dedbebf4c13a19e10c3b96fd979",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "793442e46e164978a50b3a290085efba",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f07b15de8cb401f955cd3b537e6827f",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "0d499ab65140490caaec907c2a39e0a9",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c3be6e0ae59e43deba49ea829e3cbb58",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 95,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "30e743fc0fce444d84fc555b8c4263ba",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7ffa7e6a07a2464fb72b2ea0d12f79ce",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6edc6b505474eabbc11ee7936bb8a73",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d14e93232c154c4db4af951b42bf3992",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aff394b20edc4a9b8ea72a16f98e1ca5",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "890e7bcdcde8463bb49331e490f5ec84",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "647088427da04b2881550b7861245aa5",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "107590704c1044b0b46ed4680d36d783",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0eb624cbe07149f79e9e26574c7a9fa1",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6faf1347282a4643a00ab15850f8f1aa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bbcb58d98fce450d94bc39cbcbb0eb5c",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69727c984279470f84447ab77c538ca1",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "496fa997142f42019d4d1d6ca8123def",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c02fb15d42b14a8e87baea8fed7bcee4",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "37992c7d54dc42fa918724f948b6f0f0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27a268cba07f4f3e90ed371c42d1b82f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 120,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aea842712f1b468298fcdee4f355e32d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a8c547c77a604c6094264af4f170250b",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de1dd072f6fc47929a168e3c488d875c",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "297f9f7376df44cc9c89d58b0f873785",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a5c3874242f4f0da4e9e1164b39534f",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "449ed22e123e450f9e598a989385179a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5b499bf919684d9aa69309e5d05afba3",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85b0ff0896a3483cbfa3190b753cdd89",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0158c654298e46c282bbe65009963104",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "10d3947aa73a4b67adc9f2ef1428be46",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a9cdc6e5505f4f1f8253fe3d28bcd51d",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e6e823d452f49ac807860489cf7bd29",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38de697263d04c3aa09886e95687c1a6",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e64597aa8024daba15f7a14ef68354c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "d18dcb785d784881bab444274520e92e",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ddb34ee70f24d0ca97c309dc83a1163",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 150,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9c717b77a21a49d390c97368b45506fe",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8bfada9fc54e4af3977040ce811b779b",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a7042b9245742d6813387dc527985d5",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a6e8ecd7ec2491b9db823f1cd6b0279",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74c8aa9429024b028a4b2b16cc6bf2f5",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "37292105a0bb487aa811285f0cf2fa06",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "719f425812e944f388e785917ee3336f",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f9b187dc34a489881910b6b2d32964a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23f902b6ebcb49129c3f873e6ab4d4c8",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ab9c4700132b41e6afbda4145b31e7ef",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e7f429e105fb4b64985b248bbc7692f3",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97f27386428d468c815011052e04fc8c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3b98a196be04a7cb81480d10cc72014",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2f7ae473192402ebe7abaf44585ddaa",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6739e27d3f144ef3a372376dbcd10173",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e197ba0596f541a78c957594a407c6f3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 185,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d0e7cd6bfbf54fbbb515f3d81367efbb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "35778329fd8a49b6a76e478dd6f5e12e",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba644e845cf84089a81e94c4f477c71e",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af12969c87db46c284ca777dee5a73b7",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9444b3487839419ba711ab5887034746",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "db27e671624e4bcf91fbe531cf74cb8c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1fcc2937ddac47d08e065b96ff6c00d8",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8d4670ee1394dfba6346dbcee503a2e",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a5c70bf23404f1d9aaf4043ae5b03e6",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "525bedb3ea614dc7b7dfb8d8b8d09aea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a9767274fbfc4c2e8b0fc4aeed18f532",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "503316d902434d0c98a177a1a3eea83b",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b02149404e0648e883f0576756594c8c",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aff78a6219e44b2a8308251c25e53a62",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "c7d40f3e7af14d82a9c8b9cde719e22b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c157440400ea4e0c8745f5b8b3df4234",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 25,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2ad28911d19a4a08b35ecb1de941faff",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4b2b75f961b24cf6a4e85cc58ea202aa",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abfb704a878641f39658513fed125af0",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c963329d7edb48eab47356130f4d0ea7",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66df6bdf74ad42f286805dc398a011db",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ab52b82b13294320aa49567b58227b4a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c2bd0d265f724b49b1e05d95e5ac39f3",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb2f2915e4154f19917bcef73ebb05ae",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e78c6a1f2b44825993ff9b71e738ece",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "efa05a4bedfd4834ab336603a7ff9382",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5653dcf7d9a94268b0b207c98a0af9c3",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8127d1a05e72401ca5451a6e1887f07a",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d748c14cb7ea4c0d8e0171e7f50dd6cc",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf0d12ad0424404487e1a754c2063ef0",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "d5cee9f6b6f94985ad5007711ae39ff1",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4256a54566e0449780ef358cfbfef141",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 35,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f9faa705fcb94000b603f561dd7825ec",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fc89e0400c1e49c39bcc91503a327438",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1c125a9e9654cca9c8fc5c09f3c1a1d",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb67cdc665ab4c0dbf44d3c29d4665eb",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d708b1a375e64ed88805f82ddb80bfa7",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "96a5c4bc73e3427ebe49aca47d686e6a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f174cc78a69b481e8d54192cfc2004f9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "716dedea14d44ec3a3aa5224a6ecbce5",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "241c0cb24fcc4d129203b1d088686834",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "41a723f2c38f48cfb22d61184257c34e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bdd8bcff997a4ee3989e3a2e7fe62e79",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "569f5035371a4f97a8f59a3083f32538",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f38ec7e4d26242a88b2b6f8945b4d178",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fb0fdbd041e4121bf799be3d13c3c26",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "76f89a4feea24c819f096975c95171b4",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f439f5aafd44d649e25b129e38c990d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 16,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b849fd29fbc24ca093009503efb897e1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "63e7b6c5993e40668e47bed98f4c6160",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3ade6ced98b4d5b95654666d3726348",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "755911f26d304f25a4340a89da810cda",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b16c1317ce704d9dbc9ff0292c4527e9",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0102f7d5aa254519b627526c7fb1f910",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "57ebc07c49914a4faa661fa56b2e27ac",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5511b17e330d4dcaa20b885f2dc962e8",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3bb3d310df74916bc76104a9e8da9a5",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "e226e843fd514efa8180ab86564ddb55",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2d05a77686f46eb90bcd0c3f3ab55e8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 10,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8faf16ae28a544cb95bee95d044e4d36",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a410c9f4dd83497d9ecf6893b483c1ac",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "171e59ecc53c4afbb453a7ddf3dc0c56",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "263ee9764f914ad28b5a52dcd28b53df",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cc7e658f2fb4bf7b4d45e0a68f0f850",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c24183f68fb438f882eb6266bd47ae6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a2fb84b48b17484e9a7da84d3e3e4682",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8a4502e4e814b3187b3901991d18c79",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb549ab10cde4ee8a5a301c7cc8f420a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88a11207a30445df98c5eb1bd4fc5f16",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2b6a1ded3d1d486394f26b7f90b00cf9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b89df06d21594605a4e1074c5c583501",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14fde4aa191f4bcf8e78e742455f7100",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c30a38f099434d70aac8f2563b76ee26",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "39c4fc2d7eef4ae893f47881de224102",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38d1433f4c6d4d1db1d3b9ac7b3af0b5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " Branco 6,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "88dfae41d6ec4ef19e226846f9d61676",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "128619af6a2d4b07b387794eae33d866",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "979998d5bb0d46219e53a8065c0b7b66",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f814c18c2b0a47f18bb088789bded224",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31d96786a99b46ca90c98e4272af6f97",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33171fa64f6c45e5934fd76605da9b9d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa66bdc216ab4b68963420c8e918491b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db8d4c0832134532a95d3213445b19ba",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be1fc509ac484437af38466ac70e4a4c",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1091cf899ec04590aca0c4651171f8ec",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5fa71349f43640ca92b65e50bf39bf49",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c76c5b70102b4c41be981c4f22f52ad9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29f392585fdb4bfc83136c173d90884b",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "908b390479514e4bbb958257ee2f14d6",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a397d4d457e749a4886a5094eaa3ab77",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5f90f86ac0934f2db323264d00089d52",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95e83f9112d1432b8a6a4d1ffb67775c",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54231dda64b5417e912cd281c9def53f",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3c508a8af1044f4b067767f670619e1",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4fa9cd5c8a84e9aa7d631c6288c4120",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ea6191e821974d56824f82b6c36b52db",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "95eb02bfbdc64d9988feea2c5f7d2362",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "dcbd7f17bee74c53a75895567d8a9e58",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc178caf9911482da792cac0ca241c54",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 4,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cceb1af15ed14f8d892830b3d98d4c53",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9297ef16a72b46a18c8f7b8cae3ee0df",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52248299283a46ccafe98c166c4e15a0",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "396953a4ceb94a6995c5f1e9c37176ea",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d261781c4294bd889b1f5147b0df386",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d2407c4f48e34585ab0a68038de6aea6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1fdfa5a9d56d4ab0ac1d7624aceb3d9e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da7601fc2d9e4e858fa6cd158c699573",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3caa6d14e2aa4d22851d3b9b81be80e0",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32a0ec7ef84447cba415dd27163909e2",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d9fe947479184119acf62dcadd3f4d5f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7cd1c063bf5b4c27b4adfb027675d37d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d7ac8dcbaef435397877a286a8d74fa",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a873b97e28ba422cb597381e5066c1ef",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "eef6523938cb406191f89a4f34fea320",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46ef7ee5a86e4f849ade344d9e298867",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4d6479c8c7754602a2f3f679783d429c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0758d1f04e754cf7a6f534f07e015903",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a298e0ab1e544c42971b507474cdb37a",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d48dc030e154d45afb7eaa14d17709a",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7da553c002c464da6d291d4d8cfe379",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60ff03aa963a4715a0497a9f94129f78",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 66,
      "SelectedString": "03 - Qtd. Cabos Entrada e Dentro das Caixas CEMIG",
      "Id": "7b6345c3ebe04545b1fc39cf7b13f17a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "657f320bfb8748fe9b7d0f6915e3c14b",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "477451dfe57e405d9c504daa2b0886d5",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9b98cddc11840b2a28eb9ef76b3254e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 2,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "a09409745cd342b9a83666a2f052de15",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "df6fe2917e9e46d08b9f2835409ef5cc",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6310cf96cfa14bfcb93082790752161f",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c56decd5b35c48b29d1d1dab28807fa5",
          "Name": "item2",
          "Description": "Índice do Item nº 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "272006dba95b4a45a76ed2c323d86fc4",
          "Name": "item3",
          "Description": "Índice do Item nº 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d480ca9ed88246dfbbfd4ceef4060310",
          "Name": "item4",
          "Description": "Índice do Item nº 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d93604bc51e471ba1c317a5a255d2d7",
          "Name": "item5",
          "Description": "Índice do Item nº 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52113d004cb84ccab1e7873e49f90bcc",
          "Name": "item6",
          "Description": "Índice do Item nº 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87aab5cb14c74e79abf8b8a994002cc0",
          "Name": "item7",
          "Description": "Índice do Item nº 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "123bb2ab1d234737836d362d9dedb0e3",
          "Name": "item8",
          "Description": "Índice do Item nº 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29e09aa7f2514854a70d1f28e37bc76a",
          "Name": "item9",
          "Description": "Índice do Item nº 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2272e338090946ddb50e976898a5de6b",
          "Name": "item10",
          "Description": "Índice do Item nº 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ff98bf8b282439180c1d81184b56306",
          "Name": "item11",
          "Description": "Índice do Item nº 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d3a2f78950049e585e20f4ddd3c3f6d",
          "Name": "item12",
          "Description": "Índice do Item nº 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8e6f7c715da4bcdbd215aa6280b2d70",
          "Name": "item13",
          "Description": "Índice do Item nº 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8fb60cb2108449aba2cd324591296a9",
          "Name": "item14",
          "Description": "Índice do Item nº 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b61501c260ba4d879b101ddbb0e3a12c",
          "Name": "item15",
          "Description": "Índice do Item nº 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "900c8c38891b4c27912e378bed2682e3",
          "Name": "item16",
          "Description": "Índice do Item nº 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b99d87a97b534bbc82303cac8896e5a9",
          "Name": "item17",
          "Description": "Índice do Item nº 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61c60629586646b69a205d310bc10a93",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b513aa22cc5142efb8a310be8d659d63",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "59e765ffc7544ce6b299dc4cfcd789bc",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83280091ff134bf39049e39bab421ae4",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5440fabcb3234a288f71405dfe2dd94f",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fd913cbe59842b58062100179c1cfc1",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4db2091c437b47f4b8113515038005c5",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c8c7ca4fe73a4ccf951ab98e82a784be",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "640d516d1ddb4f4d8acd9148bda198b9",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "33c6da5867b742e0aa84574df33cc6cf",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd5fc5b879a241668eec45fcb7c331c7",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a827c4034987412eaa46b30aa1408627",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "77775d1b7d5e4e129c010e133d38d408",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfd3024dea814e15bf3616ac229de5b7",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f9f2ed235a64dc69ff6bd42d67ee82a",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0ebe8332f7749d1a0b86f58f8c0c90e",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "279d3ef6726048dea4e88f6fe9ee6dc2",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 82,
      "SelectedString": "04 - Qtd. Cabos Flexíveis (conduítes)",
      "Id": "69c193e2ff6f4565902c3b26e1479caf",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b4dcd3b9954d28ae874ead6f7989cc",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3185b823cb6c4773843ee154dc5ce91b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "79e93e90ebfa4261918f5c946c488ac8",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb3526b8bdc74738a616fa7d6ab6a2f2",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6128ef7bc364a9d9595ff061831b5a1",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "943ee154b95a4f2dbef4326b9462592a",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21cc592f12194d02ad67c029e587f7f4",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "78c6e4dd654f4f85a50ae494c992c43c",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3357b1dd4040482184ef3bcfdd9afc9d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0011e67a0e904284a98accef6ea27f27",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "613ffaed8eb14be39c4e04781b1e0d00",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "253115f5087c486faee64aa58e3f11b9",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bce2858dddb24a62bcc9e1a00b3b865c",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ede529dcb4db4eec9667a787a6b9fdc6",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f6f37e6c7d140f9b5e61b5144df1eb2",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\" \";"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "7ddabd6f56fa4a58a24f48a43823615e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "28305907510a4a02bde9054fa5df5a3d",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdd3ce72466c4cbcbef0f4bc25e0b1f7",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fbe93cdf55c469b8ef10e320615f53a",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "df45b906be284ce5b2f9e1197cd1a990",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3bea217024cf4270ac1480e5ff967e1e",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2381471bbde47aeac40153ca875e787",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16ab04ddf1ac4793899d32586232d50f",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2f6b22df2cd547a48319772eaf3736d8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7cb8675b58674964a4588399673bcca7",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33cf0b530b8f41f29418686be0a30f58",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "55115438ca9f411dafa68773bd6c7067",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "242594d749234ba2b673dc6a2ff1649f",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64535262c6514af3b107983f10175ca2",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c2bb592db3d34cf19a2a911a28964849",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "01344f02483d4841a0dcac8d3614fe40",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0133698dd8ad4c80bdbb0a0b592ebb1e",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d0d6befbee4242a28ef2a3c7476e9788",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b125dd31448340ad9363e4b00c5e4936",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3db17455c3fc45a78293c733d9116f3d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8af19821ce3148b48587b813c3dcc9d6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3cfb93904fcd4209ae9338f1192f137a",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2f3845415a1439786c184a747312e69",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6248543fce344849712bda1ff2a0a28",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "35d45ee886af46d38a154178203f87bb",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b23c2852edfc4de2bcdcb1f0c37d374b",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "631365ba09554bd68cb3d91bc62ae75a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d6159e4124ee4ddca78e2fcfdefa5ed5",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "379e2a25ad274125b694dc14417483cd",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1a8ecf974aff4e81855ac53636c4c189",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c79afcd303134dd1b54b9f670ae6de96",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e29fb0ae5c104283a1fd2cd890852c09",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "279d104e1ccd4d82a082c3d77d5cef51",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ca5357cfe1bc472c88597c1c3d709977",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a695a86e630405bacba2f3cafcfc408",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "84a6dc62d2db4570af5864973e69c0f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f06f125d61e540c298d734e9166af640",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a95aff0744b84df6b4fe6ba1fc86f364",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3928ddfb19274340abc0b145ca9d2b34",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "903836371d4e41688508025888090ddb",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "941b8c093abf4fccba3095ce94da8d04",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3064eea963894ffdbe6b18972133a127",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d2e1a850b984f5182a0f02a7a85d0bc",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29c22abe1b5a4a58a73976134197d4ae",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6f1333843d58488a9b644373608e4871",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "14c10a28c3bd40afb9755f963d6f3994",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49640b4233274003b7f18844a0757dd9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "86e10e15552d4e5ea8697589f0ad5c6c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4d9fd48cd28b4965bec8c182c5649ba3",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7b93f43b56e40c7af728771a73c39ba",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "718d8d00c454444b8617d088842b8ccd",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "635fd3f2de08433aa0092d6d1fff819b",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ce345dcec6264d1facd20dd8becb5240",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cd0b92d75afd4704aeaa3f9cd810f5f8",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "040e56aaa4c146fea101a69a958f4d72",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75073b2392064f7da863c111fad66911",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50f497ac23c644f287c312e1b1be8d2d",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d2905e3de0d84e109c2514e1ad3f6799",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "134e1ca41efe4571b05c1421a0d10f7e",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85706d5d3bf04aeeae58823d11757f23",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5126258091d847188118cc0f367c7502",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e413eecb34214235abe8aab8fb7f7127",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e8bd747762fe4af88d0bc7bea3fd4a59",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0852a83dbe094fc0ae3bd0b08523dbdf",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5a22332ddc8425fb27b3518f42ad45a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6c8fbf1c79f48b3b6c72283d52a9bc6",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "34a0658784754cfc92ec3e41ca0d28ec",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d367bbf095d54f208a16fb70f2fd4bd9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Branco 1,5mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c0ca7828c7a448df9ae45879fb95bee1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ed702d2cfa404241a72344c55cf4404c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02a4a5f75be5489eb97aed2e1278e7fb",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0cc890a8c934ee1874f26d4877aa818",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aec1e05675344ae0b6ad039203fd85f1",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cb8100a7bd014a6eb4923fd9a745b35e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c3a2349255ab40c5864bc216d93a605a",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdf923c9e41b442da74cfece579bef18",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38936f115a254986981a2877b9c21f66",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a1da207eb8f44f0d9cabbeff39b70351",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a3cab2ab248a49508800bf15d82dd98c",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce1bba06b76c468c94a70cf3e35aba39",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cd0b8b5bc1774316a4f7a4f62cdd744b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b047f79b16074d63b16f88ec6c4f7045",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba4a75a3e14844599ef9d6c7218e38f5",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "36759a63fcb7498d9551bf9e45e3974d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "67a54db59de941b0914e9f1773b49ff9",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40169524cf064530b1cfc6bfc11e313e",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efced2cfbd6645ee971d359a24d2616f",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5e53abc7a3e14c27ae7d9b4b59ba6a1f",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9d7ad6a79f4247108ad429b2df18280f",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39106e7b780747b38b6bbfc9ce4bdc64",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95ff45b1a13e4b9e9f33cc16e06d8c5b",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "48f187d81d7646f0b02a497b1986f38f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "efd02eaf5a2b4fb4a1aee34e0cc2d932",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9203f637340454c95fc0a15f09c5934",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d13ae072cc66457ab230022586af6b21",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b8b8b6532ef04954ad36d2deae769773",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bad8f2da95f24f3c9b2b902eeba24727",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11c655d681384ff284d127c67d0f8292",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4dabf8d879a4ee69b9a9c08a46cb1be",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f1afd69662fc4f119759958327665019",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee3df2b13eb34f7490d572ba6dfcb37b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 500,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c4d8030b01654676baa6582fd05194a9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d6d21f84d6f0411588b4f91afff08b73",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed22f07876d8477b9beb4b640d9a9fcd",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb1e80ff0e364a3aa7fdd75a6807a6b4",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9eabcca5f5f04995bcc3a48b767bec63",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6f5d1bbc448f488cb6cc5e1b524b05dc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e1e8cfa5c0ae4c01a7b7849d64d487f8",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a46da399491f43dba23469a88b698452",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1415cd1bef2d45b4b0ce6dfac078544d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33e36c2736f543968ac0fbbee296b5e7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d32d66e142084d5a9f562bd3875cc5ea",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d2e4bae58d44a23abf6b37c60bd8e6b",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4e791d3719d442c8d83413e4ec75513",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d6f108d306be431a9ebbf218043e72fb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c0f1cafb5b55400d82c1baec197e33d6",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6583b281b1e141348c3ccd0ad8d389b6",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "061f5b49294d4d89b91c3d637cac9f67",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6c3c72dcdde456f99f6fd930b98da51",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b837fb29e7204412988e8d00b06b0e99",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6267d3937544444832c50468b4d990f",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71dee8658b414248b57df16e84fa8364",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "956bc08b084d417ab2005504a5ca44ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "accb25050bd144c69d5ee82c4f253e35",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a68dc851376e4284a471bce2606a63f6",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "30ae15f0768c4a959da90b686e239e1e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6ae40bba8135465182971f5ebec6ffe4",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49c1475e81f64f968bc45899590a976a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9bcd266d5ae042ff813ca5ea36b36223",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f60b7d3beae34cbdac89796b9ffd9519",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1efdb615b1e2494d8345b37268df959c",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "374ab5fce2554a15a140b5f2e560f688",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "144bdf50b1da4b3ba6e20624306a440b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a13c1e4c8ee74f339d00396e2b9cb089",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "925ffda848e74d58b4493d5d07eeab2b",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d128d3f5239344628e0f1e019556e088",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "13a758763c854819b84d116f6bc66bb8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5f70d465b4f34814bfd14843da4d96a9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 240,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8125e8096d3548b8b6f6b3afb8bf0a2f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e3811739e38f4bef82b6707ec32b70e1",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b97f36f2c8a4381a9a138b7b908e2bf",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "106589fcf7ca4b409e5bf209dab89b46",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec11cc8700924b8d90b119dc6be7e140",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f0bfa716e34e44d5b62874b56d0a0cf5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1ab147b5fdcb4830946d8507e39316c7",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4acf56258fb04be492564655ecab4d9f",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86b9d46388d64afe9dc98c22d1942d99",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0ea096736a3447d993730f1bd6c541c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "911e929ec1a3481388412ab2cf5d873d",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6be28fabcaaa42a5ad3875c10f6c63b3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 300,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "485d4218f7564eeeafffb9af7a207021",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7a5f9f2a862a47f6bec46b9447518233",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5066fbc015d84dd984ee2759c684b10b",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "168cc8e834854dcc986d56e87c91b6ae",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eba456d2ca7848fc8ffd5cbe41a538c3",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "75272b6446cf437ab1330abaf787d1ea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cdd3e9ebf01245e59f645712fe076af6",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "116c5c5249f549b1b3728be1b9674793",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5861c5da32c498aaf209bc5099af86b",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00ddac695abe40ae907102069d0b910b",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "1afaf54f01774b0c8a772039d278d30c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "12534d61636b464cbe847e0b30bf2f93",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 400,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8eaee89718304f5f854f12ad2f3b5557",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d87d21bf01604afa82434e8aed0963e6",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e4cfd3060dc4575919358ae306c7171",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7049899efda6404683d533d8e0b15f21",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4643284cfd924ed8b6b30792567939af",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "58c7a401d0b94e379801ec21d1bf9537",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "08ec1cacb96c457aa477ee374e7f4d5c",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccc4c072dfa44a248acfe73b021a11fa",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64329e756b68460d866aad0f4ac51702",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42eb9858e87e408487a2f5b8fc0caf1f",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "428182e59f3c4e09b3f2b16cc9aadaaa",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "509fdd04aa28489f94601f65ee2bde18",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 50,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fe69cc850f294ff5876bd75f2eb294e3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4cdb1404c6a34512b42d3fc089f9337c",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb425168707f444fba917670b0634f64",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83c2b9df59c048fbb2d3147c6bab1a46",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ded6aafb869455b9b1c7ba8b1799ac7",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "efed447ffd5c4aa7b3bd10418f172d0c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a74b423379644e6923ed6d20d984b58",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b4d5be319144a1193d5591c6398ab57",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68a87fc7947245fd87e9368d05c6550d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7eafc263b432493e9e718eda7bafa133",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8177246130c646ada9d5704187356829",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bdeb3e3c7fd40bb89b831d9f066615e",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8542267509b6441da48fd7a1b57b3366",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da58a584cdce48aba188e14802409d5f",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5f9e8f3237e04f919277cfeb917bb0f6",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "db41cb41602f44dbbf402a77e3e75049",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 70,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "484d90d74dd644c8be8f27e2a052de4f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "efaf22d3df9247449b92155a8a291748",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5b8d468e71645608891105c3314b75d",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ab4203bb13e4da7944b87b5603ce662",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6c45da275224be59ac5b1722823e856",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7bd858ce7c2044ccb8f140fb5b03be3f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dbb86979bfa14b24a1b43da6c82f7845",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa77346ced9f4b3abe658e9171aaa8ec",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c17e94254824c4fabb838d5e67ca94e",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6f56172e7ac14e0092cc505811b23a22",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "28c1861374e04d23b40de065860a2e2e",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1294d7affdc34395920fa164abc0a49a",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3182b1686bb94bed93b7a130ab03c20e",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0cfb0ab5cfc48dfbd452630c5b24782",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5dc17fe0d0ad45f1a54798e8acf29dae",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa5cccbba3ba483f9351bd61536a3074",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 95,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5b3c1a4d854a40f09c291f41e2f91b38",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b329afb3eed24846900d403e4a446aae",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f742470841cc4668a3f194b52f4d2359",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee44bc6f433647819e5027cbfe207271",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99f9e02d4b6c42b3a0e56714213a1c29",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d1b745cae55c460087b06a9c6644d641",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d171b80d68744c518983ba755a98e75b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc2abd2cb16a4325acd61c90acb8cedd",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48097a7f2b14451b8302673a09fcec9a",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2d93b62612454a078ab9c9994c6bc4c5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5291dc28e75f4c229f75973bbee05256",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0d5edad34354628b2ec273195a4a54b",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3a8658d11094e0bba3074362f1caf6a",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0cf41d8cedbd44aba8d19381eb6a5768",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3f71a59286fc43b98763fce8d9d994c8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e6711d0c3714093b47f3b78d00310f1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 120,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f6f39fa1cbe646a18bd979ec6016a6f5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cd90a44ff61b43f29cf9b498641cbdd7",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd7053bd2ff742d6ab27aa6249bf9950",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3807fc8965e4708a0c38283ec850ed6",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58a05f33cf7e408eb147524642c7bb8f",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "407ea768fe5040a3ab7a0a89d9cc96af",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0bfd5750f27c4c3d8bdc2fbe79ab4e97",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53544454d85e4018a549fd82e8cbbb64",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "227980d2b9d3414a9302107abfc1208b",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c37035ac68874480a9163879ff17c521",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "085d141a67f246c1ae8293365c7189d0",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b659ec1b26764e4d99ed1a9c3e7d19cc",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c18186a7d9ed4bab9370cf9440e3893b",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b3215f9c33e4fef94d1a424331b750b",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "68b06123c46e411a9af645bf388f0228",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "11a3bb64021543a7a0eadc878210caa2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 150,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8ecc9ee1c81f4df7bf2e9cd83ea5054f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58bd5cfb36ea4654a0903c6eb58c2678",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8ff33fdfc6847aabd00f921252b57ed",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c67f22b551f48b29b4b827fd3c93ddd",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2eced27ecc7e4bfc9a6daf327b76f853",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "02e2e53cd93541ee99dca751ff14a249",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7ff8ce994247426592360de0b4292eef",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6acbb718c6444c06966a06ece58a1e26",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8c89d5cac1a4c8aa10db4d9eba2efc7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "afccea2a75a84bddb3361909263bd507",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5aa962e3ee794e34907b3b6e6edf6384",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bce93c723869425d99560d4a368bfa8c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a3f5a867d554883aa69aa71b34db227",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d8973c81f80455f99cf1da72f135d3c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "22f66d35fd6e4538b25b43cb46334a95",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d79b5ce22d38423db8474ab38eefe4b0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 185,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "973917c1a24540e18b4172013e745045",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "91acacf30b294e31bc2c87f6b4c150b3",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe808c55a5fa4e8097be090d62ad1369",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f9dd154ef624a3fb833b711dbf5e14a",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59aed0ae911e4cff88ed066658f1b7af",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b4f0fbe87910417aab2b4a4c79424d41",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c9f43db223724bcba57ef8054de45d41",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87658fba7f4b4907915f8c07e9cfefb2",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5247b8fb0904e219259b1837f8097ca",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "01a1b5b190944e2db3b2e523d06c9deb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4902e46b2fd446f3a271a224ab89ab86",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10a113c1f23348f6bf4b1965c73e9df9",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a81a816a6ff4daeba4bd829180621b4",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5ac3d362a0d4b87a33973018fe89f4d",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f63fe9d20053423b8abd4d5ab4a94e30",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eafbfe34e166428b8216d668f362148a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 25,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "181a4ffac98e4c74a5649d19a8de6d8f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bdeb808a93a24dedb389bc0974fc8371",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1de61bf71aee46409072441393238aaa",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fbd5a3b36f0480bb4c91b1fa46fffc6",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56aba7ded5b34a99bda2b4d32eb9013c",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9e8dc28c4a594277b5485440fe45a025",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "850a10e3b7b84dc3980d525081071a49",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2e1d15c4d454fe189fb31de22e4c991",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09aa5e27f18f471095fe1f2dd8e7def7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "12183dbbf1614fb7924f695c772b9048",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ba02a8317804e3fbf98bc5a4c84e4db",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f91e71a9b6b0458bb63f38706445223c",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9f9ec568bd84f6d8fd81bdd7c9a345e",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13dd172cac36445397fba7631274973d",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "dc19bdbf4f234a7eac4202e890fc6284",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06b592998592497dade512d2c75474a4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 35,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f3c9cb64d2164e1093189e1ec4a56679",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "27c97f7e9d4c4495882808ce99f5b0e3",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3acc7181d74b4a7db863a8006b65ef75",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cecc18425dd847019a9ed815d9893f5d",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e44e76312be41139d835b462462765e",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "29380587365345cb9bdbe8b045bee1b7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c9bd9c9107bb4691b14925170e049888",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20ded33c61ac44df95144af79bd8ed34",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8bbfced104449d18d0d1ff92f3c2940",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "44259427ec1c42658dc1c9f52043d731",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4e8fe10362684e7d937fdc7c7600902f",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b516dd829c974efba0abc760cff0a8c9",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8b7546206c7460b978660ac4f994a67",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1359751a8c0d49ee90a7d6206a20fad4",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "71e98b1afb2544cab2b33294f3535c02",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "56d761e5529d49d4bfd58705f3db2063",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 16,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1d6929f8765b4dfbbf9b93fbd2710ea2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e8cd62f178584c09b3a12b26991803de",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6e22ed051744948af142eb3d4759834",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b91c5d0dca942f38189f1c5469399cd",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "682fa1f808be428e9b3845c11de56295",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a8c961b7d5134415ac773cd542a47868",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6412e2f65ec8444ab048febce912edaf",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f359a05f7f594e2c9b5aa3c62fbc4f2d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc88b080573841bc86110c05bfa71eee",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "6482b5562d6248178ac8d9a1eb644c2d",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c4fa76f1b15b4c929b163dad54d42bbf",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 10,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "989bd4d1bff141aa8d3331097a3b3763",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9ef7ea1ed1d7455d8a42159b2fc6ed7f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a56f4512505466eb1fb70e7e232e43e",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e3e5adc5fab484692f7c22e4d19dfeb",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3aece3bd77b54305bdd951c25dbeecaf",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "abdb452b481547a8918fcdfba8286efd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "293fe6aebae84161b648fec21ae1b289",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "137e53d610df49fe80885de0b7091e4d",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71021254301a47d79579f17dac96b5df",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ace1a4498ff4cb982d5a61e4e5e2765",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5cc6e2dce1bb4948881da567b45eb902",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eee3695d94d94bb49cd0d82dc7a2ba45",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52ff1011ad724e919e657d9376789d46",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "514997de72ad41c199a834727f7793d4",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "88359e1673c4416ba4c81edbfe61f92b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da21aa6ba20246d49c70b6d5b6469aa6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " Vermelho 6,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e8372dff27e2403190c0c616bfc5d66c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f1e754ef6d124d6fa9037622a5c17ceb",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b44044e082c4b208fe03fc41527a908",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df13d19159da4da5a023f63c63898497",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "326fbf4a721b40d99d3cb734ef5c51cf",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "03c672b88de641bfa0a4dafdcc663ef8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "76cd11a306f84953942c1ca4851addb2",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa827796d5eb4cf98d4c18024e7d3f98",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08550bfce6a148e6b294806d4d2fcd07",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dd88c40159849d0a187585af6bf4b39",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d9c8ee542fad454e91ec8f3220f12d0b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c8b839ee2d0f4add8f18addd9b8a9d6b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4f3762979d44b2e9272b42a8e163b84",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89389db424664c0aadf53dbf0317b6d3",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cee39260fc2e44b2ab6703154202ab83",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "105b6fdd915045f29dee065ea2bc0f24",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ee927b5370a4cf58aae5b7a11c7f3cb",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "766f5835e40c4ffd9ba2bcafbd66b789",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49d5d99ff3fd4e939806af8b98f6772c",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e69abd6d5ea4853adc38a1bdfccf267",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5ced960df3184252a2eb63c9cfbc469f",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60dcf095941049df8f81831a1cdc4090",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fe827ec266504d15affc452c98c703af",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a225b2b3e19c497cbb55101d0a37e1d1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 4,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6a87274b2dfe43948d383e9a3cbd5d9c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5817af1443214d8b9226fa85d638e198",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "128c1bb862eb445da8d9500e9616927a",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "312b266a1c9e40bc8e38adcd5eab85da",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa4f68c9ad034f3d8e79b3b01d303dba",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e6ac43a1b18a4379875e17a08876c44a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "158628bf8419489eb11ea8e27d2e2562",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5688cece0fca4e8090bbf5b5605c10d8",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33f5fdae06374c059a28f889778d7466",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49da14395dfe4997b4380f39becb2240",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2518b8084a194ee7bfb7784d2d28b314",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2f0487d56d3243c59b50e85311b4f8c4",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e26671fbb4874024948b89f56a0e76a7",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02e5ad6af725434fb3fc0850b1a8c929",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7d7a59df588e4d15a061c2dc61d744b9",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c5e103b484d4f43a9969825fd8180f1",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "41828dd6bf4b43bdbae2a4073d068311",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f5fc8e6dbf0e4dd5b0e2da2a7b2dc023",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fa469c05b7741bea5d41cb20a1ff7f2",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4df57833eb7841a8a3921528e9d82d21",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4812e293badd4ccc9db0f8a1f90b5a5f",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5026d38d9adf47b693d1ac98f8b0da59",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 66,
      "SelectedString": "03 - Qtd. Cabos Entrada e Dentro das Caixas CEMIG",
      "Id": "2936967180c3492e8fef9b8f65d6528a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6be12f51ff2b4d76bc495d1067bb770e",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "711464e4a2a24b9eb61fc47883dc4da6",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64b547e07d6f4bd6887c088db52af20a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 2,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "ef782749ff3c4de9951a8baf749db9d2",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c6f3d9fdc75e4040985c3ed9fbc4a5ed",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b78b0a1589c341808a51804e71c5edc3",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2877429195ad45cdb05dc6216127854d",
          "Name": "item2",
          "Description": "Índice do Item nº 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c4a9831aa1b4cf2981a71283cf1dc09",
          "Name": "item3",
          "Description": "Índice do Item nº 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a2f2c65ef0847f193c1fb97a608ebfe",
          "Name": "item4",
          "Description": "Índice do Item nº 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b83b079ad3441e4ac4dcdc33bc1499d",
          "Name": "item5",
          "Description": "Índice do Item nº 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12215c8fda7e4c3693002e45042c1c08",
          "Name": "item6",
          "Description": "Índice do Item nº 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea66df83440c489ab62fdfe06e351729",
          "Name": "item7",
          "Description": "Índice do Item nº 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27dd7545114846b8a6b9ff5a0d38b29d",
          "Name": "item8",
          "Description": "Índice do Item nº 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a60e447fd696463ea28de1de70200252",
          "Name": "item9",
          "Description": "Índice do Item nº 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45e59355bfcd4bf99529d04df56050f7",
          "Name": "item10",
          "Description": "Índice do Item nº 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be510fc8738b4f86ae7299f89b58bf81",
          "Name": "item11",
          "Description": "Índice do Item nº 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "778bc30bc37f4ee7b97f2ede3c2d4ac7",
          "Name": "item12",
          "Description": "Índice do Item nº 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a84ec70ab2c34d52a9a4b4e6dc3d2344",
          "Name": "item13",
          "Description": "Índice do Item nº 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e10b8b0df6c24cd2b3909885c162f4ca",
          "Name": "item14",
          "Description": "Índice do Item nº 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "604a940d0f7044278ea379e98d071263",
          "Name": "item15",
          "Description": "Índice do Item nº 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b066e6f834834cb2b2ec41ef0b310b3a",
          "Name": "item16",
          "Description": "Índice do Item nº 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "860f9bfdb83c4c4c800bbd2d60bbb661",
          "Name": "item17",
          "Description": "Índice do Item nº 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2de3f9590d354a0f9893fbad1955ab55",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "773cad87852c433f8e713caf7f84133b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3b8f7ab79653460ea554c3db5f48ce30",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11621abc122647568a8716094595c3b1",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "168d4fa32be94a72b2d7a2fce991c43d",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e5568b21933477e9d5b8ed9e5e32821",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a5eaa659f984b9298cea44e1a951b37",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "dc2615d21e2f4ef286c1a67cf5cd1222",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "452f94b27bec4f8ab10649265ffa4a15",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7fa5bdc4eb6846bab4ec9243a5a2f733",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "309266afcb6e4bf6848682aea2af0d8d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d7ee6b1a3c2434da5f929ba964353d7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0939ba070e074304bec7df76106d99fb",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b43a2d993ec9421782f87f036f663ce4",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6faa8cb2e7540feba7cd231ab636bff",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c38fbb5c09f74dc5b200bfb42b2decc9",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09ed37ca77524e75b5ca0071e42f0258",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 82,
      "SelectedString": "04 - Qtd. Cabos Flexíveis (conduítes)",
      "Id": "cbcb86359fee4cd898bc07c74dd93d59",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d2141f459ef4b60ae074cc96e736b8c",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d9b69177c07848f7b5e511121e584be2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "227b514457a541469757219309683e4b",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "966b492cc3f04a309ed3c9d1fdaf34e0",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dba7b35ff2874a0996f05bc74c6a57cd",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c09f2bdb172b40a59463a98c8d5d1fec",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98d599be25034319a33b2bc0b8deafbf",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a381be4ee8cd43bb9d34018ca2ea24cd",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a89285a6559e40b2b3045e9a16283d22",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "76c0dc46264f4d35803c4d91374f73c6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9cd1dcec1ce74a1a9d1b8cfa8ee84428",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e387b29052ae4c819ac2039365d5591b",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55f7b934d41940d29ed583907ec54905",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "85630154f4564545977c0de1cc3a2545",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae4afb8a7e884caa9f6b81a803b65bb0",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\" \";"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "b13f42397bd44df7a5c9e5d63cf60aef",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "00c9c4e6a0fc4534b0f260152cecc686",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3defb7266a704967952c8b3464880b52",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ba5f593919847e583076da65a63f5ac",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "e08be1c7938d4953849452d0f6ae0cf6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6a39aef0d3fd43d2bea422bf52611da1",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d454c2f0595497d8c34774d4fc1f858",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efd8f9c22ca242c18a841e3e33338e96",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "08b86f7fd34d4f46bd0359c35f7d0c5d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4a446d8bcdfe408b9beb844132599c96",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64338fb3339044289b85dcc8763c74a9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a62015cc4f1c44609b7d6c7ebb5765b6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0984378fdb584e06af23ebb01d106d17",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43cd98cd2eca41ecb6986748829444f3",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5737890b854147bfb5df1f7cc176b106",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fca1793b4beb47fd8b0780bc464b0800",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf71b7b7646c4c6c8474ab57282532ba",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2acef0b300d1414aa8cc55e4dbc02073",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "31200506f6af4158afc445b42d0548c1",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dcfddbfae744391b9fbb4c6f37566e6",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "50eb6ce2f9fa4b2fa02cf5899c81d5f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "052a3b2d45854f5abf06dee327d9a4fd",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbc4dafd950b493d8bdea7daa85c4c54",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "db1d6ce5c3454ca3a84a219a252b561e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "44380a1ffcc9452cbb08c21a56125535",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85e19f1d2649444fb0a3e5bd902d21d3",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ffcdecfa8b734629a75dceeea3e1bcc8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "55f74c0f71224254952d0d4b52b02ab7",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5add8125ca4d4fd78bb2a5d5864151a7",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "54f4524c03f547c9a1abf044d0c82563",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da55275583ea4baca1a8300947630bbe",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bed47d66add45d1bc84b9e3b3756eaf",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "46ae68e70cc04fbda1a5929142306f42",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "185371e01c6841738dfe84e5f04608e0",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23026bfad5f84f1cb84a61c1dcfc70e9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33ec27a25db04e51addf29197b7150f0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6aa6ddea1b6a423ab189b30e076ecd3f",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "415d6333501d478a991bd96e94cc4e2d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "24e4ea5060394b07ba0b9ee1d34ec11b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9e69b82eb57a4b30be98e57c052d38b5",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe95177512174bf1b9f9b9c02df0be09",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2375facdf9ad41d1a4583e180c0cd234",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "024c7b6e2f4f4af8bd890826f46ba1c2",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35b7002e2c7848d795cdf26a90793847",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05e741562714489893030c8b15aa5c99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "849e0b8c0e684dc080919ec5623f5d11",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebbee14b15db4e098e3ddec7fd0e7d13",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3e0886061fe14a6f8197416d4fac43f7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "05fecb916e444a92a2433de7550e316b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "977963e71efe4bee9c6b4c652e10e0d5",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f62ec8aa36634bf7bccf14b6565643af",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b7d7a1434f84ebf8b0c138b84ec7747",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a7372bd8f33647bb845ed7b62f9e7d9a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "78a4ca679e9243dd8db11445f0436648",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fffa70601833436ea6f106dbda8743bd",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85f06e027df6468bb6f8c53b274b2fe4",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1632ea6a569141ba9c7ed823b8d9496f",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c38fa0d41f6b48ca91e3d5108c23cbb8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "db4860f7b6ce4301b16d5d20835fcf7e",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44d6aef0cede46cfae4e2f2a9c279cf1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "730722ce8e72427fb846c00aa75504f9",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "425fdda0ec22448f8d5bced8c062f48d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "207d34f6dc664dcda90a43155afc96f3",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97568d47214e456cb1afcc728cac318f",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f0ca51053a740aab819206111fea154",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7e75b3464b842cea8fc1c38b07f21c2",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "a97d8a37e95f436fb88b7ae8bad946ff",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df94c446918649bf8594381c395dbdeb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "Vermelho 1,5mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a6487acd2b1a43c398468f63056f93c9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fff01709a301434a9c027a4971a7dfb1",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab94152d585c41c09a61f847bc211a61",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1abb877b75ac479faad51c5d29a69b53",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe4a408445864c23952cfc5141456aa1",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f52daf04263e4002bfc65bf023002bc7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9a4707deaf1b4ccc9c0c979bb8dc2366",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf9dc0636097453ab9ab7b6cbf87f5a0",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6836ec2cc494463caa05cc018de6f6e4",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "979fe2e5a818413b98cba1c2a5a03d98",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7b52de3331614d07950b97a72c094294",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6835ffe2a124d789060cf66f0546bdb",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6134fa194833455a926dc1a507cc4d20",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "29c24ad1f9214cd486d23c037f1da055",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b93418830c84c5ebae3fcc46f4d4ab9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "e443433d7cb741fdab71466c50fc4f0b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5fd0d0dda37d48ba941a285c60b6df50",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a08e3fa1ea14c7795d8e8ed7f207345",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c9b45001f2e4255a772da8e584ad8a8",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "10fcaeab2fee4a479de7945e94536cf7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "617c78533e6949ab97187d4ba40127a8",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ee72a692e9f4527af050bb70b97eec5",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb3402334c344a02b58c63f0d0ec387e",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "80fba511af1741f69e221ca5719d1626",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "42fe9362d30a41d6a9fb98a5f2dea289",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "360d6d9c38044764b9c04b7a519b0bd4",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ced27787af58424b90ee0d1fa9c1918f",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "0e4962e6ae26407f9ba59ec221f9678c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "08e305bef4174f31bfbe70ffe6fed5e2",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f54223ad499e477f8e1adaba0d5e3591",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e64c2437fc3479392651093a57dc96f",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "13e682914945410eb711ba3a341797bd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "52d55c676933410a8dcf167c3fa9d4de",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "774cdcf78abf416b8f5cf6c2dca69799",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "149dd32b467242d69d09b8046561f397",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "b1b776c67ebd4331ad73597fe2b32078",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c69f16b53c134998a2c3f2bcf9cf3c91",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f96c3f2fa6a4710b624872d8227bea6",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3c61b5708234bdfb41d2aa86dfa3506",
          "Name": "passThrough",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0447a064e4e444aaac9a41bb66481fde",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eb62b31c5197418186b61924f6005bcf",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c61fc73523704a7abad76e316f1ec426",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7faffadbcc8b4a0b987e61c063641b97",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9903eabdcb1462bbd392961ae956063",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c67316c831e4453ab954c8df183c6891",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "baf870a672c544e3846ff0b7e1f33bc0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ddfda248994f468e87cc14689165d672",
          "Name": "list",
          "Description": "Lista da qual obter uma fatia.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e2ca0ade7e0a482b96f684938d9bdf28",
          "Name": "start",
          "Description": "Índice do qual iniciar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e4a7dbc9b3b4e9fb42cc0de61f1fa5f",
          "Name": "end",
          "Description": "Índice no qual finalizar a fatia.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50da43e2f00841079f11d95b5cb6be5b",
          "Name": "step",
          "Description": "A quantidade de índices de itens pela qual eles são separados na lista original.\n\nint\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8d7561f15fb4dc2afb386e3d497d441",
          "Name": "items",
          "Description": "Itens na fatia da determinada lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Replication": "Auto",
      "Description": "Retorna uma sublista única da determinada lista, com base no índice inicial, índice final, e uma quantidade de etapas.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "54b0a666fe754721956ea37754ba11a1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c4518fc096634c2788498766a8f8d151",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad9e7bfbf9c64f0398105c55d0143b7f",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;\n2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2f9d882577814669978cc75eb222a0a2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "05b3a8988c554df68aaec7c91a9eaef1",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94affb5661c3419fba3fe772f169bc9e",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;\n2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bb361da01f944ecab2435bb80dc5d3f5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "279bcbcfa6664240aa6dca0a1a85a9df",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f77c4b2c524443fbd9c214aa767fbf4",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecff4f8dc00a4fb388bf471784edc9ad",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c024b807084d4a31835edfd811ba08d6",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7b42ddd6b25141fd9358e870c7984cd1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "988a143441fc44f481143c534a3402e4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec3fa9ae171442979d22f042a2de5673",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "531c767fceb24b2f8450fe5fe495682c",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d60173c75c8465a9429071678f46941",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "67b48e8456cd4db8ac18e8332e8f469b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6708b811eb2643e7bd15fcf14a15360b",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6b8e67db9294bb196294d3052acde01",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "747800ae7060443687837162417d9ef4",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Carregar as bibliotecas DesignScript e padrão do Python\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Função para concatenar os valores de uma lista em uma única string com múltiplas linhas\r\ndef concatenate_list_to_string(input_list, delimiter=\"\\n\"):\r\n    # Verifica se a entrada é uma lista\r\n    if not isinstance(input_list, list):\r\n        return \"A entrada deve ser uma lista.\"\r\n    \r\n    # Converte todos os elementos para string e junta com o delimitador especificado\r\n    result = delimiter.join(str(item) for item in input_list)\r\n    return result\r\n\r\n# Entrada pelo nó do Dynamo\r\nlista = IN[0]  # Lista de valores a serem concatenados\r\ndelimitador = IN[1] if len(IN) > 1 else \"\\n\"  # Delimitador opcional, padrão é nova linha\r\n\r\n# Saída para o Dynamo\r\nOUT = concatenate_list_to_string(lista, delimitador)",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "e1a1b5a6f0df46e5a5a5ef4b306ba4a2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1ce4ec5896544639a7dbfa6d01edfa7c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d93788207774876a13221c777c1f643",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "60d390db5ce840dbbb8963fa62656e81",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8466aa928ffb4a8cb687d6b0afa3c810",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf58a1f8502f4a8199c40a6be67aa3e2",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7431de6b03ca43fca7f880a6852f863b",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f95b72822efb412abeec55a45613b90e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6f08b153e95c4a8693a3853381b51356",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08bf1b2d7737406f85aa04ae1261350f",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df24e0f45c59428dad3a72626c290f17",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2f141cf6b9614e0e9e32e005a6cb0ea6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6ea7149f14fa430185be55e089945d2c",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4412d8fab27c43d7bee4d3c622daf766",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a620b27fcc764d439d77cdbedda07c7f",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "99bde537de604f21884b872869f8e6d9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a66a6f1c30d24f54a941bbe305f81abe",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2989ea6b3364461288772e5cf71b2bb7",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a31adea549c442c6be22b5f4c2547635",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "73c725a83fee4bf195933b13624e64a2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b689ccacf4144c0fb88b77e551d0a6a9",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9581d7527ae84b95ae726ed14f16b03b",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "807c2734af1f4ca3871f42f9e73512a9",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "387819befd04418f8907a2fc31e99601",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "19642d51b9194788ada856521392a8d2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "446cb3cd2956464da9e174e88c316f5a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "b19552a74bcc4580a6a4cd31ea5f804f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "51d16db2ab254a0abc192687cf8734ef",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13fe21dccce94833ac579fd3de2dff19",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "3f9d4b6f206849e0a80abbdcb9a54bc3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "76a2b6ad1b504e169122cf54a70a7124",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc5157f339dd4421993274ed02eb1507",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5be9477259114f3cac6d7b139e7d7817",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "eaf3c12f72de4a379531a5c33dc09b9c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa5cc05d96be46d8b5a5d7bf50457da8",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "506b6d8d47844f56ab57cbc5b907263f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8925fa4fcb0842bca5be5b211f123bdd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8921a03707f427e9376177685c60fcb",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "fba2c17c8b5d40b58697dcea87cb6f3b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6ecffb608a6145a290598f0e46e5f7bc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20fadb9dc1d14a818956a01da221709e",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "96b033abaffb47f3801b22a1279d4e1f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a40d492958fe476b92afcfdf6139d8d0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24e0f087d68f4e8f84f1b9cd9872a863",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "17be372707314578bb621a72cb1518c4",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "444a99f2eb4c430aa9cd371030de1351",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76d3505437824268a22184ee6386c8aa",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f7ac7479da3a403b9fa18ff2ba00acc6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e64a1ef5f43b4be3a0aa8f9b19e4cd69",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "040ea221e16549e38e4715ac98b4bc0a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2393adf26d134430abb920ec42f1cb61",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ae9af7c1b2d644ae99e2a23ffa8ea247",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d44fc8b2f6d4c7ab76cf1649be7d6d0",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "76989797eca64a0a9c36e3102eb58beb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7971fa9ae9914e80b4c414197ceca61c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ed078c54afd4717a27614745b327905",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "cc305f6dee91474880d6362d6bf61c8b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "74036217c2b44809a098669efef5afe0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecbc9f0f134c4400ac391074372ec7b4",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f7af6a388be74538805fefbfc2cd559f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "731408126f334310a37a30453adc8164",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b90ff369ce4423c9c2399a45eea10f4",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "17911eb0b1d84c769d23b620c1a33785",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a0ad3082c7c9438f98dc46f804cb8ce3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62b605c439eb46be81688b7639e5d624",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f59e6a078551422cbe77c1817dca84ef",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "bea12bb855494c2f9eec2d3d98e29922",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc0ff2aca2e649f091d1db1f0eb48c4d",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "183ca3f58ef043bd86faefa91e3ff4c3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e1a9938594354729a198317f55528aca",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a58b7d1da1a483e9a21e21f43ff286b",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "598f413be44d43b581ddb2aa30615222",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d4c00dfcfc54407b9ad7c394bb88f667",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea15601006f24186a072619461aed51d",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "9743e70a53394a71a7632a2ebda99b5b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ae6bc93ba69b41f59e3f7b0807647a93",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2693a6028ea14977a41b1bf17c48d068",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "eab43113a59b485f97edb60e57fdde31",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2f01f3b14d7f4b58804808469b9e2846",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e95f28cd484e462ebac8c2fde0eabca8",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1ae467c1dc574017a790ffe88abc6737",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "90fb12617e2148a6a5b804889ba0da60",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10f39b2692dc474a940d95cee5e569db",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "06b66be4d8d54cc9bd8a6a302d1ae134",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e81fa484d8c7412086eef9d476e3befb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b68be9ad28314d858759f760880a16df",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5f9778b82cce43cab8bb2d7c303f08c3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "77c7e287e96d4dae9dd9565ecae21666",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67fad6bcccff462098ccced47f65e3af",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "75f46c96d0f546e08543fb67ad11a8fb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "eaa8c4f521de48c2bb7efd825d3f35cb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8803f34493e45b5832e4b86eac906e3",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1fac819f2d0e4496ae435b88da8933f0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a3a87c9558584b1495aaaaebf7c5bf0c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65cdea81a9f3407197f97c2d477407fa",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "fb201c0f24944f708cec8a0b4dccad16",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cbf49abd70924869b7363af1bfb0d6a9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f61c01d42f51441bb80244449107a6ce",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1df79561f3c2454ab1f84543bf726b22",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ea8ca95d6eb84890aa9b54de75425ced",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "888bb394f81a483290687b8709ab1b9d",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "065955ccdddc4662a69f14c0b3a391e9",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f6823572b0a741c19af4c0a059226416",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccb94367e06840d98aceb0bbc3c59e74",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "01732cc827f54a8d8939f02ff9d4e88c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "36f13198f5d6425e87e64bd2780c16e7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05543da39e674456a0fdfcaec8c38a93",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "ebc9bb272dfd485ab82ac5e314057225",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "33f06177a5d344999bf580f50b8d25c5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "667737d843fc4f59ad5989ab0b08f499",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "18637362f8954acca4a6cce9385ef088",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a1a834ab6bbf4d0dbeea451d5caf923a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fbf58d07cd44c3599cd6d726c313720",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "514be2a12d344e188d54ffb6d9dcbc63",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "699d7af36979420485c8bfe7b2ecaaff",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a6eb4bb93e049e9a4bc407a1ed2d814",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "15950c4238ac43c2813c1e690e980d28",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "efc5f7125304442ea51e2c57d93c51ec",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "332c1ceee1c7406c8b71e78d85129032",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0c8ab0370c894ce59e2e8adfb7997d64",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "89ee2521fbf846efa2060d451e64c6fa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31bc9408d09f421ab0ed700acccf75f6",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f1d1b750ebb747aa82de5ef7243836e4",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f66f507d93f14c2d97f332fc59a17df2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a35ffd4708046ceacd31f04c9c6d66d",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "68afff99338648a89ec8bd8337b2e5f3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "bb8da74e901842e082f6bdd1911de9fc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e563290ca4bc4521857ddf4ed726ba7f",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "37b4bfeb924241bf892fd56caa4fa149",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "94639dd099eb4434b1e568eb793907df",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b6f1061277f43a7b71926230d3fbf7a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "07d6e82352044841a2933028b0a17908",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1193a889fbb0426dbffb6c00cd86136d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e86157bbcdee493198927cd8a9976809",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "55db16a757c149649e2a979e6c0d6499",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2d0ff5a7104f485781f8e4153132dd76",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76d1db60a6c64b7892ef5585de7a9e9f",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "53edc256a5474580ab89e97c05e9f008",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "dd9ce2922e3b426080444f7f3edf7036",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57ac30889e03498387e6d11e2b0b419b",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "274312bbdb254802bb18f308d98bb9a7",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6dc5b337b3064bc0a5052476fc6d17b8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db10e47cef6a42ecaf3a81678a3bc65a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "ad129db1c6144915b95db9a55b311f8f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "aacd6cccbb39457c85035bf5b856f3a8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ac9f577bd40427faf79aa8acf62def7",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "28bdd9a1ffdc445d81da83aa888a19ec",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8dedfa97ab7e4a6e9e0ba73b6a5039b8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71682c17cbe94a3ba4ea207593d25517",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "dc1232da53ff42e1b831109610f99fe5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c617cd9ab6dd4f78b7b2320bd2f49076",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "909b750b690647d7ab361e66547f7def",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "3b7a172d755245d4b3989ba55a1f6f85",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "57947cc090b948328f81d64a006a01ea",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33598626ae404738ad7b41104bdf1f2a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "02289a9a534a4d9a98cd9d98650e2636",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "48cdc42dcb7543c885808a1196692dd8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67bb70465f1442279a1c258b73241409",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "34ff904d15634c5fa5947be7c7c0add3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "07c51608f3374d8aa15da0f23303da5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7dd21be736a84311bd47ac5975e5c942",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "59a1605c75d149a7b9139ac600066c14",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "80e1e94fc1b24997b9130b43cef67a2b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62db3cbdacb94a86aff1cfd5adcdadd6",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0677734789c44a68ab2ab9f6ebf43b86",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a70269e37737426c80563c19969ea26e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cfb666fa2c84c91b802b63378ae23da",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "dc0f6ab4cd5c430a869993a810a2de11",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "64b0e3d177ea4194840cba2c0c7a7f6d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2cba4ef71884ff9a0a43a8b91d69948",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "29ac88c78f5f401b83595dd0bda576cc",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5b8107212ee1429283e49878b2312927",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d3399e769034014b3f4cf998bb396c6",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f9fc5648f89f422ba8accf3251223b8c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7496a2a0c19f4938becb055e049771f3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7fe86f178dd43f5bd5da5bad0a9337e",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "ab0165c1fa2d4a74a16574a895c4dff8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0b23ea45338a4c9889ac6fcc4c7a4ccd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bd57113b4934ff1a5296d60e2cd6afd",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0b2ed65155ba41308bb9ca2579f85954",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5f1ad354c47b44e19aaab766044a57e4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5198264ffbe84a05b2e5e81d5bec497b",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4b28f5036bb547078c0427988eea5a8c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9f15519c221942c5b5bec5529639134b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e996f9a6e6d4ab286d52a5d7adef7e6",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f49f94ac60c94e45b582cc196e4abe32",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "57196076966545c8be383d27a192e8a5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e51179cbb664beaacfd1fdae7d610f7",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "b7ffa61e81ea4916af693c9d83e7d39f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "64b32e1b955049c4afd86714455e3faf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbd148aad6024244ab591b1a030cbdba",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5983be294d304b138d020851947d9104",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "bc659f77b8224e3ea7feb7e1811482b3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1af311c06cf44d2bb6a592e03c38312e",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "91a5a7bc309b4edd920852584ff4d6d2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4778729942914a3e9d85e51d52dbbc3a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43092769fc6b440290baa916bd206fce",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "07b464cb0cc84167804b03806e43cc2f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "824630f50d7c449590baae7ed9057b56",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c01317764dc4542aed4aa6fc93053b2",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "662425a74cae4f0a9257b23027e7bfbc",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c4923d17e5ec4733853e286bf030d4a8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dc8b3a8514c43ec8f2610a4437a79fd",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "443a8644e28343ce852c88c143968940",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "eb94ad60b1b74687ac2e520ffeded610",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39d45481e31d4156a9cdf253bdf6edde",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "16e67dc1b955453fbdd461a9ca5f20a3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "37f88a24418e4d8d8d337c7a7002a570",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abebb361f7b340669ea26333f3040d9f",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4c82730c31fa4f2ca7954ee071569461",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6b8105e1ca4d46f99593980a204d9ed9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "478a558b724244f182a737acccc95bbc",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "7888f4a5217845bd91efc0333f15c197",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "eda097a31a3645eba45c8d07a5d6a3a1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16d989b9fcca481fb23d118d15e551cf",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "35d5a8cd34de42afb39c7705859579c6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b3bd09fe34654172affabd8ff8f941ac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d0b5433e0494f5eb7e08341c5fe2d4e",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "82d98afb576249e895529b44fc1d67ed",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "67453ae880234a409a6e1180e858e629",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4da96fd4549348f3aaa57967d5c4405c",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "03be358961584d0c898600c3d9a17519",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "45cd98f64556448183be215b7a9247c3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59ac2e5d056146a99555e9aa52adeeae",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f2329453c1a845298cfd39ed117b27cd",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b98a0525612046a09e779a9570494cbb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4990ae326baf4b209097e0ad0e0ef88f",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a0cf4cf9a8ab421a803a6a4d6c420a37",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5122f973d9204fefa8cac7419e09ae45",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2bec77d53da4c3b80ffb892d041994c",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "656be755c8274edeba1f2282743ddeb7",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f7799e8c9b6f47ffaf597fc129cb0b2d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9a3e6c2ee7f4ddd9c5f1edf6ea8f715",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "42990ee2ecb64100a96c71fc9991f896",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ec56ab31558640a29612c5c760c618ae",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db8993266fba441d8dc849265392aa24",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d9eb7f285166440db9d5feea5dfa52b3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "27dc5405d3a34bebbe3c25b17771db98",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc7c6d8b8ccd431999bcddbec370eca9",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "7ce8b9a36a7547aeba612c2e3d199b7c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "3e756df0c0ba4872babb776b12cceb7c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf0fedf6d19244bf89d11af7f7684937",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d4ffc9846dcf4d049385ece2652469f8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ef81561cebd14ec2a640fb161cee8656",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e666b01d0d5a4213b5c72f61d6c0ebf5",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4194db61c0fe4850ae9a9ed1601444a0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b74a6c4e5bdc46a185cf69882e2b2a5a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2219c1ea150549b2b51882b18182ed4c",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "b75300a6445b41e6be2e1028db8d1596",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f1054673a64c48bbb0c78075761b170f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a844db8cc16e455795141fcaf30294c8",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "19ac871c1e81442e8b7d9eee75b9a318",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7d1163a333ce492fb9ec4ef7bee0c803",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3443712ade0f4727a19dd6ab35654c56",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2a97019a905846bd9c613a642a3dcaf5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "799863bd3ad547b1bc2aa990e59d7d1a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40273dba36c942a8a745a32c73234b8a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2f42dabda20f4847a9cdaf9261822ebb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f813a6c7ce944837b84d01797744b9c8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad7e279122d64cf494afedcd38f9308c",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d9200fab3e2647598c587b3d9df0f992",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "423febbf59554c38a09c6e537bf14eee",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a83d596ec16a4e8fafeab9849d5d2ba5",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1013b9e478ff4ab089823bab1906eb7d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "21f8811f86b54c19ab94da53cc39ecc5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15c16025c4194969a28afe4f769da077",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "e8f7ade47446475b92d93f805253700e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2c6d671916bd4bee94146d54157789cd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1492b00de5d4c07869b883229409693",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2601ad9b66104540ac0bace1980bb49f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d63a7213e62f4a1f9c411b723fabe6d7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bde8d2826ddf490b8c66647bc794a85c",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0a1b69e0f9964157984d5b00599ba511",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ad0977c1093c40f7b5b6deaab2633aba",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "580094ddea254cfe856617d1011c158d",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2e29bbc989404659b022de5ed68be797",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "90066c1410bb4c9f8cd03b6cd3b5dae2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df134100cffa4c7d93883c8fd843072f",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "74df64e489b1418ca3a361a2d870332e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b9474f61ae8043cdbd8f77577c84acad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9a1ed787a1345dd8789d031918c1e0a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f511840a85b04fcea72ae1d13e60ce11",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "23bfef65177c4c2c842e3b45c7f6ce27",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1738ef5a41344e59fe595fc98dd0879",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5147aab9cf184d7db82fb4e000200831",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c444ce7609e9408eb1024e14c7f4b410",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ba715fff3f64bc488dec966a2c41305",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "88a01d65881a4aa0ba7224e1d9138250",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "3f2e68d8e0ee4abe958d5c40063ae7d8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6360bb3985e24ab4a596a665463e5774",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1802c5d635054ec2ab7a26569453abd5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ca05ff973c2c4c2b9e85e337206e42c5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2df2fe6692fd4c05b71fe4a62a8bc193",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "736913cd148b41428b172eba2df1fc04",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ad99aea8e7e34780903820a3c1c74b76",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3b8a3d1a59743db830c5b83da095d94",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "9b2fc646f53c478b8ef86b3e54cf72fb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c54fbe0228a9431d8d4bdf9e1147d832",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0474965a39a42ac831f94615b8a29ba",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "Id": "124cd55cf5ca46fe98b9f74fe9693625",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "33d29527cdb0469196d50d617df908d0",
          "Name": "item",
          "Description": "Item a ser potencialmente substituído",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8ce7fc1d1f54ab5914aa659587575ed",
          "Name": "replaceWith",
          "Description": "O objeto pelo qual substituir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6890ebbe29434153b6040b7305e2ee46",
          "Name": "condition",
          "Description": "Predicado utilizado para determinar se ele deve ser substituído.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95d39774eb2b412dba25decfe5d29218",
          "Name": "var",
          "Description": "Se condition(item) = Verdadeiro, então \"replaceWith\" é retornado. Caso contrário, \"item\" é retornado inalterado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "Id": "49614581d85946cdbdf4573a46036ea5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "85a118c5bd3740c3a204771b2bd92007",
          "Name": "item",
          "Description": "Item a ser potencialmente substituído",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03cefbd2bc3241338f0363fa80b14f04",
          "Name": "replaceWith",
          "Description": "O objeto pelo qual substituir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54ae409aaa3a4b66b8e3f6023a24229a",
          "Name": "condition",
          "Description": "Predicado utilizado para determinar se ele deve ser substituído.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abbcf3eb21ae4fa7a934d25e1e1a3123",
          "Name": "var",
          "Description": "Se condition(item) = Verdadeiro, então \"replaceWith\" é retornado. Caso contrário, \"item\" é retornado inalterado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "Id": "c0d664a532d74b9680b5223396121808",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9887d3a896bc458ea6ad5e080fcd9240",
          "Name": "item",
          "Description": "Item a ser potencialmente substituído",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1873fd50eb574f75acaec6b6ace0e999",
          "Name": "replaceWith",
          "Description": "O objeto pelo qual substituir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0ca3df06dbf4193ab260e4fb5eb5490",
          "Name": "condition",
          "Description": "Predicado utilizado para determinar se ele deve ser substituído.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a753e8464b834ffd85f4c3d85b802e10",
          "Name": "var",
          "Description": "Se condition(item) = Verdadeiro, então \"replaceWith\" é retornado. Caso contrário, \"item\" é retornado inalterado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4f26a0a40957445e95b73f2ab0226bbd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b48e17a5a3144032a8528fb9d7a5e9b6",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2581183d3064410983dd93e43534b087",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "146b2cf9ba0b4a0a83084a0e225d4e9c",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1f3776f3746f45fa8f4f886c9e1fe87c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d637f820b25741f7b46d3e5b931ce5a3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f10d63bd05fd46ba9f9f0a848ee322f9",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ab6f09aa4b7a48fb800a87a4eb78c866",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c18e1ac528c5473b94254a3e68a0d5ed",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3bd002121fd4cafb39afc1aca91fbd8",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "087f5fb1427c40db9d61980db595ed16",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "abb3dd0fb58b46f68087e81d657340fe",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b57cc0bd74dc4c67962e372271a43e78",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e06f6ecc00342e983ee255f825070e9",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"0,0\";\n\"0,02\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e27c95e1b9ee4966ab818dbe153836c7",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00a4d9d4e4eb477ea26d231701432363",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc32fb95ea7f40b396b9d5e63936b5fe",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"0,0\";\n\"0,01\";"
    }
  ],
  "Connectors": [
    {
      "Start": "b964da8495414e5893199d4cd72186f8",
      "End": "0280b89f100948bebe59a02a90a14e1d",
      "Id": "a7dc4782a34b4f4a972f32c5670ad098",
      "IsHidden": "False"
    },
    {
      "Start": "b964da8495414e5893199d4cd72186f8",
      "End": "7c03bfc52a624418a86abdd65319c475",
      "Id": "0d25764506c7432ebc82aeedb01b0a9c",
      "IsHidden": "False"
    },
    {
      "Start": "9aeaaa6b87ae402f89a2fac24e2ca724",
      "End": "c676b252c07443f18c605199dbae45ec",
      "Id": "df555bead4c24c7d90c643dc83aebc44",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "cd5cc45d8a0344d1afb7b53181793a45",
      "Id": "7c26968d917a4025a1b1afe4c4d94756",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "6733913f44c048499ada827c0821ca9e",
      "Id": "89406ed2d0184b77a8d379af4f9f09b7",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "98f323d6f9454997995be76206ed3e32",
      "Id": "bf5039f0b00a40988584b3d1dc13d002",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "decfd1a1718b4271a41c22252a83b388",
      "Id": "068f3ac4cb1e4f2aa56b0967d6a6208b",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "9bc98626bf3b4c8bbd670e0804b89555",
      "Id": "35e8fea2219c4b299c32b4b5c0152169",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "3760a0221f71403da9f5bf8a43308bf0",
      "Id": "c532504ed22c4b6f907bb7e0abbaca78",
      "IsHidden": "False"
    },
    {
      "Start": "4d9123f7a7a3477f91d5821a01016038",
      "End": "ddfda248994f468e87cc14689165d672",
      "Id": "151cf6ff4d324da98975a1fc1c043312",
      "IsHidden": "False"
    },
    {
      "Start": "64b8d7f069974f2f929228c089227448",
      "End": "a385565fc3484141a4b6867aac35eaaf",
      "Id": "75ef8ce3ddd4455c9b35337c72d85cc1",
      "IsHidden": "False"
    },
    {
      "Start": "1db743c165bc4013afd177f6c932f0e9",
      "End": "4bf98b0269a347379824b28bc24f818b",
      "Id": "267b7c98563f4af38d08a0a87e097675",
      "IsHidden": "False"
    },
    {
      "Start": "9615bdb888f247eebf0a56083937a7e7",
      "End": "0d5f81b980474294b1ac1951210d4c56",
      "Id": "aa1bd567f35a4e27ac08281a9c44b648",
      "IsHidden": "False"
    },
    {
      "Start": "7af47773c7714e1285d8dc063c08c0a5",
      "End": "8f49a7f4d8ae4d7cacf763846cdb5a97",
      "Id": "e6ef2646464f4d66945361e1b598b6a2",
      "IsHidden": "False"
    },
    {
      "Start": "f349fb856ee44366af274238fab73b62",
      "End": "9887d3a896bc458ea6ad5e080fcd9240",
      "Id": "232ca57d6b884c268477d9df46baca3d",
      "IsHidden": "False"
    },
    {
      "Start": "71ca807867fa4fb0afeedede13ec043a",
      "End": "85a118c5bd3740c3a204771b2bd92007",
      "Id": "23093583858e443cb85326bfb5f3fc7f",
      "IsHidden": "False"
    },
    {
      "Start": "99dde69457cf4d6d9578f13315df1d2c",
      "End": "4310073426d541e1ba4d3cb4e2c1df06",
      "Id": "a2ea7a65527940a9ac357e8dca4bc97e",
      "IsHidden": "False"
    },
    {
      "Start": "4254dbf8caae4208b2cb1632a30e9f85",
      "End": "59ac523d8e88498bb9ae912d988f4e3c",
      "Id": "e4672f15d1294b279b0de9ef95728cfc",
      "IsHidden": "False"
    },
    {
      "Start": "4254dbf8caae4208b2cb1632a30e9f85",
      "End": "9d1b0ad2d3eb4ee8becd611a249add84",
      "Id": "fc33a0bdf387492f9b9b91411c09a75a",
      "IsHidden": "False"
    },
    {
      "Start": "3389f9092c734d2c9598ef9bcfb2101c",
      "End": "7a08e3fa1ea14c7795d8e8ed7f207345",
      "Id": "b8b33f18844146cdbdfc9639bff7ef6d",
      "IsHidden": "False"
    },
    {
      "Start": "97213008797f4410a0e794bdfffb9127",
      "End": "e0d9b5fa8df24fbe8da0374e4e97b933",
      "Id": "9cfb8f14056a456890f903fa57b8f761",
      "IsHidden": "False"
    },
    {
      "Start": "1b41432edfa34ada9f0cefdae4a3080e",
      "End": "79cf4d2d9949471d959ef160795e1d6d",
      "Id": "5a57090467c74653a2492590523da650",
      "IsHidden": "False"
    },
    {
      "Start": "92727865dde24bfd88dda3d1217bf211",
      "End": "d243543d632c4d68ad7b0d3cdc320bc3",
      "Id": "5104e3f7c8874dfcb45875e9dc80dbe6",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "8e7d451f2f764ff9822d68315f75e146",
      "Id": "17113aea795046db83e4ef9b43b6d0e7",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "17e597e37a08452eb5843e2db1a24453",
      "Id": "e463d0c95451491abf6317487aef5d75",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "67d0075f79eb4624bf8d5ae8958a484e",
      "Id": "fae0ec10dff84fea9513115df21ebe42",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "4545e687ac5b47738d8dcca911d44726",
      "Id": "405126afe6f44efb9a91d22155bd18f0",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "5fd0d0dda37d48ba941a285c60b6df50",
      "Id": "cfc5ca89f6d04a7fa314f28ae4b5668e",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "08e305bef4174f31bfbe70ffe6fed5e2",
      "Id": "cfc00af840404ba79a8fb647768ae914",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "279bcbcfa6664240aa6dca0a1a85a9df",
      "Id": "89b0e24df8a542c89b79f271021ff1fc",
      "IsHidden": "False"
    },
    {
      "Start": "6e667de43a594af4865b6ead750b5d76",
      "End": "1c68ab2f35864d278f8f646860d78047",
      "Id": "a4b686a65c614a78b76bb0bc1f17e414",
      "IsHidden": "False"
    },
    {
      "Start": "6b4e1fd9c5fa4767a6ea585f7765b6c4",
      "End": "33d29527cdb0469196d50d617df908d0",
      "Id": "3eb0a632dabc4a159fda1709a9711774",
      "IsHidden": "False"
    },
    {
      "Start": "c6cfcd6e6b1f4f169813262a1d8c0beb",
      "End": "aeabe37359ab40cfbfe3f52642f5ef6a",
      "Id": "ca40bd22c4064715a04e1729960169b0",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "2c320f26e21c4f20b73809b68921493d",
      "Id": "2243778f48d3484d973e8b2c33b5992b",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "3b010d0862a0483cb2df25a9389c6b46",
      "Id": "480212bf75804c328ba50cf2979c75b5",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "d00a5374d7f4454295339440dfbfcd12",
      "Id": "c472e317632f4c5f9f3db6e87c584167",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "da1f9d27b0204b1e87f601caf2f074c4",
      "Id": "d4e39346bc2547289e4def8a76a58192",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "3abfa997e81f4430bc2cefb0e20dbeb6",
      "Id": "fb56c4e98193438abb83f31b2f09a8dc",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "2aee8cbfadf44bc4aee08bb1f1e0869c",
      "Id": "f53be8aa44db47b7bcbe6029d723a68b",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "c664af3df9114dd28f84121c91f7cc7b",
      "Id": "58a52c0628244d9c9b0453201d92f86f",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "eb62b31c5197418186b61924f6005bcf",
      "Id": "056f05933ca4452f9ba2c7dc35c7d532",
      "IsHidden": "False"
    },
    {
      "Start": "db92798f6e394e54a32c09b4c6d632bd",
      "End": "41b4ccce8cb1448681502e6006604948",
      "Id": "6a4f6cd90d904e388cd1ad5749ca1411",
      "IsHidden": "False"
    },
    {
      "Start": "c03da7cc8964490faa7ad4cbe333e300",
      "End": "f4790a3a935d4842a92484c027452ff7",
      "Id": "41300eea679d460db3e5524d5a21ccd7",
      "IsHidden": "False"
    },
    {
      "Start": "fec687803fa44d3a998ffad5ab7aa735",
      "End": "f4f5611a3bc24b8b9910690d6f45cf32",
      "Id": "2dc99b0fd30f4b2baf0661bf0d17a69b",
      "IsHidden": "False"
    },
    {
      "Start": "982fdd3e9efc487aa8219ac24d10d275",
      "End": "642c4413536a4a61848130422f0eec44",
      "Id": "a422310609d745b6ae94ba5652860646",
      "IsHidden": "False"
    },
    {
      "Start": "0152744d510f45219b1e8720ac3e500f",
      "End": "380bcf8595b04b1d97ffeda1de2446d5",
      "Id": "914ba35e44bd4884880219134475d135",
      "IsHidden": "False"
    },
    {
      "Start": "58470743a49b491b8ee15f6f50ddd64a",
      "End": "d7561014a6e94f0bbddac40c7002a793",
      "Id": "0890291796af46a3afde2cbeb97cf047",
      "IsHidden": "False"
    },
    {
      "Start": "3a373fe50944428ea74435730ed01c58",
      "End": "98cc23606e5e411e82c993ecec056d51",
      "Id": "9aaa1668264f4e4995b8418df432f793",
      "IsHidden": "False"
    },
    {
      "Start": "3c3494bbc7ad4ff78b22f7a0bf169e83",
      "End": "39ec6df3db364097a68d12ae8fdb6155",
      "Id": "391e22b2d4234c238e97a79fb0c12a90",
      "IsHidden": "False"
    },
    {
      "Start": "362d39f074c543169a60410e5e480955",
      "End": "993001b2630948c9b8f6d9fab32d70dd",
      "Id": "91f33526cf354f1e807b7b508b09ec62",
      "IsHidden": "False"
    },
    {
      "Start": "fb8bbce3212240ec981c5aff12b6252e",
      "End": "963aa75112c74741b30487d129e3518b",
      "Id": "8791d9de0ce64516abd1769c9c7d90ab",
      "IsHidden": "False"
    },
    {
      "Start": "62da45e1efed428d8be4d031fc7e0649",
      "End": "23626868f1e147cb8472f472708dc354",
      "Id": "1b1cd069e1f64bbeb32030493b485b25",
      "IsHidden": "False"
    },
    {
      "Start": "589d0bd4aa234f9788c8bdc309a4343d",
      "End": "0571ce74d9044452ae8d9f6ed624e123",
      "Id": "854d9ad2aa004c99875e61d665607733",
      "IsHidden": "False"
    },
    {
      "Start": "3084e3d55032457c8fdf0f565b8079c7",
      "End": "94c3f4d0dc4c4630864dbd577d26432f",
      "Id": "ca0024ed484a428a91039b1792394801",
      "IsHidden": "False"
    },
    {
      "Start": "b5387bec68d04ebc8e6ffb6148f13ab9",
      "End": "f3cdb2f4da08465a96f936d98aa300d3",
      "Id": "55b3d43b4598430bac378a98f14f97a5",
      "IsHidden": "False"
    },
    {
      "Start": "ef7afad1068940c382cae7892d97b005",
      "End": "79876150ad134a499b2508495be80922",
      "Id": "a4c5198cbb594ed99525b513db385efe",
      "IsHidden": "False"
    },
    {
      "Start": "396dbe7628744a5d9e0e2723a9675727",
      "End": "4fabf3c48e664a408b95355095b08655",
      "Id": "d53b2300d9624a868802953f264cbdcf",
      "IsHidden": "False"
    },
    {
      "Start": "6b0274efac0b44c795b26458408fc798",
      "End": "08fc1c17025b42448396ff4882c06769",
      "Id": "eee1ad848ae644708bb780345753626f",
      "IsHidden": "False"
    },
    {
      "Start": "dc1fdba2a0cd42e786ba71e032493f4c",
      "End": "cee0bdb52f2143198528138caf273513",
      "Id": "885663c4614a43a881fef28c75df70dc",
      "IsHidden": "False"
    },
    {
      "Start": "6a80f18e6c2144a0ae20ef6ffc24fc14",
      "End": "fd49809b898647c1a1916baaad6e194a",
      "Id": "bad1d0fb46294c8093b85abf08ee81f7",
      "IsHidden": "False"
    },
    {
      "Start": "dfd98503cb2040b4baaa727720e11bd7",
      "End": "f4b40975664e4794ad4e3833db19223f",
      "Id": "77227362291548b7a02559437270d662",
      "IsHidden": "False"
    },
    {
      "Start": "f42fdb02f11f45ed90d5376734203d10",
      "End": "e27d3e9ddbc64c9ab2b4037c1d4acaef",
      "Id": "b889db4820e846029732dc3e6e263f4e",
      "IsHidden": "False"
    },
    {
      "Start": "b783eb3b8e9c4c918d004276211c11ad",
      "End": "83796a602f3648afae0435593f181b7d",
      "Id": "566a834e66f84cfe93c19ebb96bc9149",
      "IsHidden": "False"
    },
    {
      "Start": "77353faec1ed41a5b4b5b25b05726bac",
      "End": "2de6a221ac654f1a8d04a8a1013b54fc",
      "Id": "2f45f332a5e4404a87522138261a5e13",
      "IsHidden": "False"
    },
    {
      "Start": "a63867f0f4584810acdc2128bfa4e185",
      "End": "d0cd97d93a0b45c49ba37caa064c82a9",
      "Id": "07d79a5f09ff4e3e8388499243f33b3f",
      "IsHidden": "False"
    },
    {
      "Start": "16217165f21f49c5ad3418d84a1bdd07",
      "End": "2ebb9510ddb64b8293bf103709b056f4",
      "Id": "7472cae82ee841ed9cc417c735564b6a",
      "IsHidden": "False"
    },
    {
      "Start": "ebac563ae259472dbe085558ba59a991",
      "End": "f94ab63253664622a2250c00f66aeda7",
      "Id": "70385e367dfa4d98afeab0406aa1f561",
      "IsHidden": "False"
    },
    {
      "Start": "155e314b430a4770b0c95d872ee37fb4",
      "End": "d0783b6e07a742a7af086eee589a5442",
      "Id": "f8c63509cdce4abe9940f68b70572182",
      "IsHidden": "False"
    },
    {
      "Start": "272dca1ad30f48749a41c8b30925e743",
      "End": "f38ed0d0ad084ffaa378b849a4cf3b36",
      "Id": "24767c0a03cb4cfa88b6c6b1a15646a6",
      "IsHidden": "False"
    },
    {
      "Start": "f61fa15a55bc45a2bacd0713c2734e44",
      "End": "62faf7f0ba3d4c55bc097f942a3ad820",
      "Id": "5225e57fdefd42488fa12a80b9ecaf6a",
      "IsHidden": "False"
    },
    {
      "Start": "2ed65efd6b9545c78e1eb6105bc6dc04",
      "End": "244329f6d0224360b686bd9c8e193f25",
      "Id": "070859031f19415aba1817201cf9c060",
      "IsHidden": "False"
    },
    {
      "Start": "5832315ab17046fa8dfe1d91c0ac7a9b",
      "End": "7741fa47ab5a41d1b1827ae0ba9cac7c",
      "Id": "9932189365a54eae92c2e2dacfa556a8",
      "IsHidden": "False"
    },
    {
      "Start": "63e6ed2f5d7e4f268b7265bf7728e9e7",
      "End": "e33ee4c485584d26a3f3b079ce8cbef6",
      "Id": "f67ebc38317f4769ae2d0a41f356a202",
      "IsHidden": "False"
    },
    {
      "Start": "2fd6fe5956664d97bc2b61ed17357059",
      "End": "6c17efe9cc2c4d4c871feef713f4015d",
      "Id": "9f23e8698c124cc19e12646974ab5f26",
      "IsHidden": "False"
    },
    {
      "Start": "6c1e9fcfbe4a4301ac6e12809f508d40",
      "End": "7fa453a53ceb461ea1b3551ce04fde6e",
      "Id": "030a24c554994c78baf8b82f45499896",
      "IsHidden": "False"
    },
    {
      "Start": "cc00354392cd49fe8a41e831c89d6e0d",
      "End": "7b3622445df146a1947ddb0bcfa9c566",
      "Id": "11544257fec9482ab9bbe12064fc545d",
      "IsHidden": "False"
    },
    {
      "Start": "72ab7a2014e2461f9a2ddcb1e891eb05",
      "End": "d0fa55cbe1ae4ba6985895308ad9517a",
      "Id": "572718277cb54c5d9d6bb361687b9988",
      "IsHidden": "False"
    },
    {
      "Start": "ba7067b3ebd942e2b063977f8c49e12e",
      "End": "d83e6377b6a74ded96b3ae72a8a3afd4",
      "Id": "435a07c51df94794bac24eeb27aae557",
      "IsHidden": "False"
    },
    {
      "Start": "8583b2664f5a42ec9a39db59ffda7414",
      "End": "be40a59b94ae4e11956987373958054b",
      "Id": "4bb772adf50740408284ec7016b74c24",
      "IsHidden": "False"
    },
    {
      "Start": "f4d9bc36be164c0f9f733d8b0b5a19db",
      "End": "385cda84065f4158893bc368b627cd79",
      "Id": "e74e82189dd34b4ea908d33124cfc310",
      "IsHidden": "False"
    },
    {
      "Start": "7e345107e463450b855661f5acf9e22f",
      "End": "26f091bf29124859ac007a6ee47da2a8",
      "Id": "4020a57e647a46f696284c1a977596ae",
      "IsHidden": "False"
    },
    {
      "Start": "bedd26822f28404ab78f78c9704e5740",
      "End": "decb592e37b94099adfd35e018863acd",
      "Id": "d0dbfd8a00b446108e33418dd008c1b5",
      "IsHidden": "False"
    },
    {
      "Start": "8e3cc6f76cd941028016d43f9fc26c43",
      "End": "9fee8e89afee449089242b6605fa5b5f",
      "Id": "61bd8498b4454268a8155e5c866aaa92",
      "IsHidden": "False"
    },
    {
      "Start": "ba1d08b1d1bd46e1b604a5b5d88a3f65",
      "End": "a7f084facd474071b9eded05e91bb8a7",
      "Id": "bff8245eca5b4edf84fea03f3bc185c6",
      "IsHidden": "False"
    },
    {
      "Start": "56dcecb4cf60484aae512de3cd0fb021",
      "End": "78d8f4613c7b41df85f316955c95e199",
      "Id": "c8f9a70630664e9c9654311d283413bd",
      "IsHidden": "False"
    },
    {
      "Start": "56ae9b4281084d82b23ccb410bd5e412",
      "End": "0269582ac734435698db74e7e911d0ec",
      "Id": "57360465b50c401baa99035adfda7c08",
      "IsHidden": "False"
    },
    {
      "Start": "90074a8fa9264abfa9bccdc93cee35b2",
      "End": "3cde36a76b4e440bb5019856c921b5ec",
      "Id": "404b2f154e684aa394bb354f1c4f9128",
      "IsHidden": "False"
    },
    {
      "Start": "0150807e3e894e488269eb961b894aa2",
      "End": "571a4c7a15104dab98b1d5061e82c25f",
      "Id": "b1b326ec85c84823970be4c4f6f2115b",
      "IsHidden": "False"
    },
    {
      "Start": "c3e49766dc634bfb97b70145d356938d",
      "End": "3af13935031c4f2a9aa01198755265b8",
      "Id": "4ae2964939da4005a109a36078647b12",
      "IsHidden": "False"
    },
    {
      "Start": "c7aaa004783a4380ac3b959638f0e359",
      "End": "0037088e6405403d985247c6e58baa5a",
      "Id": "11a91d206a5d469a833bbcd0393f216e",
      "IsHidden": "False"
    },
    {
      "Start": "34069c14e796455e9065372b5a16e292",
      "End": "cff62133bc2442e8980846e916006659",
      "Id": "d9de0200030240ceb64bde9e65f2664f",
      "IsHidden": "False"
    },
    {
      "Start": "a9595df8e8ca45f997bad12f79f6c22b",
      "End": "8bdb879309f44482a6d8b22d05c63232",
      "Id": "d4c74e554e324ba693a7d6f944de0c0e",
      "IsHidden": "False"
    },
    {
      "Start": "e39115f999724ba9b8a677b3ad09ba70",
      "End": "8809fe3f9696454bb748500f340d0c6d",
      "Id": "7fe665878e9e447ab4a2231061cae61a",
      "IsHidden": "False"
    },
    {
      "Start": "597f628dbf394006af14a3ecac2ca574",
      "End": "1c022be9986e4f458779bbeb4f048fb6",
      "Id": "87a9569da5e04099925004ffb0e01321",
      "IsHidden": "False"
    },
    {
      "Start": "3d285b8d258c405b9076ff1b91d463f9",
      "End": "cbf392cec56b49ba866da4b8efd0ba84",
      "Id": "91b594da64564e28a2460ae0a18394c5",
      "IsHidden": "False"
    },
    {
      "Start": "03ee2a4df90b46f39b7555eba2e6a118",
      "End": "2ac82649020c48e99934d8a46794c000",
      "Id": "870e9462c13b4853b20430eb9c1e0b18",
      "IsHidden": "False"
    },
    {
      "Start": "188f8ab922984c27b563074577f7b9ab",
      "End": "ec9e55668a7f4a0e8d442d3b9d39a1ca",
      "Id": "fbc1ed7fc6eb4c6297e334346a5daf47",
      "IsHidden": "False"
    },
    {
      "Start": "88a8361743954571996a162a7578322d",
      "End": "209e586d865e4355bdd14d196a0f5345",
      "Id": "532e9a9147cf4dfcae76efd64155e11d",
      "IsHidden": "False"
    },
    {
      "Start": "6501bd0ac8a4432e9af31bc7dbe1611c",
      "End": "1c4f44869da0424e877d2ab3cb43c55b",
      "Id": "90206a7e646449309ed27421bbe4a87b",
      "IsHidden": "False"
    },
    {
      "Start": "0e6f25646fcd4459a1fb46dc9a30aa5d",
      "End": "e77915ea1d7a46e68fa2660b97cdc97a",
      "Id": "3b1ef874cf5a45aea6344cc83d898313",
      "IsHidden": "False"
    },
    {
      "Start": "2239c598c16944b9a373924bcbf07f1a",
      "End": "d07ad7861d6f45bb95e9083f8960ab30",
      "Id": "cf9ce6d19bd04084a8a7564c3696e09f",
      "IsHidden": "False"
    },
    {
      "Start": "e6246b8c681940f3ba71f98f02b540d3",
      "End": "224b8e0cba464476817469cf0ea9761a",
      "Id": "eec583f37e994d8bb32a2c12da8aa3bf",
      "IsHidden": "False"
    },
    {
      "Start": "48befdb17fdf4a47a986d042c982fd0a",
      "End": "ab5f4fd05974493c94b0615904e336a4",
      "Id": "095d3aa7671c45718b70d04ad458a850",
      "IsHidden": "False"
    },
    {
      "Start": "eb247b2df71e4d4b894140b72648e800",
      "End": "5f8972bcd8e54d2db3097ed7dcb1c6e2",
      "Id": "946f499492a8461d967ce9dc02529c28",
      "IsHidden": "False"
    },
    {
      "Start": "9b32f61b70bd4e13b7824dcc01b6fffb",
      "End": "3b988b39acd34185a5ed6581b8bc4791",
      "Id": "debbe6d4c88b4a679659be5de0436fbd",
      "IsHidden": "False"
    },
    {
      "Start": "7e06161111684898b268ea413e10cd09",
      "End": "8fe48729e18841309bf4d19e6ecf2bd9",
      "Id": "4dea520d70bc497c9003b639ff23431f",
      "IsHidden": "False"
    },
    {
      "Start": "7a5fd1b7f961449e94081d71998cbff1",
      "End": "628447754a4641618c64916cd07ea87e",
      "Id": "0b4ea4364965453fa2b5f838cb3761e4",
      "IsHidden": "False"
    },
    {
      "Start": "45e1b063184042cdb202784bd2710c18",
      "End": "cc40f6e7bfda48ab9904529921307422",
      "Id": "a2f866a314514e949d8094c2b070fa12",
      "IsHidden": "False"
    },
    {
      "Start": "fa908046c4c34c7ebd4f4f1c62edfd11",
      "End": "25c7cc864778477aabe4313405033883",
      "Id": "91c0fd2f00064a8398278b4eabb120ce",
      "IsHidden": "False"
    },
    {
      "Start": "82a328bc426e4ffe84900e7a2e5b3ec5",
      "End": "b8c1ba50ad7746398c0884a7059d315d",
      "Id": "7bb4a651d6594d10948cafe2a5e8b39b",
      "IsHidden": "False"
    },
    {
      "Start": "82a328bc426e4ffe84900e7a2e5b3ec5",
      "End": "50c9d023e30d4b7d8707bd2208c8613f",
      "Id": "eb96f9cdc55c4a9d87891399ffb0a250",
      "IsHidden": "False"
    },
    {
      "Start": "460867fefa444cf8b4d44a77b6e61399",
      "End": "08e942837538496cb745ce0a6bf4526f",
      "Id": "1e0d06c0350e48568669f144dc600f81",
      "IsHidden": "False"
    },
    {
      "Start": "0fadd5de42e8472db946d878ca1f617e",
      "End": "3d799752f0554306936b9dce4cfcf069",
      "Id": "5a29b0dd6f32453db4932c239daa44df",
      "IsHidden": "False"
    },
    {
      "Start": "62f9447f90814aaf960471f1a8bacdd3",
      "End": "fe650fa36c01491ca8d1ea5bfde1fadf",
      "Id": "e9d71a0aad9b4b8c982889cabdcd9aac",
      "IsHidden": "False"
    },
    {
      "Start": "e7e6d37994da43d5943fb87452fa55a7",
      "End": "a102001ab5c248c286ffe7f6dfc5f834",
      "Id": "597249fdcdd14f7892e94d7b8f005acf",
      "IsHidden": "False"
    },
    {
      "Start": "8b3e01543b92435180399c5aea3dac69",
      "End": "64996753c8f44b9381c8e795495ce015",
      "Id": "e5968b189c0c4e37acfdcd4b7afd5730",
      "IsHidden": "False"
    },
    {
      "Start": "0365d3e3a17445359d30084a2795c151",
      "End": "f6393e812d1a44ac8eb3b45ab02c59e4",
      "Id": "a47c15474ead4bd4a19c260e00d1e3e9",
      "IsHidden": "False"
    },
    {
      "Start": "238a9136a2674cff97e61f3bfcadba1c",
      "End": "e285902fb34041de81001a4c89665d79",
      "Id": "f7ec9f93121e442782e80e27c06a2db2",
      "IsHidden": "False"
    },
    {
      "Start": "999783df1cae4233bae91e0c68d0fb19",
      "End": "393550e223704ade9de7949337665a34",
      "Id": "85acacd2716e4b9bb9adc3dfa2278b96",
      "IsHidden": "False"
    },
    {
      "Start": "795666342a4b4a9a8b1e09459fbb7990",
      "End": "7a0a2e443b484ad5bb2c04f25e0654c6",
      "Id": "9cbebe7533974e3387b36ed1ae6eafc7",
      "IsHidden": "False"
    },
    {
      "Start": "df5fab4e61144ee59b270d20933fec28",
      "End": "45013ec8fd8649fc9b8c1a86bc45ff12",
      "Id": "889c102481ef4a1c93d96cc583ecd809",
      "IsHidden": "False"
    },
    {
      "Start": "d647642129d04b85a181260c5aa926de",
      "End": "7a63c229903f4303870128f1bf52229f",
      "Id": "a8c16a372efc40b79e69310c9226bf3f",
      "IsHidden": "False"
    },
    {
      "Start": "9171ec86dde4447fbdc5ce905dd0a962",
      "End": "0b48cd8c5f8f404099d9302ab8181f83",
      "Id": "78f9ef4478a8412ebedbc0e61116adbe",
      "IsHidden": "False"
    },
    {
      "Start": "d324de19732844efb0137c5b0aaa2be5",
      "End": "9cd9846f931947d9806fd1ab576e749e",
      "Id": "4a21bb35fdfc41bd8b69e4ef2658ab0a",
      "IsHidden": "False"
    },
    {
      "Start": "1fd45e69e11e440388d91f07f9eb22a2",
      "End": "cb19de545a694f5ead0ac177d3d3dbe5",
      "Id": "84b16811db9940059ae62078017c3e22",
      "IsHidden": "False"
    },
    {
      "Start": "2662280bda014cae9db58c6a6daf8466",
      "End": "c67e869c201e41629c93b3338b0eebca",
      "Id": "1cad1ed55d794e749ee749dd4a6ac9fb",
      "IsHidden": "False"
    },
    {
      "Start": "3e9a194e040444eda08dd1890ecfa1a8",
      "End": "2663b7ae3b924227bd9b770fab2d1d8b",
      "Id": "e068b4b227ce4296a21d337130c6598b",
      "IsHidden": "False"
    },
    {
      "Start": "3e9a194e040444eda08dd1890ecfa1a8",
      "End": "7bbaca15b4d541ff9fc6f5031fd31fe3",
      "Id": "f371f78184b6490784385fc81fda8311",
      "IsHidden": "False"
    },
    {
      "Start": "7d1ac92769ef4760b1a9e0ae700ad65f",
      "End": "df6cdce3a45f4be99eb9ff1bfc515f5c",
      "Id": "26063a4f8a194f2fb987cd5c92f02f41",
      "IsHidden": "False"
    },
    {
      "Start": "6f2b9747e9f347b9b4d67097c1bdb338",
      "End": "31832606852b42e29f6bf9221ea09f92",
      "Id": "3be11aa264654dad8084151711da68e4",
      "IsHidden": "False"
    },
    {
      "Start": "9a4be22b76e642a787f91c01f2013110",
      "End": "b81a036eccdd4ef18ba6729e3cd5052e",
      "Id": "10a192a4ac534d4786c5bee487b91c90",
      "IsHidden": "False"
    },
    {
      "Start": "9a4be22b76e642a787f91c01f2013110",
      "End": "1811e3b295454ff4b2cc886cfaff2fdb",
      "Id": "000cbd04e26e4e709978615014010059",
      "IsHidden": "False"
    },
    {
      "Start": "4458058813b44af39bdee96f51b3296e",
      "End": "58a266eb0e834349a8c8ff566ed8d396",
      "Id": "3c5e89cf36fc4b2789ad21b73b25e043",
      "IsHidden": "False"
    },
    {
      "Start": "22c9a99f85ed4e45a25a50af5a84ff1a",
      "End": "e2eb8300e62942d0ae4d8e099f40aa09",
      "Id": "41c49da1f07b42c19de917fc1b452f10",
      "IsHidden": "False"
    },
    {
      "Start": "5ba72ce3a47b4818aba440ec3d6cd9c7",
      "End": "0a07b5afda6e46b89452e3d01935ee8d",
      "Id": "c5e1c6c76a994a4e9cb5494847e89247",
      "IsHidden": "False"
    },
    {
      "Start": "d809a63a93bb4cabb3e23c8d912ca907",
      "End": "35b5f703281b4385bca45ebe4029806a",
      "Id": "c88382273c3d42eba49e40fcfe54ff03",
      "IsHidden": "False"
    },
    {
      "Start": "ad60135aa09c4708811138a20e4a0edc",
      "End": "a6beab41736a45d7a3917740514c940f",
      "Id": "69a475a7008143ab82c2ba9950a46191",
      "IsHidden": "False"
    },
    {
      "Start": "dd211242a61d42bf9e1eedf3c159c365",
      "End": "4f1ac9f9e38f444e9b3ff8262708ca0d",
      "Id": "e30a30a69a1347d08866be41a7b546fa",
      "IsHidden": "False"
    },
    {
      "Start": "4d0a8290819f4793a1864126db556a12",
      "End": "dc15f123a4e341c69770cff3257ab862",
      "Id": "fa0be68be8954a539c9b65e294686eda",
      "IsHidden": "False"
    },
    {
      "Start": "4d0a8290819f4793a1864126db556a12",
      "End": "9b3177abf78945c08994517977de5e0f",
      "Id": "5c62933c438742cfb0a466420900e278",
      "IsHidden": "False"
    },
    {
      "Start": "48c90507c57e42dd9b55c703c14be7b2",
      "End": "5fdc5fda1af0461fa1ef7d24aea21c97",
      "Id": "9df967e7b52f4c609445db22a9a8164e",
      "IsHidden": "False"
    },
    {
      "Start": "48c90507c57e42dd9b55c703c14be7b2",
      "End": "90f042ad5f99444ea9e4a61fa8cba2e3",
      "Id": "fdeda40f4d9246a8ac7dff8438ea3fc2",
      "IsHidden": "False"
    },
    {
      "Start": "71e46dff6c0e4b62b645832c99b187ff",
      "End": "db26a9c287f249e5a7fc552eebb82853",
      "Id": "bafa4c3f3a5545aea565f58d7f157830",
      "IsHidden": "False"
    },
    {
      "Start": "e844e21ae3d2440db7c9223ef932b1d9",
      "End": "62faaa001af94741b377f8e831ff7236",
      "Id": "09a37e302ff349b7a7c798c6ca59640e",
      "IsHidden": "False"
    },
    {
      "Start": "edbc6b4bf6e3487fbe948edd79247015",
      "End": "2c03659a44434dacaf45dc880bcb4443",
      "Id": "01fcba0bdca24ff99c1285452a090b3c",
      "IsHidden": "False"
    },
    {
      "Start": "08fc537e6c684ee0b8acef2d9310d10f",
      "End": "61e1953495994a1f907b55771e5ce0d2",
      "Id": "ef90053b37414b5aab93ab276c4d413c",
      "IsHidden": "False"
    },
    {
      "Start": "42d0c8914f6e4c03b6d9f51b437d84a2",
      "End": "dc1ff008f1764e8b8d0ea68595e9bc68",
      "Id": "d68a60f519cc43508ec81040588f8779",
      "IsHidden": "False"
    },
    {
      "Start": "b3f1eb1716234da9acfb56303dd2295d",
      "End": "a2efd4dbfcf341b69c7f45c83f50cafb",
      "Id": "91a5c1bb624f4cb0a8a22895fdafb8ad",
      "IsHidden": "False"
    },
    {
      "Start": "bdb800254dc047bda09e6320a0d64888",
      "End": "ea599f2dd89441999ea0d8fe02dfe1f7",
      "Id": "5f0b76abe9fb47448d17ea7bdcf194e1",
      "IsHidden": "False"
    },
    {
      "Start": "0e1e516d255141b29ff8d7523f06ac09",
      "End": "c4e31fd268234428a7a11cefa225266f",
      "Id": "4ce2c30e1993480587805cb386ed601a",
      "IsHidden": "False"
    },
    {
      "Start": "a407f1f3199845bbb623822dafa5f346",
      "End": "25f46ebbcfe34ab7af5c2a219997ebf1",
      "Id": "915226c2527b48c9b17eaad7b8834cae",
      "IsHidden": "False"
    },
    {
      "Start": "a407f1f3199845bbb623822dafa5f346",
      "End": "9537b45adc714bd19edf113d88b15107",
      "Id": "f82519912d964260983d9527edac632b",
      "IsHidden": "False"
    },
    {
      "Start": "d1983d5802364f9eaa963c8641a67e7e",
      "End": "8b32e6bbfb4a48489337f025fe12373e",
      "Id": "5553fbd547ec40fc9a110dc05095f9a5",
      "IsHidden": "False"
    },
    {
      "Start": "d1983d5802364f9eaa963c8641a67e7e",
      "End": "ef1d7283429d4dedb42dff5a62ccc75a",
      "Id": "70487559a8ac42aab54b80bdd7916d4f",
      "IsHidden": "False"
    },
    {
      "Start": "4d309a27cef449a7bbb74fed1f602066",
      "End": "1e70a389037e4d1693a46666c7a34beb",
      "Id": "ba4b0b7e933544c581599d159b74a442",
      "IsHidden": "False"
    },
    {
      "Start": "54ef68fac254437ba796e843b4cf1bc3",
      "End": "e1fb89a8a79842bfbe9c0a38815bd1ae",
      "Id": "2affecaa3f3b4dd7a0e9e8dbe83ce879",
      "IsHidden": "False"
    },
    {
      "Start": "dd77db0f70c74b77801b9b2744244887",
      "End": "35146d01740b413f840e276a764ace30",
      "Id": "2b55e94287404f07825c9b030bf4005f",
      "IsHidden": "False"
    },
    {
      "Start": "ad73b1677680425687cc5c39bfbcd781",
      "End": "fce38bcf2c8c4ef5a21a4e8b1d88441e",
      "Id": "98298ab34475445592a2b6d68654b3dd",
      "IsHidden": "False"
    },
    {
      "Start": "62f9df3201b8474ca83796921a82a988",
      "End": "a2114c2f34ee4719bbdfcbf65755c5ce",
      "Id": "247614d53f0b447dafdc217b6b70c9fb",
      "IsHidden": "False"
    },
    {
      "Start": "62f9df3201b8474ca83796921a82a988",
      "End": "a33b940cc20a4461b37fe38fdeab44d2",
      "Id": "908fa81bc344400f98037611cc4f3a04",
      "IsHidden": "False"
    },
    {
      "Start": "da2fecf3fae84db5a691c8772d7b6d52",
      "End": "89d2d558ad774b918df45ae1a83700ac",
      "Id": "4217fb26729d4cd2ba3e96102234faf9",
      "IsHidden": "False"
    },
    {
      "Start": "48a422ce72444477ab0a14e20afb9ac5",
      "End": "3619bd61b5694d29a8c44f5ebf01e313",
      "Id": "7c9b7b020c80444fade050bcd2cc2e1f",
      "IsHidden": "False"
    },
    {
      "Start": "804408f51b8c41ecb13ab0c5b92a008d",
      "End": "67a54db59de941b0914e9f1773b49ff9",
      "Id": "7a885391dfd74ef1877dad046f9e9f5b",
      "IsHidden": "False"
    },
    {
      "Start": "f3870228fede4046aee243febcda8f9c",
      "End": "a654304835dd4ed6b489257ed62c2466",
      "Id": "bd701df9133d4853a01ec3167fad3807",
      "IsHidden": "False"
    },
    {
      "Start": "dc33662e466b4b99bbdc5b03e5c6922b",
      "End": "e31c3160413b4bedb2d52f11bacf0e25",
      "Id": "ed9aabfd22cc4b25a650576704e870d7",
      "IsHidden": "False"
    },
    {
      "Start": "028f4cca5c5d4919bfbd74dae0b94564",
      "End": "16d9a748f6af4c439040e7f70fac9a6b",
      "Id": "6593598cf7824ec095c9ab9159417bbf",
      "IsHidden": "False"
    },
    {
      "Start": "63ddb68ede5449879228248dd760ffa4",
      "End": "33d6c2b90f8e4ae39808c243a9140330",
      "Id": "0dfa245e0471431e8e5daf6e2fd7be5d",
      "IsHidden": "False"
    },
    {
      "Start": "63ddb68ede5449879228248dd760ffa4",
      "End": "85c317df1c634daeba7b9bb3f7e431a7",
      "Id": "b5d34fff239048a3b25ec0808dfd2f42",
      "IsHidden": "False"
    },
    {
      "Start": "84ca55fc5b7446b09e7fc70734d08686",
      "End": "1f00f0309d334ab9b118e2ac276b6034",
      "Id": "94d0faa9e7034a38ab57f512fa2f5a7f",
      "IsHidden": "False"
    },
    {
      "Start": "413832043dd0496e9abef6b3af3230f4",
      "End": "b59c307106314d109a15f006286a7ddd",
      "Id": "ad39ab05bc0747f8b87d6575b9f400ff",
      "IsHidden": "False"
    },
    {
      "Start": "1d53c840423148ffa1931b8ffd94ba4d",
      "End": "cce3a57b8c6e45458649c7a57d6c139d",
      "Id": "72d891f3f5d34b489f1cadfbc397bca5",
      "IsHidden": "False"
    },
    {
      "Start": "768a77809ac14996882e262a7cc96806",
      "End": "12675ae089ee47f59e9634fa6678103d",
      "Id": "b1db3720829743e09fa5ed9ad4e9ef13",
      "IsHidden": "False"
    },
    {
      "Start": "5a7e4e42424643f6afb7260e68813259",
      "End": "f54223ad499e477f8e1adaba0d5e3591",
      "Id": "30af4bbb34c84a54bafdec0cfc22f155",
      "IsHidden": "False"
    },
    {
      "Start": "64298fecf37f4d0cb4a062c89dbb9ac9",
      "End": "1f4f0ea93bb74fb2b04e4de902918b03",
      "Id": "37e5904af69f47c6ac8264c649e62a17",
      "IsHidden": "False"
    },
    {
      "Start": "64298fecf37f4d0cb4a062c89dbb9ac9",
      "End": "fa76a8eb34564b36a7f954c7807faa2c",
      "Id": "f6e0f7ebe0e3477cb54436c8d6c72480",
      "IsHidden": "False"
    },
    {
      "Start": "c6394e5b8d1643319ae4a9d406dad006",
      "End": "384466872c3c42358f390892a9cd3f71",
      "Id": "3ccbf5c8060a4649842cd4edb574b96e",
      "IsHidden": "False"
    },
    {
      "Start": "c6394e5b8d1643319ae4a9d406dad006",
      "End": "2db3506930844feebcac24cc10dd2d17",
      "Id": "2757d720fc484e7996b789577fa57008",
      "IsHidden": "False"
    },
    {
      "Start": "6cd588283c6843d893f3b5cfd9fc5a2b",
      "End": "7a1d397cb09540da9d27aed0a25dffe5",
      "Id": "6422efe6c733496899153ebfbad33024",
      "IsHidden": "False"
    },
    {
      "Start": "00511fa894e94b879135ae3ece89b8f3",
      "End": "9f95e192149f409da42d49668d1b627c",
      "Id": "d3a226b866714e9b843bd58b0c9435e4",
      "IsHidden": "False"
    },
    {
      "Start": "d2ddd10184a141189727f634e51881df",
      "End": "2ddbdb0ab79a40ee9ef9f5d2ffc81431",
      "Id": "6bbbe130a7994139925133e48cdb8ada",
      "IsHidden": "False"
    },
    {
      "Start": "ea93250d792f4ae087faabc69c0b5ee3",
      "End": "7c4000ba8bca4d769c13028ebcb19313",
      "Id": "51da4cb48d834a8392dcc639d71f377e",
      "IsHidden": "False"
    },
    {
      "Start": "8ae0393ee6454ecd90f66006020d3f3d",
      "End": "2630199b1a334740a43777cc4f250d66",
      "Id": "0eb1ea568dff4e119727d879468bd13e",
      "IsHidden": "False"
    },
    {
      "Start": "c55c11394c5640fe9aa4369bbacbe751",
      "End": "cbc4ac4dfd054254b7bdc282ac3434ad",
      "Id": "ece7024fca364756bf44ef1873c0f868",
      "IsHidden": "False"
    },
    {
      "Start": "3d6a20135167495ca09b75081e3d5ee4",
      "End": "4effb8471f854298a642467c92c50444",
      "Id": "03caff693c52427999a9dbbd558f0d14",
      "IsHidden": "False"
    },
    {
      "Start": "34f68ed028ba4ee6888dd6723f35d89c",
      "End": "b5960044b8c8411d993d18596b215822",
      "Id": "a299befe74fc4c789edaa0f8085b74e3",
      "IsHidden": "False"
    },
    {
      "Start": "b38531302caf4209a2e77b671f0a9232",
      "End": "4412d8fab27c43d7bee4d3c622daf766",
      "Id": "7bd3e5e5e4ab49a69b2721a5278e6abb",
      "IsHidden": "False"
    },
    {
      "Start": "e73dd544ce044b08b851228be5e7f180",
      "End": "abfbbf55d4ef4c1db11f17b4b248b8b2",
      "Id": "8f5079d8ca7c4b6bbc286c8f2429485f",
      "IsHidden": "False"
    },
    {
      "Start": "e73dd544ce044b08b851228be5e7f180",
      "End": "74ba3cecfe60496aba23b8551dd7029f",
      "Id": "b295b9bc783f4ba88053a2e6bbdb98e1",
      "IsHidden": "False"
    },
    {
      "Start": "e73dd544ce044b08b851228be5e7f180",
      "End": "9f7b6dae275c421db49294cb0dc09216",
      "Id": "603014b8e2f440b88b95121cba6279bc",
      "IsHidden": "False"
    },
    {
      "Start": "ef90a126357a4fc0951ed931eb14b5ab",
      "End": "cec35643e2134a5594fcbd17f6a97dbc",
      "Id": "dff853c9e57c4f65b26578890aba40e5",
      "IsHidden": "False"
    },
    {
      "Start": "7f9505372ca4486a856d7098cfcaf53e",
      "End": "f7dabdf2dee944b9a4529e3b4422d02e",
      "Id": "ff652f3e050f4c10a4c33f60922295ea",
      "IsHidden": "False"
    },
    {
      "Start": "96cbe4800070446aa1ce43ad9b630a74",
      "End": "6ea7149f14fa430185be55e089945d2c",
      "Id": "80050cf8f3ab4902813adc2000e43778",
      "IsHidden": "False"
    },
    {
      "Start": "702516ed0f9e411883eca2fca5d280aa",
      "End": "0d456c4453014dc1b03243ee0fef8b30",
      "Id": "6300800569c7459892e3b8bf4d313a9a",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "ea80dcce342a477eb5872047394e1191",
      "Id": "f239169ebb3a4e6a9a1f72eae7ebdbd1",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "996238b199bf4e5e87ef7c9f7095480a",
      "Id": "c7e507a071654e85a90c3e30f7313b82",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "033c6a41db23483bb86e8d8cf10319a3",
      "Id": "1e6b2826585c41de9f55ab74db13dd92",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "4ddad5e03d8346ec907d94c4c3a5b2ee",
      "Id": "2ec95641c9ec4986802d0c58105047e1",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "fa3c2a35c7ee484cbbc95928f780788c",
      "Id": "f93b4e2cacb6453b8eca30e42ff59f5c",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "d8fb710b9c674310bae52a933322ea6d",
      "Id": "340d81a4485b408fb6d6b89070582824",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "bfeaa8e44bb54cfb8a6a9dfbd179d939",
      "Id": "fc06477a14394be0b07308275e0fe5b9",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "2ef07fda158843f6b91f66701bd19177",
      "Id": "ebf5c5442f1148cf919f07ab28f7042d",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "a32adca522be4b91ad264f477551947f",
      "Id": "0f2d372227ba41858997ffcab9c5f0ac",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "458a75973a74491ea7209a10ed3f2fab",
      "Id": "6ec069ca8f6d4e9e9569fecbc712b75a",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "8baf6396448d41a284867faccaa8374f",
      "Id": "71088f9405df4412adf74d48473746c7",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "73370822be864d8d852d3e8f6f6d188b",
      "Id": "1f55d311c1ee4d10914db6a753f79f4f",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "7e7238d5f3474d1b9c899e32b89ba547",
      "Id": "7c881721e2824ad9adfc5a471c054587",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "8060f66cec5c4a4cb5af523a72e5e5f4",
      "Id": "44024cc95b60462e827f0021995a884f",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "5f12a8a8a9004d549c41a7ac359536e7",
      "Id": "ce92e644be694c5ba3fc1710eee1d7b1",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "c2b0c0d71d65447597c68d2ea9cc5bb2",
      "Id": "5102f7abc1bb4c438187d2fe40acf6dc",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "4c5e2d4604ae4613805675b9337da49d",
      "Id": "3fe22a2fef6e4b979e3471465101cc66",
      "IsHidden": "False"
    },
    {
      "Start": "19a02e2a5bd64aaa9342398ed5b39ec0",
      "End": "43dc10bea8284f459f3ee30779e632c5",
      "Id": "ad09e5cc4419453e85c274ba79c228d3",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "1193a889fbb0426dbffb6c00cd86136d",
      "Id": "812429682e3e472b8bab0c68aedd2eae",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "2d0ff5a7104f485781f8e4153132dd76",
      "Id": "48ed83be8cd94f3da9c75959105932ee",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "dd9ce2922e3b426080444f7f3edf7036",
      "Id": "3315ca3e8f86415eaa20b16c369dc90b",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "6dc5b337b3064bc0a5052476fc6d17b8",
      "Id": "7260f50be81e47f593df24949c3ccc31",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "aacd6cccbb39457c85035bf5b856f3a8",
      "Id": "aaef75ecbefd4fc1893e78e131cd1e3e",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "8dedfa97ab7e4a6e9e0ba73b6a5039b8",
      "Id": "701cdf7ecac64f9d8eefc060b25e01a3",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "c617cd9ab6dd4f78b7b2320bd2f49076",
      "Id": "f900eaa4c03547b0b434f0833726c599",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "57947cc090b948328f81d64a006a01ea",
      "Id": "5c648db057c84728b27bf37201827ee5",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "48cdc42dcb7543c885808a1196692dd8",
      "Id": "10e9f0ca658348ad90073a54c88094a4",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "07c51608f3374d8aa15da0f23303da5e",
      "Id": "5a174577d0084d04a1664b2f07d4081b",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "80e1e94fc1b24997b9130b43cef67a2b",
      "Id": "de7ec371e25b4c6abcf1358c244f52bc",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "a70269e37737426c80563c19969ea26e",
      "Id": "820576bd2887430cb7ffdab754b0f00b",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "64b0e3d177ea4194840cba2c0c7a7f6d",
      "Id": "15c2455cf07141408c7891cbd655d0f6",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "5b8107212ee1429283e49878b2312927",
      "Id": "1160f50cd20b49148e35e6979f7c21ce",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "7496a2a0c19f4938becb055e049771f3",
      "Id": "6bdea6edeb69414eb088c4823651e170",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "0b23ea45338a4c9889ac6fcc4c7a4ccd",
      "Id": "0b105122aa554b40b74b9f9717fdbee0",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "5f1ad354c47b44e19aaab766044a57e4",
      "Id": "3c36a19f7a8d4eec975a90e912aeb5e3",
      "IsHidden": "False"
    },
    {
      "Start": "ec1f2034dcaa40e4991ed2c6735093b2",
      "End": "9f15519c221942c5b5bec5529639134b",
      "Id": "8fe69e4a28b0429397b06ad9d4b32f1e",
      "IsHidden": "False"
    },
    {
      "Start": "641621c6e99942ac93b1fe5647b71f48",
      "End": "8ecdbb7c3ea64b30a6dfa55cb88a60ad",
      "Id": "c0a34c86910540a998ad169876e328e2",
      "IsHidden": "False"
    },
    {
      "Start": "f4ad5035b0224d939ae4ae1a62f1c7f7",
      "End": "cccfb11396894907bb23a719173ba73c",
      "Id": "2e79a803758a458b95759cf8a3333785",
      "IsHidden": "False"
    },
    {
      "Start": "c46b189e6cb447bb9151b386c69a0756",
      "End": "611b970fe5b84b7689f85b050c3bc8f9",
      "Id": "a76b3da6a4184a69af96c23ebe37e100",
      "IsHidden": "False"
    },
    {
      "Start": "6db487d907a14ba5b8c632c0274b5c1d",
      "End": "a6c4928e209c459fa4ab7616c11f86bd",
      "Id": "cc28723187374e7794e512a29026793a",
      "IsHidden": "False"
    },
    {
      "Start": "80de088a285448a6835e6b57eab7ceb2",
      "End": "b16b269ba2d84dceb63ec6bb706db5af",
      "Id": "6e48dcff75b64c16babcf92c46e06bae",
      "IsHidden": "False"
    },
    {
      "Start": "c745ae57d25b4630a70cc1aad10f4ffd",
      "End": "ee97c57980784c33b4163c99ec2bfc75",
      "Id": "0f52d3f171574a53a3d70c72305dffe6",
      "IsHidden": "False"
    },
    {
      "Start": "bf913cbb54484846bb570ae5ecb38e0f",
      "End": "60cbb57c5ba4489bbf6039f4c896c926",
      "Id": "ce5375cd8db046178f64c7d5a72e234f",
      "IsHidden": "False"
    },
    {
      "Start": "c2c0e545a5584a3b803340d7b911a200",
      "End": "05d30222f5034065bb5018a32fd9b969",
      "Id": "c2a4ca245eb24f6791da441a58f4e902",
      "IsHidden": "False"
    },
    {
      "Start": "a47626ed343644fa90f1ec298bc2efcb",
      "End": "8a249ca156da47ab9d89443dd2df9fce",
      "Id": "f8d3e1535306469399c690c52d451b79",
      "IsHidden": "False"
    },
    {
      "Start": "9f35b4b6813546498b52b15985d4bc82",
      "End": "a30ae5aab37d412cab5501ae2fdcb13b",
      "Id": "a56cbe94e08f4eb5869c060c3abe9083",
      "IsHidden": "False"
    },
    {
      "Start": "38f4704feb8a428d86b7bd21d7f588ba",
      "End": "2f87b068374c4331b28637c11ebf2946",
      "Id": "0fa3ef540b064a899c12d015bca6cc3b",
      "IsHidden": "False"
    },
    {
      "Start": "f694e52ea6f74bc9a97726116d30853c",
      "End": "a1f34e8c6d4d4f86bbf9c3fb40479377",
      "Id": "ca9e89b4a63f41b5a4a2e884d4c2ed2a",
      "IsHidden": "False"
    },
    {
      "Start": "03bc17a067dc4e0398bdd044553181ab",
      "End": "5240c939971b42fc9b6a4c4d7fa05e6e",
      "Id": "d5f6d25d1fd94ede811cab6051ec292c",
      "IsHidden": "False"
    },
    {
      "Start": "255f4836ff054481b3835ced72b32d36",
      "End": "5e6ee17585da4770a1cafda66653c7c7",
      "Id": "b7ab88b0696d4dbc918fdec1acb8fbe6",
      "IsHidden": "False"
    },
    {
      "Start": "5c780981121945ec824c022a6f6ccccd",
      "End": "b92106deec654835a8d5889669e1554e",
      "Id": "f72c83ffb7804d70a5ee6c4fdf1816cc",
      "IsHidden": "False"
    },
    {
      "Start": "5f0cc4c505d64cb1952ca96d5d196061",
      "End": "4d8ba5a98d56468ba46e30ce2b16c897",
      "Id": "8444fad1cee244238dc00e4e9b47b85d",
      "IsHidden": "False"
    },
    {
      "Start": "1fe882872f0a48c6b916b8f39709db4a",
      "End": "8647cd77b60c4a21be4f8b8baf585e72",
      "Id": "6117369d34d84889aac756a707fd4b35",
      "IsHidden": "False"
    },
    {
      "Start": "1ac43778d2c14c3d8da72c9c140541c6",
      "End": "6abece9f08604389992393e2d9a2e0d5",
      "Id": "b8a6aeb4d3444894bc7ea1345586c536",
      "IsHidden": "False"
    },
    {
      "Start": "9bac3307e99843cbab009dfcd3b5921c",
      "End": "930401c058c34cb6947d4c1b0b330918",
      "Id": "d2b7c5c286ba49f791f82da9f770411b",
      "IsHidden": "False"
    },
    {
      "Start": "2c37d55434b34875ac5d03d630901a8e",
      "End": "f1a26c85e1664f4aa488ecd85ac30bfe",
      "Id": "986c4688f7e34c42a6797b2b0d7a0e5a",
      "IsHidden": "False"
    },
    {
      "Start": "f7aeb90f62fc403dbdcdd78e6c18f54b",
      "End": "b51f37db2d2e4bd9b552ea73ae70e5f0",
      "Id": "00c0fa4578b144aaa4905df4db134ed0",
      "IsHidden": "False"
    },
    {
      "Start": "016824392584446ca031e39b484443e7",
      "End": "0887800d9e09470aa270914e559c7489",
      "Id": "007121db60e546ddb7ded9e794d27553",
      "IsHidden": "False"
    },
    {
      "Start": "43dc8999ead641b3bac382e25fe74f78",
      "End": "0968c8a9bc864d36988f1bdca5393be9",
      "Id": "799e5e7e3ab348f19296062e8c49b3bd",
      "IsHidden": "False"
    },
    {
      "Start": "8f374baed67944e8b37fa5a5d5fa6d92",
      "End": "b4e0d59eec8343f581c782196804ecc8",
      "Id": "33e3c227f353487abfd1cc7f3d066226",
      "IsHidden": "False"
    },
    {
      "Start": "59c7601c2f2340968b8e2cdfb3958159",
      "End": "2ec15833fd7f455faab8ecdd5e996de0",
      "Id": "f83701b759ea4b289d86fc249e53e664",
      "IsHidden": "False"
    },
    {
      "Start": "2f1d65b64c3c40e199d89db729348de8",
      "End": "82d5a957755847b3bb1ddbc862d79cd5",
      "Id": "096802d663ce4583b36c21acfa582fc2",
      "IsHidden": "False"
    },
    {
      "Start": "4bb78b82beae49748e0b36f9b79b607b",
      "End": "5f110b4d1932434ab9da7c2e738f01dc",
      "Id": "7bd0bc2817cc409aa48dae08f67e06dc",
      "IsHidden": "False"
    },
    {
      "Start": "2396838f69a944f6b4aad003c29edae1",
      "End": "a9177d58180e4ec3997d26f8f85807a1",
      "Id": "b56e0cbb24ce4fa6b08affa3fc730a5c",
      "IsHidden": "False"
    },
    {
      "Start": "d738ec313cbd4ef49a187e6392880f63",
      "End": "07992821b7254315ba7a79a9a10d9d7b",
      "Id": "0e0c22d324294c60b6bb7dad534a5a58",
      "IsHidden": "False"
    },
    {
      "Start": "16f8d92c4a0a4bed8181909f5686c82b",
      "End": "29b5078d849a46099526f3f164d2c134",
      "Id": "9c00a9eb9c684bfba9642c5acede9028",
      "IsHidden": "False"
    },
    {
      "Start": "0135270f82ed4447adfb1a36942dcdf8",
      "End": "5e694d69d9a646e6ad8157d1087f1867",
      "Id": "25590e7960904226b54013414a6f8640",
      "IsHidden": "False"
    },
    {
      "Start": "80e8b51b545d44d18c805c40b783db46",
      "End": "e9cb27b25d0e407eae4608db815d55b2",
      "Id": "f1f239a5a67845659ffb183928ef838e",
      "IsHidden": "False"
    },
    {
      "Start": "999f0d30e2d74921b7f895f1e835b5c4",
      "End": "16aba5547a0f4d4daab5f72ab6b2a37d",
      "Id": "bc39be5d376b47c1b310447f58cf2a44",
      "IsHidden": "False"
    },
    {
      "Start": "e94a6f30d6ff48c2a49f0d517eae7ef6",
      "End": "d798fd374d404b4bbdd6065ee03bc36d",
      "Id": "b50cfcfba529409e83148ba152e3073c",
      "IsHidden": "False"
    },
    {
      "Start": "2fcbdfb9aa5e4b7db88967b405ec3e77",
      "End": "349aaf7d900c40cd86e37883c4acd44c",
      "Id": "afb7b88e49b24779a2cf8e0c187ca564",
      "IsHidden": "False"
    },
    {
      "Start": "68758b1afaf741b4a4fc4c863a2e8ab5",
      "End": "3078ec796df9498c918a0f9d9e61f202",
      "Id": "312a811db5474a73be98dcf9143021eb",
      "IsHidden": "False"
    },
    {
      "Start": "89c04e4e7e744586ac0dc572e6c70dc5",
      "End": "8b4cb4c6099147338e563a1bc4e6c022",
      "Id": "4c23f63c9a25468abedd7ed9d4143687",
      "IsHidden": "False"
    },
    {
      "Start": "0112409df20346d1bc7c66e299d3f03d",
      "End": "a95c4b9c490d42dd92cca7858de9956e",
      "Id": "d4e44885719042f9a3da3e6275be3628",
      "IsHidden": "False"
    },
    {
      "Start": "8d5dcac603934258b1316c4a4d1ff67f",
      "End": "defad9f2f6684157b924aec67016d01f",
      "Id": "485ebfaff64846e7b368b7d365703e7c",
      "IsHidden": "False"
    },
    {
      "Start": "27bacce377314a32bd43af21d3431ee3",
      "End": "0ea5d0c64b0d4ba5b6407ef40081b846",
      "Id": "bb288011ee734567b76d761611c12441",
      "IsHidden": "False"
    },
    {
      "Start": "f0f9e9b5f2734b2e9a606e64ce0f7552",
      "End": "9a3c48e6990d4997a5d07e543e9f6aa2",
      "Id": "e934399128ce4b75b294533d1b36bda1",
      "IsHidden": "False"
    },
    {
      "Start": "536c26b7cb7a420ea900d43f714a54ea",
      "End": "63dc263bdd8e45a785f185c0c94c1bcc",
      "Id": "2fd5f8f063a2465abab7d7a858ff403f",
      "IsHidden": "False"
    },
    {
      "Start": "7df570949e4f4375aba98a2dbb34d44f",
      "End": "ebd08fc370ce471fb6cc81bf30cee3dd",
      "Id": "0ae36f0107504cf89c254222209c76a2",
      "IsHidden": "False"
    },
    {
      "Start": "05d9e0e0480640b0806ecaf48e803a49",
      "End": "1df9825651e24603b264def6eb8de7a2",
      "Id": "c97a743c35254d4aacd756fbfd31f3cd",
      "IsHidden": "False"
    },
    {
      "Start": "dc55be5137314e40af1b8bef14fd0f17",
      "End": "355b37fd1b3844a18ac4580e7acf84ab",
      "Id": "e8f85507507a4dca9a856f1e63c274da",
      "IsHidden": "False"
    },
    {
      "Start": "b715613891cb4997b388357c83058735",
      "End": "d6c3f29c86324bc38993a82ffbe96df6",
      "Id": "b72618b9692c4f01abcadb3588a03a7c",
      "IsHidden": "False"
    },
    {
      "Start": "78b819100a3e4705a74ee6730c97dd8f",
      "End": "b45623207718409cba0cb338e5cc31f2",
      "Id": "2b9efe26de48450fabbe9b6d70ae932b",
      "IsHidden": "False"
    },
    {
      "Start": "4ba9428b603740b181eeb04e076c5a46",
      "End": "f65fcaee6fa14ed48ff71221d0896d99",
      "Id": "28db95a368cd4c819be38435588a1e88",
      "IsHidden": "False"
    },
    {
      "Start": "42071ba21393463b964926a16830537a",
      "End": "cfa250d90e2647118977f0e05c64b0ab",
      "Id": "4deec440c7ce4b08b30f6bb6ced43f92",
      "IsHidden": "False"
    },
    {
      "Start": "b973d48b7a134bd3ba3f883a067c3bbc",
      "End": "7fd0c1a3f61e43459bfd2eb621e75e6c",
      "Id": "b579f06dfc0444adb4d659782d3db540",
      "IsHidden": "False"
    },
    {
      "Start": "dfa6ec9e9f0840ec95f5bee3cc2e0930",
      "End": "f2c7f48a60ef4ea6b0986f63ff7d7f7a",
      "Id": "0db03a89bd6244729e2db13723f61f82",
      "IsHidden": "False"
    },
    {
      "Start": "87b4dc75e6c541d69dc67ff362616210",
      "End": "d9061e0ed9584befac81c4b4eba09afa",
      "Id": "24297b6cc313414b8b920b7c0942b5f8",
      "IsHidden": "False"
    },
    {
      "Start": "fe4f774a978d4655857f4aedeabf39ea",
      "End": "7d757ad31ac240188019ba7fd8ac42a0",
      "Id": "68695f87838a4c63b1e7620b5ad06cee",
      "IsHidden": "False"
    },
    {
      "Start": "176091bc57eb42a7ab2fe61359e3ec8e",
      "End": "11c3e6aee71e4d37b4095df6ec9b1dfa",
      "Id": "3c3030521c9946798f903c4b4b8a3531",
      "IsHidden": "False"
    },
    {
      "Start": "71ab95370362424e8518c9b51788d5cd",
      "End": "6a911ffdebba46ebb4e4cb28a2af8499",
      "Id": "c37d557c81cc4e77b7b3f0490844d248",
      "IsHidden": "False"
    },
    {
      "Start": "82440619af544a7c9df908614c1d0cff",
      "End": "58b17edf3969481a837b5851d8c4ea84",
      "Id": "524ac35ef1f14eeebbf55163e78154dc",
      "IsHidden": "False"
    },
    {
      "Start": "981f8316f458467ba1a9bc3a234de967",
      "End": "811e16ebb48b4dab8c9d8456fc92392e",
      "Id": "ed987df5d4934ec6b1172c181075843d",
      "IsHidden": "False"
    },
    {
      "Start": "639fa97deada4d53a72ca592ccfcf1fe",
      "End": "835c42615e6e4bd092d4e845e6224b28",
      "Id": "eb088a95eb9d4ab8ac32a73da21dd0b5",
      "IsHidden": "False"
    },
    {
      "Start": "01ed5a9f43ff40f2a186f3ecc28aa9a9",
      "End": "fbf2f3bb24ad4a569392f18ff3c1a9fb",
      "Id": "b0fd88722d03466298fc05817af1a4a8",
      "IsHidden": "False"
    },
    {
      "Start": "1cbf5a8ac83b41efac060512c54f75a8",
      "End": "f6633a57ed6f4cb5930d77c4eb728864",
      "Id": "651b2e1041ab4b3395c3c8795563f6dd",
      "IsHidden": "False"
    },
    {
      "Start": "b4c76e5029914fbc811e7592837bf4bd",
      "End": "d0065b4a9c6f4a71bc6fd888a8399795",
      "Id": "05ac61adea4c4d649818fc05cd8a114d",
      "IsHidden": "False"
    },
    {
      "Start": "580d39c045f7479483cad47bfdf44eac",
      "End": "66354f5af8254a08b0a571d753d6d52e",
      "Id": "1c3fcfa8dcc542e3aaea6a46b4f90834",
      "IsHidden": "False"
    },
    {
      "Start": "d31d4ac0c6784f12967fd06d2e82079d",
      "End": "ecb49223aadc40dc8827eab9d8eb03bd",
      "Id": "7d516bafc4a440dda347d311c4bf9265",
      "IsHidden": "False"
    },
    {
      "Start": "8fcb85e023b942148f333f5c2ff40d60",
      "End": "7a41aa1bdb3342fdad8f64edbbaa5243",
      "Id": "1b27311ca7c64ebfba818ebe94eb65b2",
      "IsHidden": "False"
    },
    {
      "Start": "265fa4c768d945b2a86431cb03139e77",
      "End": "995dda1f1a0f457e98ff6272ae715d3b",
      "Id": "6002988ec70949f9a0ff6801aca88584",
      "IsHidden": "False"
    },
    {
      "Start": "55d57282e4cd46d8972b1a42022f080a",
      "End": "a73000573d3c4c969b3217806aaf780a",
      "Id": "e4ed1bf73a564badaf3376ede2f9f313",
      "IsHidden": "False"
    },
    {
      "Start": "b28df4c0b4e84f798624aebd004d3f76",
      "End": "fac409030b8645e09415ace37d1c1d93",
      "Id": "db592845241a45f397cc6296892db844",
      "IsHidden": "False"
    },
    {
      "Start": "67455dda0ecd48f48310ada4ba5ca618",
      "End": "23ed2a1fbf2a4aa49cac3280c77889de",
      "Id": "3e157d43be2a4c93a0cc06974ffe6555",
      "IsHidden": "False"
    },
    {
      "Start": "f5ea428ef53a4018a845c0e12d00bc94",
      "End": "fdb506dd9dcf437c92d4fa077fc78b6f",
      "Id": "44a0ae7a986b4635850d3b1a2d2d2d48",
      "IsHidden": "False"
    },
    {
      "Start": "f0fd82a48b6b438bb19b8b2e7de3bd52",
      "End": "718666684dbd489588de7ebb2846961c",
      "Id": "d36b1719dbfd46f8b854af7312fb39e4",
      "IsHidden": "False"
    },
    {
      "Start": "98ee67fb80db4a66ab63ab5bea7ea940",
      "End": "ea0c5b7621f545e2a28786647d8d8a23",
      "Id": "050d199f816d45c1b5cbc572b120179a",
      "IsHidden": "False"
    },
    {
      "Start": "4d96dcca308e44eab1e41146142d5078",
      "End": "aaad8078db6443b29fb5d3deb10d194e",
      "Id": "28be9b2540d7463f8807b1c5d17be92c",
      "IsHidden": "False"
    },
    {
      "Start": "7bf24d15145f48578980a2bace0c4f70",
      "End": "1a88e8a44ce04185af46d16ee112c5c9",
      "Id": "06a62150872d40c698411714ce7ef6db",
      "IsHidden": "False"
    },
    {
      "Start": "d2454b2fac724eabada7b0f9da8c23bf",
      "End": "1e6574f6f52e4ebd9ccdb50f0a94e0bc",
      "Id": "543e92dc80784becb3a8131e1e110fd9",
      "IsHidden": "False"
    },
    {
      "Start": "1a69ef050ed34e94b2ce5f7757f1db80",
      "End": "eb8d43494a624857825609ae2f70e209",
      "Id": "16fd78119845441fb1f3c321de484475",
      "IsHidden": "False"
    },
    {
      "Start": "f8ac539cffa246029ef96dc785e2dcbc",
      "End": "a5c32a0f79444b13bd43d0aab1c26918",
      "Id": "e4a8b11c4e5f4ea198155d07c96bd21b",
      "IsHidden": "False"
    },
    {
      "Start": "e6474d5b31db455687c52cf0354a2ecb",
      "End": "b2432c7d885e4ab782adf702396bf364",
      "Id": "e80f4ca6f10748a2b7844918519297e1",
      "IsHidden": "False"
    },
    {
      "Start": "3cb6af4861f649c3b3a3a53a022a08c7",
      "End": "e58f45acd30c453db2c497e74be5c820",
      "Id": "3bd57896dcc14a748402362c38b3eff7",
      "IsHidden": "False"
    },
    {
      "Start": "c5c4de6142ae4ba99aa57fb3c78870f5",
      "End": "fd63b0c7acbe4743b8ff3a0e17d9c5f2",
      "Id": "3eb228c9f3c5482c906211fb65a6fed4",
      "IsHidden": "False"
    },
    {
      "Start": "112ec39dfcff4850a118f9d62e444780",
      "End": "7d68407298754c2682577affe332bc7a",
      "Id": "947e3c2a1609463eb2281d0f7ba0a832",
      "IsHidden": "False"
    },
    {
      "Start": "f38eb5a97d1d496aba833544fcc1f56e",
      "End": "927837ddb0bd4e40b08146e7fc977b8a",
      "Id": "2c23f8dd96384f48bbe373f28ecb6fa9",
      "IsHidden": "False"
    },
    {
      "Start": "e22418f74f5c41d0b1d59f0ef41c0ef8",
      "End": "dd32f1fff92e4342975e8ecb48e77e27",
      "Id": "895e6a3e39524cb784864e9dac26c669",
      "IsHidden": "False"
    },
    {
      "Start": "5e5b47e6000044779abf5e0128d7af01",
      "End": "af41d692f660404c898304c6b078fdb4",
      "Id": "5c5f3e97c16f4c0d85add432f96edcdf",
      "IsHidden": "False"
    },
    {
      "Start": "cea468b33e8f4156a593bbef311e14e9",
      "End": "ced686d881974fc29fd467e44276ea69",
      "Id": "c97ee46969e24fe3ac7b00c554ffce78",
      "IsHidden": "False"
    },
    {
      "Start": "ed798552f21a42daacb05decebc99f6a",
      "End": "5a7f831db89d440d89b05888230cc8ec",
      "Id": "6767fe96ac084a88aed075674124d729",
      "IsHidden": "False"
    },
    {
      "Start": "eb4cb90fd4af417dbccbbddac40c22d1",
      "End": "d83ef63cfba440348ae6c8797ca64ec2",
      "Id": "403267bbabd54e05b59095dbdae0912d",
      "IsHidden": "False"
    },
    {
      "Start": "adec5179281246ec932457bff147a705",
      "End": "23f73959fe0346febc394208ee004b8b",
      "Id": "dddc8df02b534199ba419a0c8f831ba1",
      "IsHidden": "False"
    },
    {
      "Start": "9d35508b19ef472ab7f0dc5c06983d6f",
      "End": "14c5b44841b24f89b8313ae7869ec36e",
      "Id": "e8d001e465db4c2eb3f9646892547ac9",
      "IsHidden": "False"
    },
    {
      "Start": "e54c52ac1f2d472780be19158e4af013",
      "End": "44e6cd1a19014a3187c09446c46445d5",
      "Id": "c20b83a16fbd4ddc9a93a1300a93378f",
      "IsHidden": "False"
    },
    {
      "Start": "25990b158d6844f8a16bdc7abc2715e3",
      "End": "0edf36ba34464295ab4b48b908df7358",
      "Id": "d648ea85f6c348759b3c9deb34b2cf80",
      "IsHidden": "False"
    },
    {
      "Start": "9810f46659a7488981f92818a292cfed",
      "End": "c7c5d72711c74138a00e430386e40c11",
      "Id": "adc51cbd25e242cbb9a91abbbeb11203",
      "IsHidden": "False"
    },
    {
      "Start": "6fd09b56f0344909892d334658ceb6af",
      "End": "f91178521fa9464a9e52f95ef734e04b",
      "Id": "a181bb9361ab425dbbd749b5474a2bec",
      "IsHidden": "False"
    },
    {
      "Start": "21096325a8f14290aaf324d775523ea9",
      "End": "8bac4dcf88fb404095a41ed6a683adbd",
      "Id": "02937b593fe54991bc77b4cbbc48a1bc",
      "IsHidden": "False"
    },
    {
      "Start": "fee57260dc3641208440773ca016b2b3",
      "End": "24049c6c8792424e8159699839546295",
      "Id": "716fb0895c624ee19e231a1d9974bf5e",
      "IsHidden": "False"
    },
    {
      "Start": "dc9e784234c74046b58aab7849cabae1",
      "End": "a7cc9129dbaa465a8aea2b34bb9d4a1e",
      "Id": "19d84741dd204ed98c1cae95efd93638",
      "IsHidden": "False"
    },
    {
      "Start": "cc04909842cc417ca18da5baf65d7a5d",
      "End": "44984ab0c3434fbfbf03edff861c2fe9",
      "Id": "19df9cda88e1431ebfbc9225e6ca2176",
      "IsHidden": "False"
    },
    {
      "Start": "d69249e227c643a19abc1768bfc6648d",
      "End": "ff87bcad0ef8403eb790809bde193db9",
      "Id": "e1e3f42ffe324d028cd4070401f870bb",
      "IsHidden": "False"
    },
    {
      "Start": "cab219c7fa88405b920847416e32e7a6",
      "End": "4ee642ecf7bb48af9a14a1b4262c72f0",
      "Id": "15f8979a8aeb43668bc120cb6c6b58f5",
      "IsHidden": "False"
    },
    {
      "Start": "b82223ddff024fd69ffd9e881e35cfe2",
      "End": "7521bd4b480841e0afcfda1463694015",
      "Id": "c8dc9d029e4b4c8187d3d2b2db77b52a",
      "IsHidden": "False"
    },
    {
      "Start": "990f3b3e825040069552382d4595d689",
      "End": "a90c6e5cc30846868c75f5625ee0bbf1",
      "Id": "614a93bb27634dc289b33f80434588ba",
      "IsHidden": "False"
    },
    {
      "Start": "05c14818f85645a3b2d8cd16c9d14217",
      "End": "037ca443f4ae42a48393e8eba1e9440a",
      "Id": "4358297c8a9149bd8edd32b5ef5b3e6f",
      "IsHidden": "False"
    },
    {
      "Start": "358fd5846e634cf19e3aec361f0278b7",
      "End": "049a4f0e095d4a538a9b7953d05a7e69",
      "Id": "25494efb386f44119e11735776ab6907",
      "IsHidden": "False"
    },
    {
      "Start": "748b1808144748f6b91c9a2883a15345",
      "End": "cc12c09019b54b9c80e8743dea6efabc",
      "Id": "7be6684553834f1a934de41355dad038",
      "IsHidden": "False"
    },
    {
      "Start": "5782def923f24c7db8c3649d3aac0e03",
      "End": "d43a963f0d9b472c95dfcbf9c8877a60",
      "Id": "c7b20114ef1a41bdba32a11834202883",
      "IsHidden": "False"
    },
    {
      "Start": "c94e79b96afe4631a7822cc25397e7cc",
      "End": "a8f57443fc8041a6a07cef48a0cad948",
      "Id": "9bdd755e3de845d78a3d5c9e415e42be",
      "IsHidden": "False"
    },
    {
      "Start": "d89f29813e974484a643a6c4e854dca1",
      "End": "9c598722f0554ac68b7f028677a94f98",
      "Id": "bfc56799dfc84c24bf91956fe87730cd",
      "IsHidden": "False"
    },
    {
      "Start": "9f574eb16ecd483ab7cbea87c0fe39ed",
      "End": "ce5d24de48f04122ae38105e091dff4f",
      "Id": "5ccb06ed5f4f40b4bb923d9d83653167",
      "IsHidden": "False"
    },
    {
      "Start": "eb435d1a40d44b74a2dfbae19497a3e5",
      "End": "ad24f9f79d51438bb05843b82379a0b8",
      "Id": "1da7568d067c4018941f6919f6881661",
      "IsHidden": "False"
    },
    {
      "Start": "f3e3d71f0e904cf1b19fba650ccd9c10",
      "End": "72476ab817b64b9984572c3c694cc25a",
      "Id": "6418a3ab50de47c89876aa3ed84b97fe",
      "IsHidden": "False"
    },
    {
      "Start": "73139cbb10784ff495fd4eddcd338a87",
      "End": "b4f624310f1e4b3585965136234d7500",
      "Id": "24414342202a4257bdec13154f7c9a3f",
      "IsHidden": "False"
    },
    {
      "Start": "73139cbb10784ff495fd4eddcd338a87",
      "End": "86791e7e5f9143c1987513bb0973a3ba",
      "Id": "d949f167ae724ee695d5e0d89dcf632b",
      "IsHidden": "False"
    },
    {
      "Start": "243867add70345b08ea8291e7bbc5317",
      "End": "a59c5194ddc94f9f88e5d6c785a54bcc",
      "Id": "f004d4b96f434da2831f7cd003ec5219",
      "IsHidden": "False"
    },
    {
      "Start": "fc557631a7f64dc9a5edb32651ffd9bf",
      "End": "8727e7d54b5d4b79b25617c5f1decdea",
      "Id": "4c9bd43613ff473eb2c50f7ec35e333d",
      "IsHidden": "False"
    },
    {
      "Start": "40b355f0d9a14a65966ae42d9e20ddd0",
      "End": "c8e8778755ba49e08b66f6b923b94fd8",
      "Id": "6604e261fa96494c8fa2e9a00b05a533",
      "IsHidden": "False"
    },
    {
      "Start": "caba2b5cc81e415cbe8a5f23667fe09a",
      "End": "f7ff2e7bc0bc4651a38910e2776de81c",
      "Id": "95ea208f79984c308c216e248acb5c18",
      "IsHidden": "False"
    },
    {
      "Start": "04003ba5ae7c4259b5b8e38ec6cba248",
      "End": "2989ea6b3364461288772e5cf71b2bb7",
      "Id": "fabb21a45ff24e9d801ac0135b413782",
      "IsHidden": "False"
    },
    {
      "Start": "3eb52c33560e4541a29a721b83243fdb",
      "End": "67ba40faa16c42c795b4dfd42b3dd9ba",
      "Id": "ddc67ff225e44136940bc1c29f3dc237",
      "IsHidden": "False"
    },
    {
      "Start": "3eb52c33560e4541a29a721b83243fdb",
      "End": "22098bb9277d47c1b59eb3c82eb6d349",
      "Id": "cfaab41fd9fc4e918015bdfee562b58e",
      "IsHidden": "False"
    },
    {
      "Start": "3eb52c33560e4541a29a721b83243fdb",
      "End": "81a2232712f44f608b8dfe6a597a65b8",
      "Id": "726e6afdae30432abdcb2fed61b6827b",
      "IsHidden": "False"
    },
    {
      "Start": "5c6b32cee9c9449dbe1ee782cd2e6b9e",
      "End": "8ea2d731581144ec964498b4243d755a",
      "Id": "4e9e44c49448459bb7d5120e65661d36",
      "IsHidden": "False"
    },
    {
      "Start": "c8186371973249b6ba656eb81cc54e3d",
      "End": "b20e88764ebe4187af81fabf2a11453b",
      "Id": "d49c0aa2b29f45a0a3997eab07112cdf",
      "IsHidden": "False"
    },
    {
      "Start": "24a68780c6f24508ab194dce16f3a3c4",
      "End": "a66a6f1c30d24f54a941bbe305f81abe",
      "Id": "db25631b788d4a7086ba06acd864328a",
      "IsHidden": "False"
    },
    {
      "Start": "1138247c555048c8b4f3b5aa523c424b",
      "End": "eeaf65fafacb47f1b780cd98ba40c2a2",
      "Id": "0d262017d3b5429899c489a449761982",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "0b2bcf6861ac442cb9e839a165d8bb58",
      "Id": "6a4ba9996d7044e589eecec0e210154d",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "5fed68219aa841f0bf20843cca2b32ce",
      "Id": "ccdb76edc93342b79288a162ea5edafe",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "f28108faf0f04b13af3f9dd781a7d3d0",
      "Id": "77cfd6dfc5e1476b9a52446b63012606",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "e1da1c5325674e3c85685631c463af4f",
      "Id": "54a9ea37d3324f6088f0ec2385da4699",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "2988595ad2d04442b435120ca2a77e89",
      "Id": "d11528db337042548f8d73b7610394d5",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "c65c80d5484c4023bcf9e75e3f2b9b91",
      "Id": "de9d8b3595994da29d7ef88e87e0ace0",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "c13cb2226b2745c6b2e99af90cac63dd",
      "Id": "583e253673d84f8a975186109fa3cdc8",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "dc04b722e86547d7925058eb17428a05",
      "Id": "d6900a2b10244e28b5fc6a5841d824dd",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "6a2a33e0965846a38aba3bf870fcc791",
      "Id": "b6a1aec02972480ca3572d0952ad8c9a",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "c8bf6dca787e46db9a601f9270592bb5",
      "Id": "a3050c930c48454d895b16b1160b71f0",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "8a22dcd891d84418a8f1d074746b838c",
      "Id": "a74aff402b33428ca467f7a2296e4db1",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "75027f6e420346de8b2304b1b6faab4e",
      "Id": "d6461b914f8a4bbcac49206303b30989",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "403d4a062f1c4dad9880d290a933cf9c",
      "Id": "b945461eb8b34ce98220a29c2f1929df",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "c4a12b5c00bc45a0bdfb5b292bd2345f",
      "Id": "1650d7d1bb264950a2180945d8ab1587",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "e6467bafafc14a0da53b61b19c4beddb",
      "Id": "ba281ce5de4e48be9dcbed39602c5f72",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "6d5bcfb43c6642b49d41b49bde0bacea",
      "Id": "8fbae92d3bdf454486274fe43c53d572",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "6609c00d7202460f909d543259e3b022",
      "Id": "18a9c0ff82f44102915667bb56f63c37",
      "IsHidden": "False"
    },
    {
      "Start": "3ba8f4ac001f4e6397dcb5f1bcdd4db1",
      "End": "81b969588f2946ab8e7dd0114dafd060",
      "Id": "86dbc35eaab340c380ee3444158fe8d5",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "27dc5405d3a34bebbe3c25b17771db98",
      "Id": "f83ade00dde34d19bb0ace1f0dcc94fb",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "ec56ab31558640a29612c5c760c618ae",
      "Id": "ed769dfcc1114ad7a42a962d80530443",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "f7799e8c9b6f47ffaf597fc129cb0b2d",
      "Id": "5db151b1f6714c8c8508f0f071e71298",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "5122f973d9204fefa8cac7419e09ae45",
      "Id": "a39edb456cbf479e9b54ea13d74c7b46",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "b98a0525612046a09e779a9570494cbb",
      "Id": "c9d9f2cc25c14f63828d3cf56761d62b",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "45cd98f64556448183be215b7a9247c3",
      "Id": "48c67c64fed349b895811262bc5c56d3",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "67453ae880234a409a6e1180e858e629",
      "Id": "5a4b2d55934c43249ea4caa1ede6d4eb",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "b3bd09fe34654172affabd8ff8f941ac",
      "Id": "74a6f53c42ae4970acd4cf1679aff494",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "eda097a31a3645eba45c8d07a5d6a3a1",
      "Id": "a2846ed174df4166afbb63e851cde4cc",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "6b8105e1ca4d46f99593980a204d9ed9",
      "Id": "e0b9a5ab4854413a951cebada2c92f7f",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "37f88a24418e4d8d8d337c7a7002a570",
      "Id": "802862ed14d2442aa326194a38f272b2",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "eb94ad60b1b74687ac2e520ffeded610",
      "Id": "407f2c056fca411a956ca089cabbccb3",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "c4923d17e5ec4733853e286bf030d4a8",
      "Id": "794a6e60bfb74569a6493871e3d4332f",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "824630f50d7c449590baae7ed9057b56",
      "Id": "484507efcea847b798bc8ea65793f1ee",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "4778729942914a3e9d85e51d52dbbc3a",
      "Id": "47fcd589234a4d1aa632ed89e4432f2f",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "bc659f77b8224e3ea7feb7e1811482b3",
      "Id": "cd37911976f04cacb90efe1136e965cd",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "64b32e1b955049c4afd86714455e3faf",
      "Id": "f2674e7861da4b52badb6db081569c57",
      "IsHidden": "False"
    },
    {
      "Start": "8e4151d42b0a474a94191c9e0c454fea",
      "End": "57196076966545c8be383d27a192e8a5",
      "Id": "9a724f191cc6415bba4e89a5e87a4233",
      "IsHidden": "False"
    },
    {
      "Start": "c77ac53b6b114aa087417a4bacda8835",
      "End": "f2a54673ea5c4d2585599092aebe88c8",
      "Id": "8d83d8f4a96b4e1c8412949bd2293c4b",
      "IsHidden": "False"
    },
    {
      "Start": "6813aa6aba18452397fb7589abf11c45",
      "End": "1d12e4e844834350884879101677d080",
      "Id": "c3a0efe6017744bfbca3aeb8ce5fab03",
      "IsHidden": "False"
    },
    {
      "Start": "7ec15d4a82bd4127bada8b03f5ebb5a9",
      "End": "a62c8d8ac5be4b00a607f75c7c230a7d",
      "Id": "052fefac48e14727b6522da1a570ac9f",
      "IsHidden": "False"
    },
    {
      "Start": "779f8536cf6b43a482a3bec875d740d2",
      "End": "e22a65ec0e6342f5856a1e7ecfa8f25b",
      "Id": "07d61427c8b2456ea951a66221bc9065",
      "IsHidden": "False"
    },
    {
      "Start": "f30ad88679134521a156166486f7c508",
      "End": "edfff6be54be4e5db940ee5071d04002",
      "Id": "e9b7c605a8e14399b6aa66667dc4bc83",
      "IsHidden": "False"
    },
    {
      "Start": "ffadfa7ba56545328e844a39382a52d9",
      "End": "d90efb7e42ba44d8b8b9bf406a38210c",
      "Id": "f359444ce637483d944d25dc8ab061a1",
      "IsHidden": "False"
    },
    {
      "Start": "f19cd26f3e3b47fb8bc76db4bad4aaa3",
      "End": "fd7550708b714241bfae654febca80d1",
      "Id": "8da340fe2c2942e896b8418f4e671d9e",
      "IsHidden": "False"
    },
    {
      "Start": "803cd4244f4a4c1a887e4197eb2103c5",
      "End": "c5b5cd8bf66b441e9f841c2c73a27da0",
      "Id": "6a4f0d6da51a453490bac9ab470de748",
      "IsHidden": "False"
    },
    {
      "Start": "85f5695b10b24ebfaab3ba9a1ba1e5ea",
      "End": "37015a315c87414e8305cb68554f259e",
      "Id": "8c3506c262b840fa8ec94c460e27ce57",
      "IsHidden": "False"
    },
    {
      "Start": "740c403e2fdc479190e76332c761655a",
      "End": "8a0397aaab294d21b034b8e5c007353d",
      "Id": "b4b5db103aa94e559926f3ceca478835",
      "IsHidden": "False"
    },
    {
      "Start": "0ccc1b972c434ca7a1c5bf6867e7cc37",
      "End": "f7632763e2164cf5913189e8080af46b",
      "Id": "765bf10a299c48ab9c831f4a3e57a662",
      "IsHidden": "False"
    },
    {
      "Start": "33ec97935baf44f8a5579af06f495496",
      "End": "e5d8c5f7cb3c41a6b87c751c9524bbd1",
      "Id": "651fd1dcd5344c5b9cd22719c2afcca1",
      "IsHidden": "False"
    },
    {
      "Start": "1fe86eaafb0043ca8447184eda60cef2",
      "End": "39616ef3356b478dbed22f69ad9177bd",
      "Id": "0bbc9a6c56d64712b203176e046cc817",
      "IsHidden": "False"
    },
    {
      "Start": "69be4b3aacd746beb2a3371bbcf8ba7a",
      "End": "b7f15c6143194bd681a14cdd17df81c6",
      "Id": "076a2c0b3dd848d1b597e2656a12711d",
      "IsHidden": "False"
    },
    {
      "Start": "95b0837cba5347efb89deef768afcce3",
      "End": "b210863553b04dc9976af9cb6486e2f1",
      "Id": "a4de9a3e23024af4af7e5fb9b36b0fd3",
      "IsHidden": "False"
    },
    {
      "Start": "4acaaa47cd804f3d87af2a94f044a835",
      "End": "f4bf70e82e1643328f0e00dc85976b03",
      "Id": "5b350702753041bd8c82b45905a1e5f8",
      "IsHidden": "False"
    },
    {
      "Start": "22b195e00ec44accba4cff7e8c7e5625",
      "End": "b563ae30c20c4d0091fe9b0f28bd39f9",
      "Id": "3c9f042372cd480eb9e91a9333fdb27f",
      "IsHidden": "False"
    },
    {
      "Start": "7494ccf9d9b84658afd521e482f9ede7",
      "End": "f6c8f6290bbc4f2296e90ce665b1b1e0",
      "Id": "41c081124df14f8a94bea8b4c6f1cfa6",
      "IsHidden": "False"
    },
    {
      "Start": "fad1098ea9d44b709ac942deb35d09c2",
      "End": "f806e9ea99a244668a9ecdeba5064ff5",
      "Id": "cfed0349c55f4bdca2ec62bf72f67c51",
      "IsHidden": "False"
    },
    {
      "Start": "aa32a167238140498da177530e71b84b",
      "End": "3bf6480cfd014ee7a132bf7093ed94c9",
      "Id": "887fe103802b4106a6bc105978232ed1",
      "IsHidden": "False"
    },
    {
      "Start": "0d50101d8ce74d61985af088b764361c",
      "End": "c4b42cbff0e54651847de81d7cfc9327",
      "Id": "d7a700d027514bdbb3303100cfb80446",
      "IsHidden": "False"
    },
    {
      "Start": "f5f3ae5fbf4b4f0c90fae119d5de6573",
      "End": "aaa6ce738d4345218169f661ef39bc5e",
      "Id": "fa9bb8a716894b3f9cddc8bcc9938f07",
      "IsHidden": "False"
    },
    {
      "Start": "c9939793c3f6416db942d3c202414932",
      "End": "9129cda56fcd4815b108338b4ca6cc14",
      "Id": "df3b254ccb214c60a307fdf559fdd221",
      "IsHidden": "False"
    },
    {
      "Start": "334f3a5edeb546cd96810ac72167f5e4",
      "End": "9a4fe44d079b472bade2a2925461e608",
      "Id": "0b018bb550cf492bbe8b01e9ea862e57",
      "IsHidden": "False"
    },
    {
      "Start": "fb3b13a1f72b47289c2be72477346795",
      "End": "e59f87b655cf4f0fadc738f68c33319a",
      "Id": "ca0ac9b55f134ad08d56369d5e666ae6",
      "IsHidden": "False"
    },
    {
      "Start": "a640e5211ab0458ab1772cb8cd9a2fb3",
      "End": "9d9e7e86fc6d4a7cb36b19accdc55c81",
      "Id": "38869da1e9014fb2a77944c6ee9d5870",
      "IsHidden": "False"
    },
    {
      "Start": "0c052e544a344674b43e301cb8b3d6d5",
      "End": "f99aaff980d642aa92bfe5492a05f938",
      "Id": "373df4cab5da42acaf1fc344eafd16a6",
      "IsHidden": "False"
    },
    {
      "Start": "79123844d06c49549e217e70284d05a2",
      "End": "2ffce6d13ea64917a5c99d981a6ea528",
      "Id": "490a2114952c46949fca7786539ae665",
      "IsHidden": "False"
    },
    {
      "Start": "8168c985000644f4a5c3a2e22ff53d19",
      "End": "0a5099f040ec4732b2946791ab7da40d",
      "Id": "3b97e9f717be496dbb4516faba7f38c1",
      "IsHidden": "False"
    },
    {
      "Start": "26eb3b2a1a6a431684824e4fc0a10859",
      "End": "09f645eb7f25419ba88d2a0ac77eeca0",
      "Id": "653febe9355b47a49bcec8ce142c0fe8",
      "IsHidden": "False"
    },
    {
      "Start": "18c08daa51304a8ca7b37aa264ab7e7c",
      "End": "6ba827a1047b4da9af05a4b234ba9cd0",
      "Id": "f0c1bcb7b6094808ae93a2d06e9a7b24",
      "IsHidden": "False"
    },
    {
      "Start": "1fc10d6675ba43b4a35c1655f379d784",
      "End": "a735c53f0cc24da5928e05b3c9189e14",
      "Id": "ea70a71ef0a3418588b1ada7c8973785",
      "IsHidden": "False"
    },
    {
      "Start": "a3e24e1e7f2a49b4a171cb21c41733b8",
      "End": "d61c87d2feb14b5eb4b480d1a106f031",
      "Id": "72541d071f5844028849a1004c6594cb",
      "IsHidden": "False"
    },
    {
      "Start": "ff818085879e435d820356d43e1d10c4",
      "End": "c671c156cc3847209d676f15b3a5f564",
      "Id": "5293026ba72346bb86bbb4369f170b75",
      "IsHidden": "False"
    },
    {
      "Start": "710b028968354a74a84b07aa2b00edcc",
      "End": "c1b82a8b0f4a40a5b5d50be93130c7da",
      "Id": "9eed5fa464ab40048c89b2083c786d17",
      "IsHidden": "False"
    },
    {
      "Start": "ed947ba659e94be1a656e71193a9bfba",
      "End": "c567df6d3e4049ebb69852afb136d2bc",
      "Id": "0800a45402c54afc8b37598708a18811",
      "IsHidden": "False"
    },
    {
      "Start": "6943b17e71d24b738124a37c1c04c74f",
      "End": "e7c76c62601e4dbf9910e6441f2d167f",
      "Id": "53a380a556b84bff8bd006c0e0638ed9",
      "IsHidden": "False"
    },
    {
      "Start": "69047cad11bb4065b5c96eedde007982",
      "End": "4da24a7fdafe424faee002db73b891d0",
      "Id": "f85cfbaf909345e98f9b9e0ee9ff7829",
      "IsHidden": "False"
    },
    {
      "Start": "e8b7e291bb24401b8c1beee88c6d9227",
      "End": "e250350a9ce640a3a7ecce55da095afa",
      "Id": "dddf67899ebe4b6cab84cb59c43c7909",
      "IsHidden": "False"
    },
    {
      "Start": "77776ac36d0b4ad3b44bae91e2f97c17",
      "End": "6dbeb0e4236d4beab544dad9707174a2",
      "Id": "92d1a91cbe9b44158feb3bf9ca3f9284",
      "IsHidden": "False"
    },
    {
      "Start": "a57c3bc4bdc8401792bcdc72bd763fc8",
      "End": "0317d5ca4ea74dbf9c43ae2155076494",
      "Id": "3fe9721d344d482e95e1287958e2555d",
      "IsHidden": "False"
    },
    {
      "Start": "a3d33ef4441b4c27be2ebccd4472502d",
      "End": "54d93560130d4aa18d33062a2616fea7",
      "Id": "8be598caaaef4d5b92c97ed37da6dbe1",
      "IsHidden": "False"
    },
    {
      "Start": "89ef9f4095f2471b8ed1e3559aa10767",
      "End": "1277c6268562419bb1d377e6b88f22a7",
      "Id": "13dc48469edc4dbdb716f1b98dd2bcdf",
      "IsHidden": "False"
    },
    {
      "Start": "609ab2b1f4ec4558b56754e97666b45b",
      "End": "70591653c6f3449aab2a90a7286d3a91",
      "Id": "74b100e7ffa94779993aa3289ed026e1",
      "IsHidden": "False"
    },
    {
      "Start": "1f6c9464da154363865326193a6978fc",
      "End": "a4ce6f4e4fa04570a7fc9b1a0cc0fa43",
      "Id": "a3511626b7634b31838613c8ca873935",
      "IsHidden": "False"
    },
    {
      "Start": "6f9e2c7e5cdb451bab6630cfa17acd1a",
      "End": "5c03f5627f93448f9cb8e53e9178d4fa",
      "Id": "7383ab764fbb48a08aaaa457bd9c6174",
      "IsHidden": "False"
    },
    {
      "Start": "9b68db5934344960af194dc5a0d0ba0c",
      "End": "a0fe08702edc47d69f909a61a975d99c",
      "Id": "f9b1b4f8992b4a56a381d058638c4b22",
      "IsHidden": "False"
    },
    {
      "Start": "66ef7981b5f14a06b87540913a0edd0d",
      "End": "50e0a472b7bd44ecadb832aec804bac0",
      "Id": "43d648c8c4f04492af34460648f39802",
      "IsHidden": "False"
    },
    {
      "Start": "2211d0b2ce8a4f53aa572d80c0fd2a9b",
      "End": "2936ed22157c4e22b28ed2ce905e60ec",
      "Id": "b5be1e20f6e245afa8940e7314f26533",
      "IsHidden": "False"
    },
    {
      "Start": "0ac0f1b0c4794b97aa86daba377cba69",
      "End": "9bd8c44153c54465be4d28421160d793",
      "Id": "afcd18b394ec4d3d996b4805c59e55d3",
      "IsHidden": "False"
    },
    {
      "Start": "1d5305995f6d449dbfadc1df06bd52c0",
      "End": "1dfd9cdf34f545189a318493cf18b81d",
      "Id": "0b8a57f4c0dc4c0e97fbac3d12c828d5",
      "IsHidden": "False"
    },
    {
      "Start": "046a56c16a5441a28bc0f252bce58a73",
      "End": "48fa8952a64d43f8ad1d680ea255b750",
      "Id": "db5bfb854e7e4187b9a2047b512a0ed2",
      "IsHidden": "False"
    },
    {
      "Start": "a5f59f1972934dffa44a58e0df48a6cd",
      "End": "785abd9220c54d7da6d39b8331ca963b",
      "Id": "3892967a29c14e06bddc70735bec7d6f",
      "IsHidden": "False"
    },
    {
      "Start": "18e76fbf2ff7417d9a6851793c6a0e44",
      "End": "949e75a4a4b74d14b4b009dd4dc6d683",
      "Id": "b8ad600f445046beab4b665971a48321",
      "IsHidden": "False"
    },
    {
      "Start": "10062e57540449679227ce31a88db658",
      "End": "d795842247404e26b4d02ff7a68ed480",
      "Id": "3e349c35787a4b1c8d7f0f3a699d923e",
      "IsHidden": "False"
    },
    {
      "Start": "cd47a51dd9c9480c998e5de7a4610ec0",
      "End": "c8f30d230d8946cab6b3084b26d9720d",
      "Id": "e4b65f926a5242ecb4255bc5ffd04e72",
      "IsHidden": "False"
    },
    {
      "Start": "e48273f317854b8a87034810fe5b5ca2",
      "End": "a461c58b9fb146ccb1224b7d1ae2df7c",
      "Id": "9c08083783e54922befb6c427b1e823c",
      "IsHidden": "False"
    },
    {
      "Start": "3106162eda6b471a9ff3c0a32d334d0a",
      "End": "24bd967f66624e9eb74312c5f21a2fc9",
      "Id": "5ca50888b618499e8d507ffebb3fd181",
      "IsHidden": "False"
    },
    {
      "Start": "84efa1db165943aa9764ecb422a30304",
      "End": "725b24bf72cb4a0dae4a9ea9a0ef00e3",
      "Id": "1717a31089374f119101851d4867d264",
      "IsHidden": "False"
    },
    {
      "Start": "ca635dad98824fd8b0e2f1300d8c58dd",
      "End": "d3cd93de8cb142898f315fdd90ada7c0",
      "Id": "ba4a1cc785c24952ae727eac40dd656b",
      "IsHidden": "False"
    },
    {
      "Start": "317c29b1175c4a38a783791ef2dacf9e",
      "End": "49e0d1e4f29f4a8e92e36b11f81697ce",
      "Id": "b4efe01f4cd0440ab78d393e04b9f239",
      "IsHidden": "False"
    },
    {
      "Start": "8a9c5d9ee49347d3be6e881abc989f4a",
      "End": "1f2ac2db74f74254b2dbc5ced063a553",
      "Id": "ba016ba86719444aa4ecc05cdbb689ae",
      "IsHidden": "False"
    },
    {
      "Start": "ac555ca13a1e4c4682fafa593e6ce284",
      "End": "ab8bf52e812446c0aa349b77b4fe6680",
      "Id": "729390a01ced44a7a7f8f3469b7ee8ea",
      "IsHidden": "False"
    },
    {
      "Start": "d1ab4fa769e24473875a9a9f9046cb01",
      "End": "4a0d4f3b24da4cca93275b85594d8f9c",
      "Id": "0c485c1952214584be048463b854f696",
      "IsHidden": "False"
    },
    {
      "Start": "396be3fbc032450eba1f3c68929cb757",
      "End": "ab4880e399c64fc4b45ef63105959f6b",
      "Id": "bcd75996cc124cdc8ed22ed09f01feca",
      "IsHidden": "False"
    },
    {
      "Start": "3ea4e5e7745f4100a06e57992b6e02ad",
      "End": "324cd835c5554c809f5bc2baab718179",
      "Id": "1ce0c63ae5f44468a7e32b94325c58c7",
      "IsHidden": "False"
    },
    {
      "Start": "e6afdbaaac1b4d908d7731445bf5ab52",
      "End": "7b83d5a79e3e40e8a4d86ca154f0143c",
      "Id": "2944a01ec3974383a1750beea51ec950",
      "IsHidden": "False"
    },
    {
      "Start": "3c4e10380365420caceafdc1ec113200",
      "End": "84e39f3dfe7b47dd866da7db86357430",
      "Id": "b9bbc2857b2f4539b90ace528da04fae",
      "IsHidden": "False"
    },
    {
      "Start": "472ae57a3d904c5180b90cbf07cdd2c2",
      "End": "0931c17fcdde4bd6b99d064853604e69",
      "Id": "e2e311d5387e43a3b1cbda9c2caa21db",
      "IsHidden": "False"
    },
    {
      "Start": "3278362a19fa459ea98b199219e18bc2",
      "End": "38fef7c06bc2474eb2c3dd33ee2a8ed4",
      "Id": "d689b147d51845b2871f505be3cc6db8",
      "IsHidden": "False"
    },
    {
      "Start": "c80e22765dc44c5b93c49a149af419b2",
      "End": "bcb494efba014b09bf30c9b52f4d9741",
      "Id": "c89f7ba2b358481a9ee3781fb6eda095",
      "IsHidden": "False"
    },
    {
      "Start": "5e69839404f3414190efda14eb5ae16e",
      "End": "7faa08d369f1479385d1c998475cd098",
      "Id": "7c651919b81348d78cf84375b3808eff",
      "IsHidden": "False"
    },
    {
      "Start": "3066ae90e9bd4fa8ad7921dac92dfa9b",
      "End": "78620b61c1df4bcc86ba365078e0069b",
      "Id": "3fad696808fa47a4abf3a2f896eb2b9e",
      "IsHidden": "False"
    },
    {
      "Start": "a40c2be98d72468dbfec3ef90ff53772",
      "End": "6abb553fa9fe49d6b5f83dd92d93352e",
      "Id": "576e8efa4ac24b70ad30515eafc4f659",
      "IsHidden": "False"
    },
    {
      "Start": "46ff4ed56f4d4d1eb4a32af2f46a9585",
      "End": "fc1d499e20134430914c3001b14f2a65",
      "Id": "ae6d98ce90d54af39fa23acb6985f7ad",
      "IsHidden": "False"
    },
    {
      "Start": "66558ccc0d7741f68bde9641973b50d7",
      "End": "e20d63e8c0fa4735ad255b9fd4573cb1",
      "Id": "10caee1a5aea46eb93ab374104f8d8b1",
      "IsHidden": "False"
    },
    {
      "Start": "e127d9c0e0cf41c6863db8420c4a04d2",
      "End": "7abad3dc8db845998028381d12e24363",
      "Id": "a651c1036a8c48439420dd7f69c8f0e0",
      "IsHidden": "False"
    },
    {
      "Start": "e127d9c0e0cf41c6863db8420c4a04d2",
      "End": "7be8c187e8cf478dac0002882a114af5",
      "Id": "3c689c005d7343989d5f48a80f6bab08",
      "IsHidden": "False"
    },
    {
      "Start": "3f44b3bf61504f5f9526793a564b757d",
      "End": "b845f70904a343a88fc673f7be3b41ae",
      "Id": "5614f600fa244fc188fd478237b0f713",
      "IsHidden": "False"
    },
    {
      "Start": "f645a3a9a47d4bc1aa89ec0a77e45016",
      "End": "ecff46cdac824849a51b694f594df1e1",
      "Id": "52afcbe7a5284d4ca8c6fc1582619401",
      "IsHidden": "False"
    },
    {
      "Start": "9a742056a5a849c7bdf27ce3e73269e1",
      "End": "39d64c1ade2140bc8b3a48c77f82cf6e",
      "Id": "633c1a169ec24ee0ad71c248e3329258",
      "IsHidden": "False"
    },
    {
      "Start": "8e2b0254d5244d8fb161a8112521109a",
      "End": "46d544b35e4c4b4c945e8473d4fa1412",
      "Id": "aea2fdfbfae9449dbd0b9db5c6e63a6e",
      "IsHidden": "False"
    },
    {
      "Start": "b26dccc13bdc4e24b4f847e7f07ae3dd",
      "End": "9581d7527ae84b95ae726ed14f16b03b",
      "Id": "11b3071d6c8648909713130d91d0809a",
      "IsHidden": "False"
    },
    {
      "Start": "7c96453f5be04737a1aca27fdd677838",
      "End": "85689fe272fe4808b18600a18ec08457",
      "Id": "86a2cf1130be4930abeb62896e5767f2",
      "IsHidden": "False"
    },
    {
      "Start": "7c96453f5be04737a1aca27fdd677838",
      "End": "579e2cf68ca3487886bcf050fe2d2147",
      "Id": "aedef4a985b2443488a56289eb3674f4",
      "IsHidden": "False"
    },
    {
      "Start": "7c96453f5be04737a1aca27fdd677838",
      "End": "87fb8645a5b3484fb00f6d1211e02d72",
      "Id": "4676454ba99046679acd188bf9f7cead",
      "IsHidden": "False"
    },
    {
      "Start": "7aa7c10018c744b587e39a537b10bfad",
      "End": "26b5439ec2234745aa735e20906846d2",
      "Id": "ccd2d000dc6f40499c1c5982bd8b2dbd",
      "IsHidden": "False"
    },
    {
      "Start": "6547eccf2e364d44a3c833e936f56766",
      "End": "751417d8df5242a3b890a0fa88d00e90",
      "Id": "c2b0a0e6bb9e4b43b34f2160d1fff922",
      "IsHidden": "False"
    },
    {
      "Start": "19750a5fb9e9486db4827965a72564d3",
      "End": "b689ccacf4144c0fb88b77e551d0a6a9",
      "Id": "34456376527644dcac5131909ec06149",
      "IsHidden": "False"
    },
    {
      "Start": "137b67eff2fb438b8a4e2aaac4ceb58d",
      "End": "24ee2f65abca4cc3ba6b397d1bdbc1d9",
      "Id": "4226e9cee9f844af95a55669c1a11667",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "8c13fc8703114f9682245bb39cc9e681",
      "Id": "391e19caba954e7d8ad371a0debbe77e",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "730f3c5ce33e437b91ecd64a38793584",
      "Id": "9501eba74272453c99d39cca94332354",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "0ab66292c8a347d4866590d72282738f",
      "Id": "7fdd9aa77467491c8f1786da5be2ac32",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "02adea033d8f4110a689bd3bfcc93f35",
      "Id": "e73e109ffa394c30bd6f1b9a24713d50",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "ffa3c0e4fd06463db7296c92e1df78ef",
      "Id": "ea7ad859a0e94d2798e4a5ef459be6ed",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "9cd49712f6844efaa214429dc3649bbc",
      "Id": "6f8699e4335e4bb5935ed6f195af8681",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "9234e7bee2274dfab88733e980675595",
      "Id": "ad3260676ea74ae48dfe77b60ca37e71",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "49679fa676764f2286b7a1c8a9d1c2bf",
      "Id": "0fe722a52de547109c955c6032b4866e",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "6f664f1349f741a2b1de8b50b318e951",
      "Id": "5de118f7fd7d4d79a8822f0796635a99",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "d7d94b6b064a4dd8acc8675a30895a00",
      "Id": "d48df8bd9bd14e9f9e71239f83f3cc0d",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "77e08a6711a94f658232a3b63c465a4e",
      "Id": "32d7215e142f42fe88089fc6fe348583",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "b90a8eeca48e45f6b77f50c39bbdaf1c",
      "Id": "fe53b5e880d04beb90da86581a0bddaa",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "da84b00e6c3b4f1683c566dc8734fce9",
      "Id": "5b6ef18bf85c4edfbfc8e322fb340042",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "7f945c71029044b6aa630b3cf9a92bac",
      "Id": "20182a93c93d401d9108b841e3220db6",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "a855e328cda240b7b9015c8c0d097a6e",
      "Id": "d0c7fe863ac24a59bba10cccef5c20b0",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "cc36bcabc9494b2189452bdd4c35f284",
      "Id": "5cd59c5317fe482ba85d9582848df20c",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "ee990e1fae0f4d0db64a03ba4cdbc725",
      "Id": "7851da04f18c48519ce13216fc9e9f05",
      "IsHidden": "False"
    },
    {
      "Start": "2d971b151cc14960936ad102d7019c9f",
      "End": "430e072bbd994100903dc8d579fda9b1",
      "Id": "2784a7da099a44bbbb2e1f55cb6261d9",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "3e756df0c0ba4872babb776b12cceb7c",
      "Id": "9ed76de43787453dae32652f5e9403a0",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "ef81561cebd14ec2a640fb161cee8656",
      "Id": "f1194f7e16da40fb98f63458bcbf7540",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "b74a6c4e5bdc46a185cf69882e2b2a5a",
      "Id": "2f3908b5c2074058991654a018244d2a",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "f1054673a64c48bbb0c78075761b170f",
      "Id": "420ce0b1785841ba9c3e6e20868ddc4d",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "7d1163a333ce492fb9ec4ef7bee0c803",
      "Id": "0c9cddea225c4b71befa3b6f61334877",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "799863bd3ad547b1bc2aa990e59d7d1a",
      "Id": "04edfe535a474311a6d79cf1403e934e",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "f813a6c7ce944837b84d01797744b9c8",
      "Id": "33350d64de4c4aac8746bd90b11fe8b0",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "423febbf59554c38a09c6e537bf14eee",
      "Id": "d546f293b81246f7b22d51e2ecd2fc4a",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "21f8811f86b54c19ab94da53cc39ecc5",
      "Id": "43a8bf234eac42e2b5840ab15d7be21c",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "2c6d671916bd4bee94146d54157789cd",
      "Id": "7de2694565d34ede948937dd58ce0c08",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "d63a7213e62f4a1f9c411b723fabe6d7",
      "Id": "0ca8ce75eead4af6b2a807c23e58b660",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "ad0977c1093c40f7b5b6deaab2633aba",
      "Id": "a3f976865e7b449aa0403a21b101957a",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "90066c1410bb4c9f8cd03b6cd3b5dae2",
      "Id": "649ea15a938041bb92c0ce84f731f992",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "b9474f61ae8043cdbd8f77577c84acad",
      "Id": "dc059e2ffde14d408d010b6b5bc58b0c",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "23bfef65177c4c2c842e3b45c7f6ce27",
      "Id": "b4b3371768d54a6cabf0d592fc8ee802",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "c444ce7609e9408eb1024e14c7f4b410",
      "Id": "dee7f8e5543b4ada95710bf3ee6b864c",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "3f2e68d8e0ee4abe958d5c40063ae7d8",
      "Id": "57e505acf5db4b999c36b4ff65693f4b",
      "IsHidden": "False"
    },
    {
      "Start": "b08d435ed1c9412c9a5e0218023950d3",
      "End": "ca05ff973c2c4c2b9e85e337206e42c5",
      "Id": "2d376458cf0b467996f847f6f3cb14bd",
      "IsHidden": "False"
    },
    {
      "Start": "40a97689080748e8a6289b597b7737be",
      "End": "4c33005bf83342b7b9385a8802f40be8",
      "Id": "1743708a6b5e433c8b9c821cc773f06b",
      "IsHidden": "False"
    },
    {
      "Start": "e78a1d58fb1742b98b5806007a36305a",
      "End": "6fde91cf155149fc81ce319840e637b1",
      "Id": "f5d344b89e1a4f679c0f606622e7d96f",
      "IsHidden": "False"
    },
    {
      "Start": "949267877f534a12909835651a72573d",
      "End": "c9c6d969121e487382b9ffcd09c20c73",
      "Id": "4518b2f7621e422089c916e76325d3a6",
      "IsHidden": "False"
    },
    {
      "Start": "0e019705cdb34882b5b3e29b1ca6d0c4",
      "End": "a555934c36c64457934684715f0294e0",
      "Id": "237fe44ab73d4b7297cd37ba5c039499",
      "IsHidden": "False"
    },
    {
      "Start": "37305a39acea49d98b39b15b8f5becc3",
      "End": "cfef75f7307f42718d031ac2a4c33970",
      "Id": "34a7c693e67343a482725a5c2503cf27",
      "IsHidden": "False"
    },
    {
      "Start": "07e4ff73989b4f10a55739f356de850f",
      "End": "00a639539f78460681421ad44886d98a",
      "Id": "a7d4efc30eeb4c7a85977688c2b50a59",
      "IsHidden": "False"
    },
    {
      "Start": "46d4965e41cd487a9189adbd90b92aff",
      "End": "2b440d5a2cfd4dae9cf15d7e3fd1f48f",
      "Id": "f6303b9e06524ce2bcfe984180aa6d56",
      "IsHidden": "False"
    },
    {
      "Start": "212222013fe4485995552ffac259d985",
      "End": "6f59b8ebae204ceebc846170ca4ed085",
      "Id": "a6953756f4fd4b6f9a23865866698672",
      "IsHidden": "False"
    },
    {
      "Start": "a0911c0ab17d472cabd6b2af4f2b390a",
      "End": "c461e4a263dc48ecab2c97daa2470908",
      "Id": "7f7825226ab4412fad5557152110fdbc",
      "IsHidden": "False"
    },
    {
      "Start": "3cef11a76e6642c29d31889acd8ab6fc",
      "End": "ef7f7599ee534d4e9dd8baf2fe21e213",
      "Id": "7229c4d8c67742bea66b2b003ce5af3e",
      "IsHidden": "False"
    },
    {
      "Start": "50ebb0a6d3dd403d820352dc1422600a",
      "End": "927e44fed6ed4c1ab30f7366d94bf9a8",
      "Id": "fe7f5b7e5d1142008f0c163bef73e7bd",
      "IsHidden": "False"
    },
    {
      "Start": "eeb364e99de04f7ba81a1902295ee087",
      "End": "1ba688d098c2466aa3b2d47f06957f11",
      "Id": "f2158c59a3254eba8dffa1a8b78870a1",
      "IsHidden": "False"
    },
    {
      "Start": "5ce4dded9b05406c902d5231eba7d14d",
      "End": "f9194526f98d42639cf899764eee6253",
      "Id": "84b977e961d8472f8101a2e3cc9a2ad2",
      "IsHidden": "False"
    },
    {
      "Start": "577ee3696e5149f69cba1bffd73a4baf",
      "End": "c9167b4bee154217b5c90625f137eff2",
      "Id": "6c18fab7b8eb41b0adfb59e37e92ef89",
      "IsHidden": "False"
    },
    {
      "Start": "f77ee37293304771befe54b08a27ab0e",
      "End": "8e75cd870d2f43f399294393dfeade29",
      "Id": "4dbe9691086e4a509986e95984bee5dd",
      "IsHidden": "False"
    },
    {
      "Start": "01f1e354c6194d2c8a1a0ccb64e3644e",
      "End": "cbfa6ab904534eaeade63878ebd8ba16",
      "Id": "d5adea38d38040a5821b323255c11d28",
      "IsHidden": "False"
    },
    {
      "Start": "23bca4772ad147ecbe52c391e679a283",
      "End": "a78a270a8c8c4aaca389d7c66f8256bf",
      "Id": "67a2c266f03c4392b2286ef079aef1cb",
      "IsHidden": "False"
    },
    {
      "Start": "4582a57278dc441cb34e1d1e9bc821a6",
      "End": "449f0f63591e4f36b739adcc8baf9be2",
      "Id": "d59433f6123949e4930ad9708b2bcb29",
      "IsHidden": "False"
    },
    {
      "Start": "4948512f8a3a49a787a848e74169666b",
      "End": "c13e56cd036d44f1932c033825a1e4c3",
      "Id": "c5390d2ef8404b5c98a7025475d73bc2",
      "IsHidden": "False"
    },
    {
      "Start": "f27373c284854096ba9da988d664814e",
      "End": "573fbf92972e4dbf94f8df08762e12f0",
      "Id": "c15105f0745f45dda124884042ff8eb3",
      "IsHidden": "False"
    },
    {
      "Start": "c17ba2129485413eb4d73c4e495d57a4",
      "End": "3f67d0bed9e54c2eb8e0af447d4709f1",
      "Id": "166b5486636c4adc9f3900e9eb145237",
      "IsHidden": "False"
    },
    {
      "Start": "9b9cadb4e1f64837bb6175b0a3012898",
      "End": "67c6589b0e0641f2831e56ea6f162478",
      "Id": "28cfcc4a7e0f4e98b4d826cd808d37ac",
      "IsHidden": "False"
    },
    {
      "Start": "9616ba4ffec14dcca1d05ced8ea23b1f",
      "End": "d3b2b4993b3543729df7aaae722f750d",
      "Id": "6b5ca4cdd4c04ff68a3dce545f8450ee",
      "IsHidden": "False"
    },
    {
      "Start": "ca9c4f028d274f1b96fc3a84c5bc4fd0",
      "End": "e62ea1e5670f4ac0b14c1d020e8d2b79",
      "Id": "57d1d665c78b4fbc9664481104ae64ed",
      "IsHidden": "False"
    },
    {
      "Start": "230842c03d524882aa5f08cf45cad604",
      "End": "28eda286bc9b4abea940a7c00ac3cebf",
      "Id": "63b98c6db5ab4257bc330baa9ef0a843",
      "IsHidden": "False"
    },
    {
      "Start": "d0d221523aa64742b5bf8297d58fb29e",
      "End": "fc272ce7c8844272b1168327cc160155",
      "Id": "868fe88a4e444d60b39d6d45d5c940cf",
      "IsHidden": "False"
    },
    {
      "Start": "2036189fc62f49dcaf7cceb8418997a2",
      "End": "1ce4ec5896544639a7dbfa6d01edfa7c",
      "Id": "9891022f1fc84f829a78c5c0e4016b69",
      "IsHidden": "False"
    },
    {
      "Start": "c58501fd3cdb4c62be5b4b50d8bacbdb",
      "End": "7a17475190924521af14778e37360183",
      "Id": "63aa22129edd4b9aacaf86614d9dc882",
      "IsHidden": "False"
    },
    {
      "Start": "b6aeffbf94ef4b7fb2871319a88ee5a7",
      "End": "9509010ecd2443b4a4d0d1a3c1d90c39",
      "Id": "7e7c805b6e864257a4383bc75158aea1",
      "IsHidden": "False"
    },
    {
      "Start": "478aa8dea86d4b7a85789e609947bbbf",
      "End": "3ad9e89a4abe4560933052001316691f",
      "Id": "db5962fc2a1a4a47b322c1ba8061f8da",
      "IsHidden": "False"
    },
    {
      "Start": "478aa8dea86d4b7a85789e609947bbbf",
      "End": "b6c16468b21342e5a77f3fa2612548f4",
      "Id": "b9d778158c9f430bb66004aa548f528a",
      "IsHidden": "False"
    },
    {
      "Start": "e69cc68f10734e5f9c54514dd0d0b634",
      "End": "a3edce327989422ca297cb4faa9dc99f",
      "Id": "f548e25235f842b18d0945926bf85e4d",
      "IsHidden": "False"
    },
    {
      "Start": "4cb8459afc3549858f177d0558e3dd65",
      "End": "221b0d08cccc4c06bb22914e13894872",
      "Id": "a981d7e5198444099dbb7c03eb4f83ba",
      "IsHidden": "False"
    },
    {
      "Start": "c11a490977c140e881bc2b48f4d95e6a",
      "End": "437d81cdaef04d5f883d5f46a61aae8b",
      "Id": "39c06fe10f284a199744e136a2aef31e",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "49936f6ea0d2449d81efe670bc498222",
      "Id": "75d88146633744e3bc36de5393f7b2f0",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "dfa9dfd56f2b4fbd8069395a2a8318d0",
      "Id": "b657553826d0480d861a2fa645fc83ae",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "617c78533e6949ab97187d4ba40127a8",
      "Id": "97e0096e767e44bebf439319a4fd38a5",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "42fe9362d30a41d6a9fb98a5f2dea289",
      "Id": "8f8bf13c1b9847ada5e016e091c7817a",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "52d55c676933410a8dcf167c3fa9d4de",
      "Id": "7f4ea46fe8df494998df15b718edb840",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "c69f16b53c134998a2c3f2bcf9cf3c91",
      "Id": "c07edd4fff084e64a9753afd7bb7af8d",
      "IsHidden": "False"
    },
    {
      "Start": "69ed193dc677442a87517bf4f39dfdee",
      "End": "988a143441fc44f481143c534a3402e4",
      "Id": "8e7f02ac9fb2485fa3fa592d1c1f8216",
      "IsHidden": "False"
    },
    {
      "Start": "0d2f65ea64c4449eba9d5abe6ec2c4a8",
      "End": "5ee72a692e9f4527af050bb70b97eec5",
      "Id": "70bca8d6144f4716907a0f252a656ccd",
      "IsHidden": "False"
    },
    {
      "Start": "7b73878aa361413dac40fcbcaa11b22e",
      "End": "9fae7ee1fe274c77abf73fc471d0e983",
      "Id": "46e1f5963a4440209a5a82cecfef3848",
      "IsHidden": "False"
    },
    {
      "Start": "3310c77e30e3419da9b875412fb6dd5a",
      "End": "3805689eb37b4c9ca878973b6d4cae11",
      "Id": "6d0e1abbc7284cd89b18f842163dbfc9",
      "IsHidden": "False"
    },
    {
      "Start": "5ffaa13d00924e8aa7393574e4786787",
      "End": "360d6d9c38044764b9c04b7a519b0bd4",
      "Id": "3927ae9091544d68b4fcf0218457d304",
      "IsHidden": "False"
    },
    {
      "Start": "045a73e3ccd049388398c56f68cc89bf",
      "End": "7c7d7467ad764553b323456b91279942",
      "Id": "8c976f2d933f40ed9dd7d7040a3ba626",
      "IsHidden": "False"
    },
    {
      "Start": "3a6bcfe400f64f15aaa47d667fbc72b9",
      "End": "3ca685c149eb4e4dbddddf634680d378",
      "Id": "f9f1844b30d24841ac90e82272d216a4",
      "IsHidden": "False"
    },
    {
      "Start": "6fa680d56f9f4cf7ade33136189f94c5",
      "End": "774cdcf78abf416b8f5cf6c2dca69799",
      "Id": "853f8869c06548068013b350a330d358",
      "IsHidden": "False"
    },
    {
      "Start": "cdaf6f307ec44273b029007973bf99de",
      "End": "0705421cb95e4d82a5f13e2ca2d9f153",
      "Id": "c64fe2ba163a44b293de59237a70e31f",
      "IsHidden": "False"
    },
    {
      "Start": "d1ed69c83db0490da236c05cf3c86f44",
      "End": "ff84c36e67f9488288a09c1a5fc159c3",
      "Id": "0fa46d294baf466ab025619e7e9722a9",
      "IsHidden": "False"
    },
    {
      "Start": "c7a334066cc348c99c587b7c6b517b65",
      "End": "5f96c3f2fa6a4710b624872d8227bea6",
      "Id": "66c2cea3166d48bc8c590d95bc54c0af",
      "IsHidden": "False"
    },
    {
      "Start": "38ded34b381d4b179b480417b1749368",
      "End": "aa0929dde1634fdcb153d441f7f3b5f6",
      "Id": "b7e34d0494104a66ad56ad75169243b2",
      "IsHidden": "False"
    },
    {
      "Start": "9d9a4bca6c024ef4bd7918f8febc7188",
      "End": "1b80b1bb219e4aff9fcaff14ee0e2125",
      "Id": "9a4b23840a6d4fbc8f9a7f63a4db492c",
      "IsHidden": "False"
    },
    {
      "Start": "836c3885e995453199b5e13f96f8873c",
      "End": "f317348c3dd64169856397a2d512a180",
      "Id": "c4243f687b004bcf900fb5bd67e68b95",
      "IsHidden": "False"
    },
    {
      "Start": "5f613e4705e3427eaec4166c4021decb",
      "End": "722a1c9ef60b4925a180e470f6e65acc",
      "Id": "fbfa9a798f7d431ba69acb0b3273dee7",
      "IsHidden": "False"
    },
    {
      "Start": "044fca0da34d43da856e394786b7d56c",
      "End": "da5abcafc8114955883e4e09a2967be6",
      "Id": "e6db2b020b764777a06d8d82e988f17b",
      "IsHidden": "False"
    },
    {
      "Start": "044fca0da34d43da856e394786b7d56c",
      "End": "e144c9a37ce54f3b9432eab41b38164d",
      "Id": "fd5662fc42c943b7be32204d36177498",
      "IsHidden": "False"
    },
    {
      "Start": "a87c970b265a41be84a49d7388ee1e16",
      "End": "792220d59d294230aa3a1c585c83f56e",
      "Id": "caa167e3ece64d05ac3a94fbaee632a8",
      "IsHidden": "False"
    },
    {
      "Start": "cab2ece7ac544b0d93266ac1efcba8e6",
      "End": "67b5e649d6dd4cb7a9690c6f4a4b3a9d",
      "Id": "a752dd0e1f294a4e9a95e07ce7c9817c",
      "IsHidden": "False"
    },
    {
      "Start": "7328c77624824996b211eef94395d6bc",
      "End": "54930ed1e67841ecb58d3337ce549e55",
      "Id": "1d0153906acc4653b55c310a22243f40",
      "IsHidden": "False"
    },
    {
      "Start": "08df5184a6424eb1bdd58d75bdf05f34",
      "End": "8797ad5d5b3e4598bf605a8e14f2a4bf",
      "Id": "0e52d75113cd4fb1b1f8eda770199b92",
      "IsHidden": "False"
    },
    {
      "Start": "5fd6b734a3a44db2ab7018d9331860bb",
      "End": "ec6dbacb8d6c498395e9af633c91c9e9",
      "Id": "bd6deb337aba4a9ab76cb96c326a8506",
      "IsHidden": "False"
    },
    {
      "Start": "6b8b1c156ab14550866af1f50364cbc5",
      "End": "14c10a28c3bd40afb9755f963d6f3994",
      "Id": "5f1b1561cac540bfbc41878b147d6213",
      "IsHidden": "False"
    },
    {
      "Start": "166d842ac3764c64bcb90543c80d250f",
      "End": "0a9578db4bed4f72a6fcba31694dc768",
      "Id": "3c75fc7b29f14c808044920d281b4758",
      "IsHidden": "False"
    },
    {
      "Start": "45c0f891d8cd4c2db887469bc96e9e78",
      "End": "fbb0b620ae814f0db2494189ff2c9da0",
      "Id": "64d2f642d6494088baededc1885ea3a2",
      "IsHidden": "False"
    },
    {
      "Start": "7c729ee4c5504d92b13ac3365e2d247c",
      "End": "b61501c260ba4d879b101ddbb0e3a12c",
      "Id": "751ea486087248a5ab220be7808e37ba",
      "IsHidden": "False"
    },
    {
      "Start": "95735a5e8b69422f968959a33084f1aa",
      "End": "900c8c38891b4c27912e378bed2682e3",
      "Id": "44a8b5fc36f545aa961ba8aa5fc5e884",
      "IsHidden": "False"
    },
    {
      "Start": "36a8508c156244228fbe2af08ecac9c1",
      "End": "b99d87a97b534bbc82303cac8896e5a9",
      "Id": "597586e7c76f4b1bbfaa31aa9801edd4",
      "IsHidden": "False"
    },
    {
      "Start": "54d91307af9f4df99e7d255ca834902f",
      "End": "df5daf9d04c94ce4b7c3cddb4e163646",
      "Id": "474da11f340f4e2889294a1ce4d2a0f9",
      "IsHidden": "False"
    },
    {
      "Start": "7f5baa91478040a7999663c7e88c3b62",
      "End": "e27c0cd33af340f9a6d7f52268a838ec",
      "Id": "182e0f19ae794aab93883ad893d753b7",
      "IsHidden": "False"
    },
    {
      "Start": "77253447d5104b8fb04b84647b6a1114",
      "End": "e1edf9ab66754fa1911253fe792563d8",
      "Id": "64b2459bb4194212a006be530e48ef6b",
      "IsHidden": "False"
    },
    {
      "Start": "dc6317a6ad964582b86f5d712210bb59",
      "End": "ff67a4ff94204f75952fd9fefb228646",
      "Id": "1d9d1c75c6674ff79fe5a4eb42770a61",
      "IsHidden": "False"
    },
    {
      "Start": "5d1c7237d6f447acaaff2df14bce1963",
      "End": "c69d4f7d97774c2faf4351ee5c53bdbe",
      "Id": "aa205a54a5a842b082bd6e39c18b5ed0",
      "IsHidden": "False"
    },
    {
      "Start": "51505445a22542b7ad6406d592c4a274",
      "End": "cbcf6ab5cf9043dcab988147066dfde6",
      "Id": "17933974ec324744ae01353624ec5d5d",
      "IsHidden": "False"
    },
    {
      "Start": "4d74e07554154b05a9ff283bd292b4f8",
      "End": "b4506fc6ca4f4fcc86d37ec545d28b6d",
      "Id": "361c033b84784aad8c9831ccbdea625b",
      "IsHidden": "False"
    },
    {
      "Start": "cb20f51cb69542219785ea721ef9440a",
      "End": "519ee9a2bfb94895bb7c479558f888aa",
      "Id": "1399c9e6a89d46aea4841abf6f5a32fe",
      "IsHidden": "False"
    },
    {
      "Start": "78625c55de574c379ce6470a6cacd57c",
      "End": "d77af156604d4ad3aa666a0852fe1154",
      "Id": "99302a83bc2d4b42b69d241023b5d454",
      "IsHidden": "False"
    },
    {
      "Start": "141c078a65334c4e996de034f9dbdb47",
      "End": "0d6d0448102d4f96ba48296deb635332",
      "Id": "b1e15720a8af479f97be878742b2eb41",
      "IsHidden": "False"
    },
    {
      "Start": "7b4152cca0604403872d8cee720e6ba5",
      "End": "086d39300e9b429896234d81c33c029f",
      "Id": "7379885fcc0740148442acc5c57409c9",
      "IsHidden": "False"
    },
    {
      "Start": "1a360674bbb84c11aabf9692ab910e95",
      "End": "bb2b583c785946dd9663c70f92e4e0e9",
      "Id": "81d3ad7caa6b411a9aa78f3c0e4e2eda",
      "IsHidden": "False"
    },
    {
      "Start": "14838e58683f4d449f5bddfd8589be0f",
      "End": "d6159e4124ee4ddca78e2fcfdefa5ed5",
      "Id": "b4e5b81f99304a9594935b355009b4fa",
      "IsHidden": "False"
    },
    {
      "Start": "8db2365983a84f768865419730d59c45",
      "End": "0bf4a08b2099417f98d745d97288055b",
      "Id": "93be12fcb0b540fe90be3d23c06be982",
      "IsHidden": "False"
    },
    {
      "Start": "7f52a02070cd446f9efbbda7ab3c3ff6",
      "End": "4fc2934c35f4489888182de2831a44f6",
      "Id": "e2ec089a7b384df4ae1169eedfe141cd",
      "IsHidden": "False"
    },
    {
      "Start": "b55116c0ea6249f2b83f644093f9e924",
      "End": "5ada429d36234acab10a095545a97855",
      "Id": "673d6407027142aebe13af97314605ba",
      "IsHidden": "False"
    },
    {
      "Start": "c0964d63aad4460e82f27951f193fab0",
      "End": "c79afcd303134dd1b54b9f670ae6de96",
      "Id": "83797c4e6a044ca8bff447456cef398c",
      "IsHidden": "False"
    },
    {
      "Start": "793442e46e164978a50b3a290085efba",
      "End": "647088427da04b2881550b7861245aa5",
      "Id": "0ccfb822cfdc40a78b99bdd9be264a1d",
      "IsHidden": "False"
    },
    {
      "Start": "c3be6e0ae59e43deba49ea829e3cbb58",
      "End": "a6edc6b505474eabbc11ee7936bb8a73",
      "Id": "41292432f7754e3bae0ed8de0a1c69aa",
      "IsHidden": "False"
    },
    {
      "Start": "aff394b20edc4a9b8ea72a16f98e1ca5",
      "End": "f1fd1dedbebf4c13a19e10c3b96fd979",
      "Id": "3f16ebc1207545f3bac8917184f62e1c",
      "IsHidden": "False"
    },
    {
      "Start": "0eb624cbe07149f79e9e26574c7a9fa1",
      "End": "ca5357cfe1bc472c88597c1c3d709977",
      "Id": "00410d081f7e4afa8d1e0b59eb2b7f84",
      "IsHidden": "False"
    },
    {
      "Start": "496fa997142f42019d4d1d6ca8123def",
      "End": "5b499bf919684d9aa69309e5d05afba3",
      "Id": "c174a75325bf4899b838f16882a92ec6",
      "IsHidden": "False"
    },
    {
      "Start": "27a268cba07f4f3e90ed371c42d1b82f",
      "End": "de1dd072f6fc47929a168e3c488d875c",
      "Id": "5b2d64baf17847c6a99eb56be8e3950d",
      "IsHidden": "False"
    },
    {
      "Start": "7a5c3874242f4f0da4e9e1164b39534f",
      "End": "69727c984279470f84447ab77c538ca1",
      "Id": "a9f042eec8804a5490247c0c9593aafe",
      "IsHidden": "False"
    },
    {
      "Start": "0158c654298e46c282bbe65009963104",
      "End": "f06f125d61e540c298d734e9166af640",
      "Id": "698183835c864af09412dd9d80b92c38",
      "IsHidden": "False"
    },
    {
      "Start": "38de697263d04c3aa09886e95687c1a6",
      "End": "719f425812e944f388e785917ee3336f",
      "Id": "a06f92bf10414a9397bc4b125486c9f7",
      "IsHidden": "False"
    },
    {
      "Start": "6ddb34ee70f24d0ca97c309dc83a1163",
      "End": "5a7042b9245742d6813387dc527985d5",
      "Id": "cba36cf362554e5db38940e7db5b80af",
      "IsHidden": "False"
    },
    {
      "Start": "74c8aa9429024b028a4b2b16cc6bf2f5",
      "End": "8e6e823d452f49ac807860489cf7bd29",
      "Id": "5739a015831440678a5c21b87761ec75",
      "IsHidden": "False"
    },
    {
      "Start": "23f902b6ebcb49129c3f873e6ab4d4c8",
      "End": "903836371d4e41688508025888090ddb",
      "Id": "dfaa753c2bd946e68f11fdf218cbf458",
      "IsHidden": "False"
    },
    {
      "Start": "c3b98a196be04a7cb81480d10cc72014",
      "End": "1fcc2937ddac47d08e065b96ff6c00d8",
      "Id": "af174e3a1bd34dd1a48106c81c30d76f",
      "IsHidden": "False"
    },
    {
      "Start": "e197ba0596f541a78c957594a407c6f3",
      "End": "ba644e845cf84089a81e94c4f477c71e",
      "Id": "1490bb39c45144ef93984b40353f792c",
      "IsHidden": "False"
    },
    {
      "Start": "9444b3487839419ba711ab5887034746",
      "End": "97f27386428d468c815011052e04fc8c",
      "Id": "689ac3e0a4d940e4840fa2316be93ec3",
      "IsHidden": "False"
    },
    {
      "Start": "1a5c70bf23404f1d9aaf4043ae5b03e6",
      "End": "9d2e1a850b984f5182a0f02a7a85d0bc",
      "Id": "7c3a112607b94a2e8ecc5e83e7ed21dc",
      "IsHidden": "False"
    },
    {
      "Start": "b02149404e0648e883f0576756594c8c",
      "End": "c2bd0d265f724b49b1e05d95e5ac39f3",
      "Id": "b08de8922b9a452f94cb68cc5455dbf2",
      "IsHidden": "False"
    },
    {
      "Start": "c157440400ea4e0c8745f5b8b3df4234",
      "End": "abfb704a878641f39658513fed125af0",
      "Id": "dc4b1edc2b9b4030a6cf5d1bd4155758",
      "IsHidden": "False"
    },
    {
      "Start": "66df6bdf74ad42f286805dc398a011db",
      "End": "503316d902434d0c98a177a1a3eea83b",
      "Id": "e8d0a98dbb074e99aa09a2d4ad652113",
      "IsHidden": "False"
    },
    {
      "Start": "3e78c6a1f2b44825993ff9b71e738ece",
      "End": "3cfb93904fcd4209ae9338f1192f137a",
      "Id": "3b6d0459ca0b416ea3305d813a88bf73",
      "IsHidden": "False"
    },
    {
      "Start": "d748c14cb7ea4c0d8e0171e7f50dd6cc",
      "End": "f174cc78a69b481e8d54192cfc2004f9",
      "Id": "435b7f26e70c4ce1a6efac8676b8120a",
      "IsHidden": "False"
    },
    {
      "Start": "4256a54566e0449780ef358cfbfef141",
      "End": "f1c125a9e9654cca9c8fc5c09f3c1a1d",
      "Id": "3f724d2644424a189d5a093faf20abcb",
      "IsHidden": "False"
    },
    {
      "Start": "d708b1a375e64ed88805f82ddb80bfa7",
      "End": "8127d1a05e72401ca5451a6e1887f07a",
      "Id": "d8b9412864864933998ee4b9859d1e93",
      "IsHidden": "False"
    },
    {
      "Start": "241c0cb24fcc4d129203b1d088686834",
      "End": "35d45ee886af46d38a154178203f87bb",
      "Id": "c268f155703341ea9d106c5537093a79",
      "IsHidden": "False"
    },
    {
      "Start": "f38ec7e4d26242a88b2b6f8945b4d178",
      "End": "57ebc07c49914a4faa661fa56b2e27ac",
      "Id": "11daf5d8c45b4fbab3b7c99b46485862",
      "IsHidden": "False"
    },
    {
      "Start": "1f439f5aafd44d649e25b129e38c990d",
      "End": "b3ade6ced98b4d5b95654666d3726348",
      "Id": "8bb7a92443fc4ec9b2d67fff012faef3",
      "IsHidden": "False"
    },
    {
      "Start": "b16c1317ce704d9dbc9ff0292c4527e9",
      "End": "569f5035371a4f97a8f59a3083f32538",
      "Id": "7d6ab935767d42c18fdd0e007dd816b8",
      "IsHidden": "False"
    },
    {
      "Start": "c3bb3d310df74916bc76104a9e8da9a5",
      "End": "7cb8675b58674964a4588399673bcca7",
      "Id": "b5a94e45e13a49d087e8e198cbbfaf97",
      "IsHidden": "False"
    },
    {
      "Start": "f2d05a77686f46eb90bcd0c3f3ab55e8",
      "End": "171e59ecc53c4afbb453a7ddf3dc0c56",
      "Id": "967a5389ddb3472089c8e619e9948e9a",
      "IsHidden": "False"
    },
    {
      "Start": "4cc7e658f2fb4bf7b4d45e0a68f0f850",
      "End": "a8a4502e4e814b3187b3901991d18c79",
      "Id": "067e426fd1174133ae66380445aaaf95",
      "IsHidden": "False"
    },
    {
      "Start": "fb549ab10cde4ee8a5a301c7cc8f420a",
      "End": "b89df06d21594605a4e1074c5c583501",
      "Id": "745e7a9469c64fcb83e584fdc47007d6",
      "IsHidden": "False"
    },
    {
      "Start": "c30a38f099434d70aac8f2563b76ee26",
      "End": "242594d749234ba2b673dc6a2ff1649f",
      "Id": "0574443906294eaa8a6b75be5cc4fe8f",
      "IsHidden": "False"
    },
    {
      "Start": "38d1433f4c6d4d1db1d3b9ac7b3af0b5",
      "End": "979998d5bb0d46219e53a8065c0b7b66",
      "Id": "ab63e7beab794adca40a3393db144d7f",
      "IsHidden": "False"
    },
    {
      "Start": "31d96786a99b46ca90c98e4272af6f97",
      "End": "db8d4c0832134532a95d3213445b19ba",
      "Id": "ea1076ccef81402ab9b97241cf1d0c14",
      "IsHidden": "False"
    },
    {
      "Start": "be1fc509ac484437af38466ac70e4a4c",
      "End": "c76c5b70102b4c41be981c4f22f52ad9",
      "Id": "9298680bdc594348a45b0c5975e62e19",
      "IsHidden": "False"
    },
    {
      "Start": "908b390479514e4bbb958257ee2f14d6",
      "End": "01344f02483d4841a0dcac8d3614fe40",
      "Id": "5003e0ada38440b7893e97782432a857",
      "IsHidden": "False"
    },
    {
      "Start": "a4fa9cd5c8a84e9aa7d631c6288c4120",
      "End": "3bea217024cf4270ac1480e5ff967e1e",
      "Id": "25e578ae91554d88885357a394b27a2e",
      "IsHidden": "False"
    },
    {
      "Start": "95eb02bfbdc64d9988feea2c5f7d2362",
      "End": "95e83f9112d1432b8a6a4d1ffb67775c",
      "Id": "0abcc4dc2fe64342b3f366295d5b7255",
      "IsHidden": "False"
    },
    {
      "Start": "fc178caf9911482da792cac0ca241c54",
      "End": "52248299283a46ccafe98c166c4e15a0",
      "Id": "817951dabd5e4870b25dbee5925a35b8",
      "IsHidden": "False"
    },
    {
      "Start": "1d261781c4294bd889b1f5147b0df386",
      "End": "da7601fc2d9e4e858fa6cd158c699573",
      "Id": "dcd298ef30814596972ee7e514c4e200",
      "IsHidden": "False"
    },
    {
      "Start": "3caa6d14e2aa4d22851d3b9b81be80e0",
      "End": "7cd1c063bf5b4c27b4adfb027675d37d",
      "Id": "fd8d6bb040e3483d964342f926ad853d",
      "IsHidden": "False"
    },
    {
      "Start": "a873b97e28ba422cb597381e5066c1ef",
      "End": "b125dd31448340ad9363e4b00c5e4936",
      "Id": "ac5b2c6f172e45678aff2b37b42703d3",
      "IsHidden": "False"
    },
    {
      "Start": "46ef7ee5a86e4f849ade344d9e298867",
      "End": "a298e0ab1e544c42971b507474cdb37a",
      "Id": "2e8e774d4b0a4b4694e82ba2c1765ee0",
      "IsHidden": "False"
    },
    {
      "Start": "60ff03aa963a4715a0497a9f94129f78",
      "End": "28305907510a4a02bde9054fa5df5a3d",
      "Id": "dfb6ba2b269d4012869e10dac05dce77",
      "IsHidden": "False"
    },
    {
      "Start": "657f320bfb8748fe9b7d0f6915e3c14b",
      "End": "5f90f86ac0934f2db323264d00089d52",
      "Id": "cb461530ca4d43ddbf6d824672872ee3",
      "IsHidden": "False"
    },
    {
      "Start": "657f320bfb8748fe9b7d0f6915e3c14b",
      "End": "0758d1f04e754cf7a6f534f07e015903",
      "Id": "e85dcd76b8664844a8f5ab86ad7892fd",
      "IsHidden": "False"
    },
    {
      "Start": "e9b98cddc11840b2a28eb9ef76b3254e",
      "End": "040e56aaa4c146fea101a69a958f4d72",
      "Id": "33017e17184e4f3e8657d068ba6c65f0",
      "IsHidden": "False"
    },
    {
      "Start": "61c60629586646b69a205d310bc10a93",
      "End": "343131545bca4081959146253ce28a26",
      "Id": "0d6cd2c445014e8195eacafddae723b2",
      "IsHidden": "False"
    },
    {
      "Start": "4db2091c437b47f4b8113515038005c5",
      "End": "f2381471bbde47aeac40153ca875e787",
      "Id": "6dddc743aab8493eb88b99ebf6b39a6b",
      "IsHidden": "False"
    },
    {
      "Start": "640d516d1ddb4f4d8acd9148bda198b9",
      "End": "83280091ff134bf39049e39bab421ae4",
      "Id": "071d8eb7c8d446a59434542f9f0d152d",
      "IsHidden": "False"
    },
    {
      "Start": "dd5fc5b879a241668eec45fcb7c331c7",
      "End": "dfd3024dea814e15bf3616ac229de5b7",
      "Id": "6eb0ff8d91d843428767e3dfb2a58ab5",
      "IsHidden": "False"
    },
    {
      "Start": "279d3ef6726048dea4e88f6fe9ee6dc2",
      "End": "08bf1b2d7737406f85aa04ae1261350f",
      "Id": "b944ad7e13e44109a4e81c66abd15868",
      "IsHidden": "False"
    },
    {
      "Start": "42b4dcd3b9954d28ae874ead6f7989cc",
      "End": "59e765ffc7544ce6b299dc4cfcd789bc",
      "Id": "c2ab2ada1a404f82ad8ff3c4cd0fdb3f",
      "IsHidden": "False"
    },
    {
      "Start": "42b4dcd3b9954d28ae874ead6f7989cc",
      "End": "77775d1b7d5e4e129c010e133d38d408",
      "Id": "08c9ec027685407c88b05d254ae6cf03",
      "IsHidden": "False"
    },
    {
      "Start": "42b4dcd3b9954d28ae874ead6f7989cc",
      "End": "79e93e90ebfa4261918f5c946c488ac8",
      "Id": "4290f21d2e8c4a25b0aff348210a3e12",
      "IsHidden": "False"
    },
    {
      "Start": "21cc592f12194d02ad67c029e587f7f4",
      "End": "613ffaed8eb14be39c4e04781b1e0d00",
      "Id": "1c090ae39d8b4c92b48a8f8304829466",
      "IsHidden": "False"
    },
    {
      "Start": "3357b1dd4040482184ef3bcfdd9afc9d",
      "End": "cb3526b8bdc74738a616fa7d6ab6a2f2",
      "Id": "bb404bb59093414cba9dae753f8307be",
      "IsHidden": "False"
    },
    {
      "Start": "bce2858dddb24a62bcc9e1a00b3b865c",
      "End": "6f08b153e95c4a8693a3853381b51356",
      "Id": "829e22ce8bd2414da2beed2d91ec27d3",
      "IsHidden": "False"
    },
    {
      "Start": "7f6f37e6c7d140f9b5e61b5144df1eb2",
      "End": "253115f5087c486faee64aa58e3f11b9",
      "Id": "5f9a2bfba08a451c91f2fb30da997e23",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "9654f69eb75d40438a14a0e8a63873a4",
      "Id": "66319e423b9c4cbea1bd7176f48339d9",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "164b3ea9ac704df281a8304e4403bbb6",
      "Id": "3f4943290e7e4bdca5537d8c48a53396",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "24128f465a144a43a4b5981ba3cf5f7e",
      "Id": "e017c9e3dcf04e64aeaf579fa69af9fe",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "ec50e955e9f341dca9bade6df6ecda88",
      "Id": "90b26400c0564e3d99b41a07d2eb29d0",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "5cbd2b79778c44f89d638f2018c1ecd4",
      "Id": "a420b2e8ab894209a16988fcb31cdef5",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "fd053064d9cc41c9933b310090aa851c",
      "Id": "1c6461c7401c43bdb04a7347f837e331",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "7ffa7e6a07a2464fb72b2ea0d12f79ce",
      "Id": "05a49c9b084b40b38a89c42f963ee463",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "a8c547c77a604c6094264af4f170250b",
      "Id": "74ece6d7bbb84e91a02a9e8924d45daa",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "8bfada9fc54e4af3977040ce811b779b",
      "Id": "4aa3027878f142189c2d71ca78b53315",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "35778329fd8a49b6a76e478dd6f5e12e",
      "Id": "289e6e038bc54b6897b366e66e9fed9a",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "4b2b75f961b24cf6a4e85cc58ea202aa",
      "Id": "235a0c6608e04ed69d47f3ac540379a0",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "fc89e0400c1e49c39bcc91503a327438",
      "Id": "d375be86c7954940b6a54c500ed80a58",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "63e7b6c5993e40668e47bed98f4c6160",
      "Id": "50d08f70215443fab065e953d60c2a86",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "a410c9f4dd83497d9ecf6893b483c1ac",
      "Id": "e14731a075cd4d768e2203f28701f45c",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "128619af6a2d4b07b387794eae33d866",
      "Id": "8e5c6f85722b4d219678a3d323fc3abb",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "9297ef16a72b46a18c8f7b8cae3ee0df",
      "Id": "d8898eb6be5a4840b1894ff2edeb30a0",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "ed702d2cfa404241a72344c55cf4404c",
      "Id": "66c776a2aba6402d832f3d92d3ceaf30",
      "IsHidden": "False"
    },
    {
      "Start": "3fbe93cdf55c469b8ef10e320615f53a",
      "End": "cd0b92d75afd4704aeaa3f9cd810f5f8",
      "Id": "62bf2b6dfc854576a020746b93bcd6f7",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "2f01f3b14d7f4b58804808469b9e2846",
      "Id": "e6a696c8bf3e48ca92a18170b0539b41",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "90fb12617e2148a6a5b804889ba0da60",
      "Id": "05f0aae17cc74344aa2131aecdf4bccf",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "e81fa484d8c7412086eef9d476e3befb",
      "Id": "332d437a057f4c9980258a6a416dee02",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "77c7e287e96d4dae9dd9565ecae21666",
      "Id": "821134d88c4745e69bea57c0e470811d",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "eaa8c4f521de48c2bb7efd825d3f35cb",
      "Id": "b82f695371c9495581475e9b6f3e3bf0",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "a3a87c9558584b1495aaaaebf7c5bf0c",
      "Id": "e3cca4e0972d4c5fbf577e6b0f7dd2b9",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "cbf49abd70924869b7363af1bfb0d6a9",
      "Id": "cf37e5ea8e7c4088909a121217ea3130",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "ea8ca95d6eb84890aa9b54de75425ced",
      "Id": "b67da85a46c245d8874f1ebd6347a80d",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "f6823572b0a741c19af4c0a059226416",
      "Id": "c6608878d0c44ccb9081c1a96a602c60",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "36f13198f5d6425e87e64bd2780c16e7",
      "Id": "cc471566593a4a23ae62b51b9be61b62",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "33f06177a5d344999bf580f50b8d25c5",
      "Id": "cf1b41b7106c43659de86464178617aa",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "a1a834ab6bbf4d0dbeea451d5caf923a",
      "Id": "a21df82eb86546a69e351e283041b998",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "699d7af36979420485c8bfe7b2ecaaff",
      "Id": "fe3f69b307024aba81146982ae3b971a",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "efc5f7125304442ea51e2c57d93c51ec",
      "Id": "16e280e09d974f51a3cd93c94159f8e5",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "89ee2521fbf846efa2060d451e64c6fa",
      "Id": "b1656df0a9eb4ccba7d0480f1ab19ac9",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "f66f507d93f14c2d97f332fc59a17df2",
      "Id": "0b96702129fb4a95a9fdfccdf3ff97a3",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "bb8da74e901842e082f6bdd1911de9fc",
      "Id": "cb4f13b6205b40b2957102e60f405500",
      "IsHidden": "False"
    },
    {
      "Start": "16ab04ddf1ac4793899d32586232d50f",
      "End": "94639dd099eb4434b1e568eb793907df",
      "Id": "b5050014660946e68203a5f922296483",
      "IsHidden": "False"
    },
    {
      "Start": "33cf0b530b8f41f29418686be0a30f58",
      "End": "7d93604bc51e471ba1c317a5a255d2d7",
      "Id": "944bb85e3c764c12aac2951f90ec5de5",
      "IsHidden": "False"
    },
    {
      "Start": "64535262c6514af3b107983f10175ca2",
      "End": "d480ca9ed88246dfbbfd4ceef4060310",
      "Id": "b9810b48b21744b191502a95de18598f",
      "IsHidden": "False"
    },
    {
      "Start": "0133698dd8ad4c80bdbb0a0b592ebb1e",
      "End": "272006dba95b4a45a76ed2c323d86fc4",
      "Id": "4f5eaf04169f48b99bd61dfd7479c637",
      "IsHidden": "False"
    },
    {
      "Start": "3db17455c3fc45a78293c733d9116f3d",
      "End": "c56decd5b35c48b29d1d1dab28807fa5",
      "Id": "8afc830c2cb2458483819fb99af9079c",
      "IsHidden": "False"
    },
    {
      "Start": "e2f3845415a1439786c184a747312e69",
      "End": "52113d004cb84ccab1e7873e49f90bcc",
      "Id": "02c301f8b2e24124918a64e4c71a8929",
      "IsHidden": "False"
    },
    {
      "Start": "b23c2852edfc4de2bcdcb1f0c37d374b",
      "End": "87aab5cb14c74e79abf8b8a994002cc0",
      "Id": "030714e780b84aebb728b935245915b4",
      "IsHidden": "False"
    },
    {
      "Start": "379e2a25ad274125b694dc14417483cd",
      "End": "123bb2ab1d234737836d362d9dedb0e3",
      "Id": "a7d33415e83c48ffb9220710415be8b2",
      "IsHidden": "False"
    },
    {
      "Start": "e29fb0ae5c104283a1fd2cd890852c09",
      "End": "29e09aa7f2514854a70d1f28e37bc76a",
      "Id": "2648be15be0b482c89438c258648b101",
      "IsHidden": "False"
    },
    {
      "Start": "5a695a86e630405bacba2f3cafcfc408",
      "End": "2272e338090946ddb50e976898a5de6b",
      "Id": "636b8ee75d114dff85ec6fc810bdbf00",
      "IsHidden": "False"
    },
    {
      "Start": "a95aff0744b84df6b4fe6ba1fc86f364",
      "End": "5ff98bf8b282439180c1d81184b56306",
      "Id": "860a1bca92464d29b57af46c744ce027",
      "IsHidden": "False"
    },
    {
      "Start": "941b8c093abf4fccba3095ce94da8d04",
      "End": "6d3a2f78950049e585e20f4ddd3c3f6d",
      "Id": "6d47b886fbd74150be9ad4f33598bcda",
      "IsHidden": "False"
    },
    {
      "Start": "29c22abe1b5a4a58a73976134197d4ae",
      "End": "c8e6f7c715da4bcdbd215aa6280b2d70",
      "Id": "f33e13c4ac2048c48553dadd33725131",
      "IsHidden": "False"
    },
    {
      "Start": "49640b4233274003b7f18844a0757dd9",
      "End": "f8fb60cb2108449aba2cd324591296a9",
      "Id": "c4c5aaa1dd3c46ab894c18e395cae079",
      "IsHidden": "False"
    },
    {
      "Start": "718d8d00c454444b8617d088842b8ccd",
      "End": "134e1ca41efe4571b05c1421a0d10f7e",
      "Id": "3bb9b61b46744335aec7ebdad84dd3ad",
      "IsHidden": "False"
    },
    {
      "Start": "50f497ac23c644f287c312e1b1be8d2d",
      "End": "f7b93f43b56e40c7af728771a73c39ba",
      "Id": "4f0f0eb18f7f4efeba9cdc7b92a0a684",
      "IsHidden": "False"
    },
    {
      "Start": "5126258091d847188118cc0f367c7502",
      "End": "a3cab2ab248a49508800bf15d82dd98c",
      "Id": "c35f9a86f4884de88734758e897a17e6",
      "IsHidden": "False"
    },
    {
      "Start": "a5a22332ddc8425fb27b3518f42ad45a",
      "End": "c3a2349255ab40c5864bc216d93a605a",
      "Id": "0ffc9bb6dad24445a4f0fc33501401aa",
      "IsHidden": "False"
    },
    {
      "Start": "d367bbf095d54f208a16fb70f2fd4bd9",
      "End": "02a4a5f75be5489eb97aed2e1278e7fb",
      "Id": "81486cfe5fa74dcb8b3ebf279d9733d6",
      "IsHidden": "False"
    },
    {
      "Start": "aec1e05675344ae0b6ad039203fd85f1",
      "End": "0852a83dbe094fc0ae3bd0b08523dbdf",
      "Id": "8e634084ca534133827584dc9fa35301",
      "IsHidden": "False"
    },
    {
      "Start": "38936f115a254986981a2877b9c21f66",
      "End": "b047f79b16074d63b16f88ec6c4f7045",
      "Id": "d9fc7c4dcb3a496fbf7561bafc416949",
      "IsHidden": "False"
    },
    {
      "Start": "ce1bba06b76c468c94a70cf3e35aba39",
      "End": "6310cf96cfa14bfcb93082790752161f",
      "Id": "3bc4f6a958ee446bb84650c9ad497f35",
      "IsHidden": "False"
    },
    {
      "Start": "ba4a75a3e14844599ef9d6c7218e38f5",
      "End": "df6fe2917e9e46d08b9f2835409ef5cc",
      "Id": "5a9b399735714f1298d2cba2f38316be",
      "IsHidden": "False"
    },
    {
      "Start": "efced2cfbd6645ee971d359a24d2616f",
      "End": "9d7ad6a79f4247108ad429b2df18280f",
      "Id": "fa16e81ca7d548eaa1ed7ca63c11efa5",
      "IsHidden": "False"
    },
    {
      "Start": "95ff45b1a13e4b9e9f33cc16e06d8c5b",
      "End": "efd02eaf5a2b4fb4a1aee34e0cc2d932",
      "Id": "b6a32f9a42584c4291f55cdf925bf67b",
      "IsHidden": "False"
    },
    {
      "Start": "b9203f637340454c95fc0a15f09c5934",
      "End": "1fa2d34accde421b94dc04a973e243f0",
      "Id": "1e10f5f1954349828adcdf731c17703a",
      "IsHidden": "False"
    },
    {
      "Start": "b9203f637340454c95fc0a15f09c5934",
      "End": "e5ccc46d0afb405ab7f68ba8d449d964",
      "Id": "b0c129f75c4f4fe49d5076366663fc8a",
      "IsHidden": "False"
    },
    {
      "Start": "11c655d681384ff284d127c67d0f8292",
      "End": "e1e8cfa5c0ae4c01a7b7849d64d487f8",
      "Id": "a2b1eec737c54d9cbcbe9c7dd0fa04d2",
      "IsHidden": "False"
    },
    {
      "Start": "ee3df2b13eb34f7490d572ba6dfcb37b",
      "End": "ed22f07876d8477b9beb4b640d9a9fcd",
      "Id": "8d19f003571b4c848322d36e6268d439",
      "IsHidden": "False"
    },
    {
      "Start": "9eabcca5f5f04995bcc3a48b767bec63",
      "End": "bad8f2da95f24f3c9b2b902eeba24727",
      "Id": "f02c3432ab4044c580056aca5969c377",
      "IsHidden": "False"
    },
    {
      "Start": "1415cd1bef2d45b4b0ce6dfac078544d",
      "End": "f60b7d3beae34cbdac89796b9ffd9519",
      "Id": "21608eced5884ff6aab4c437991c4eff",
      "IsHidden": "False"
    },
    {
      "Start": "b4e791d3719d442c8d83413e4ec75513",
      "End": "849e0b8c0e684dc080919ec5623f5d11",
      "Id": "9dd35ad6e9224ca1ae7eb061515fbd88",
      "IsHidden": "False"
    },
    {
      "Start": "061f5b49294d4d89b91c3d637cac9f67",
      "End": "accb25050bd144c69d5ee82c4f253e35",
      "Id": "d302cf8feada441bba02ad54748ca9b1",
      "IsHidden": "False"
    },
    {
      "Start": "71dee8658b414248b57df16e84fa8364",
      "End": "6ae40bba8135465182971f5ebec6ffe4",
      "Id": "f955788d9b744efab571d580e64aac08",
      "IsHidden": "False"
    },
    {
      "Start": "a68dc851376e4284a471bce2606a63f6",
      "End": "604a940d0f7044278ea379e98d071263",
      "Id": "fe97eefef49241e6a4f088ff65d3ebb1",
      "IsHidden": "False"
    },
    {
      "Start": "49c1475e81f64f968bc45899590a976a",
      "End": "b066e6f834834cb2b2ec41ef0b310b3a",
      "Id": "60fe8d760f8d46d987450a1b17e8e28e",
      "IsHidden": "False"
    },
    {
      "Start": "1efdb615b1e2494d8345b37268df959c",
      "End": "860f9bfdb83c4c4c800bbd2d60bbb661",
      "Id": "99b3e6fc52a14dfd915df85917e51825",
      "IsHidden": "False"
    },
    {
      "Start": "925ffda848e74d58b4493d5d07eeab2b",
      "End": "d32d66e142084d5a9f562bd3875cc5ea",
      "Id": "badf75535b164d8b9a933c353849e40c",
      "IsHidden": "False"
    },
    {
      "Start": "5f70d465b4f34814bfd14843da4d96a9",
      "End": "8b97f36f2c8a4381a9a138b7b908e2bf",
      "Id": "4abc3b98020c40e7b41c516222ab8b5f",
      "IsHidden": "False"
    },
    {
      "Start": "ec11cc8700924b8d90b119dc6be7e140",
      "End": "a13c1e4c8ee74f339d00396e2b9cb089",
      "Id": "67777357a65c4bb6b31b49ab32937226",
      "IsHidden": "False"
    },
    {
      "Start": "86b9d46388d64afe9dc98c22d1942d99",
      "End": "c0f1cafb5b55400d82c1baec197e33d6",
      "Id": "d924af8132864d8295f82072dc840373",
      "IsHidden": "False"
    },
    {
      "Start": "6be28fabcaaa42a5ad3875c10f6c63b3",
      "End": "5066fbc015d84dd984ee2759c684b10b",
      "Id": "7bd8a25b5381424a9b02ffe94d98c3f4",
      "IsHidden": "False"
    },
    {
      "Start": "eba456d2ca7848fc8ffd5cbe41a538c3",
      "End": "4acf56258fb04be492564655ecab4d9f",
      "Id": "1370bd3a65ed40459f850709cb847f30",
      "IsHidden": "False"
    },
    {
      "Start": "c5861c5da32c498aaf209bc5099af86b",
      "End": "b837fb29e7204412988e8d00b06b0e99",
      "Id": "685cbfd8c8254317a7f0b4cd895634a8",
      "IsHidden": "False"
    },
    {
      "Start": "12534d61636b464cbe847e0b30bf2f93",
      "End": "3e4cfd3060dc4575919358ae306c7171",
      "Id": "87bbc3b55248493c8b87a380c5be2365",
      "IsHidden": "False"
    },
    {
      "Start": "4643284cfd924ed8b6b30792567939af",
      "End": "116c5c5249f549b1b3728be1b9674793",
      "Id": "64d116821fb44088841976d237607f36",
      "IsHidden": "False"
    },
    {
      "Start": "64329e756b68460d866aad0f4ac51702",
      "End": "0a74b423379644e6923ed6d20d984b58",
      "Id": "d5b072ad4eac4dfa9997b75b0fb7e51b",
      "IsHidden": "False"
    },
    {
      "Start": "509fdd04aa28489f94601f65ee2bde18",
      "End": "bb425168707f444fba917670b0634f64",
      "Id": "800a0c9878404876add501a41e8af075",
      "IsHidden": "False"
    },
    {
      "Start": "7ded6aafb869455b9b1c7ba8b1799ac7",
      "End": "ccc4c072dfa44a248acfe73b021a11fa",
      "Id": "5d2586abb8a44322986a68f7bab6cd15",
      "IsHidden": "False"
    },
    {
      "Start": "68a87fc7947245fd87e9368d05c6550d",
      "End": "55f74c0f71224254952d0d4b52b02ab7",
      "Id": "17856582e4db4574896f1d71b9481ffb",
      "IsHidden": "False"
    },
    {
      "Start": "8542267509b6441da48fd7a1b57b3366",
      "End": "dbb86979bfa14b24a1b43da6c82f7845",
      "Id": "644efde8b1ba49b1b0cbc8c1bc885b20",
      "IsHidden": "False"
    },
    {
      "Start": "db41cb41602f44dbbf402a77e3e75049",
      "End": "e5b8d468e71645608891105c3314b75d",
      "Id": "f25c5aa9f0a04eff8743c8c69aae0b7f",
      "IsHidden": "False"
    },
    {
      "Start": "e6c45da275224be59ac5b1722823e856",
      "End": "5bdeb3e3c7fd40bb89b831d9f066615e",
      "Id": "99a9f1d6c6b8416c831f7a3459210fb0",
      "IsHidden": "False"
    },
    {
      "Start": "4c17e94254824c4fabb838d5e67ca94e",
      "End": "da55275583ea4baca1a8300947630bbe",
      "Id": "b1139fb7e898415a9830dfecda15b6e0",
      "IsHidden": "False"
    },
    {
      "Start": "3182b1686bb94bed93b7a130ab03c20e",
      "End": "d171b80d68744c518983ba755a98e75b",
      "Id": "579115b08f9d4131a8529c8a02f51662",
      "IsHidden": "False"
    },
    {
      "Start": "aa5cccbba3ba483f9351bd61536a3074",
      "End": "f742470841cc4668a3f194b52f4d2359",
      "Id": "c9ef4c468e4340f88b94fd338b999ebe",
      "IsHidden": "False"
    },
    {
      "Start": "99f9e02d4b6c42b3a0e56714213a1c29",
      "End": "1294d7affdc34395920fa164abc0a49a",
      "Id": "099033a7db02465f8e14aae43d935cbb",
      "IsHidden": "False"
    },
    {
      "Start": "48097a7f2b14451b8302673a09fcec9a",
      "End": "185371e01c6841738dfe84e5f04608e0",
      "Id": "4b393115af024ffdb9bc7771dbbedd9a",
      "IsHidden": "False"
    },
    {
      "Start": "a3a8658d11094e0bba3074362f1caf6a",
      "End": "0bfd5750f27c4c3d8bdc2fbe79ab4e97",
      "Id": "2e5c0d3fc3ac4faf8ffa58fa5e4d4ed8",
      "IsHidden": "False"
    },
    {
      "Start": "5e6711d0c3714093b47f3b78d00310f1",
      "End": "cd7053bd2ff742d6ab27aa6249bf9950",
      "Id": "3fe980c2a993434c96e303d8d956546c",
      "IsHidden": "False"
    },
    {
      "Start": "58a05f33cf7e408eb147524642c7bb8f",
      "End": "f0d5edad34354628b2ec273195a4a54b",
      "Id": "2c7e8c96ae184af097fdc34bd84d9f25",
      "IsHidden": "False"
    },
    {
      "Start": "227980d2b9d3414a9302107abfc1208b",
      "End": "6aa6ddea1b6a423ab189b30e076ecd3f",
      "Id": "d5682b26a6fe493ebb412a471d785852",
      "IsHidden": "False"
    },
    {
      "Start": "c18186a7d9ed4bab9370cf9440e3893b",
      "End": "7ff8ce994247426592360de0b4292eef",
      "Id": "d6d11f8c92624aed9ba68e635bc2baf0",
      "IsHidden": "False"
    },
    {
      "Start": "11a3bb64021543a7a0eadc878210caa2",
      "End": "c8ff33fdfc6847aabd00f921252b57ed",
      "Id": "1f777e7a060f4a26837c2707bdf9c5d0",
      "IsHidden": "False"
    },
    {
      "Start": "2eced27ecc7e4bfc9a6daf327b76f853",
      "End": "b659ec1b26764e4d99ed1a9c3e7d19cc",
      "Id": "67fe6d3686cf42a9a679ff4b4e0e55ab",
      "IsHidden": "False"
    },
    {
      "Start": "a8c89d5cac1a4c8aa10db4d9eba2efc7",
      "End": "9e69b82eb57a4b30be98e57c052d38b5",
      "Id": "890f626020774aa5b40119a9fb044390",
      "IsHidden": "False"
    },
    {
      "Start": "6a3f5a867d554883aa69aa71b34db227",
      "End": "c9f43db223724bcba57ef8054de45d41",
      "Id": "33448bcd234b4103b2de936df0089f42",
      "IsHidden": "False"
    },
    {
      "Start": "d79b5ce22d38423db8474ab38eefe4b0",
      "End": "fe808c55a5fa4e8097be090d62ad1369",
      "Id": "6c658ab5664e428fbaae3e8fc363f738",
      "IsHidden": "False"
    },
    {
      "Start": "59aed0ae911e4cff88ed066658f1b7af",
      "End": "bce93c723869425d99560d4a368bfa8c",
      "Id": "c955af11e86f4ab4bee6c83126845936",
      "IsHidden": "False"
    },
    {
      "Start": "c5247b8fb0904e219259b1837f8097ca",
      "End": "024c7b6e2f4f4af8bd890826f46ba1c2",
      "Id": "866acf1728c04caa9804212f4bbb2fe3",
      "IsHidden": "False"
    },
    {
      "Start": "7a81a816a6ff4daeba4bd829180621b4",
      "End": "850a10e3b7b84dc3980d525081071a49",
      "Id": "95b630c373fa4dd58cce69452e43b332",
      "IsHidden": "False"
    },
    {
      "Start": "eafbfe34e166428b8216d668f362148a",
      "End": "1de61bf71aee46409072441393238aaa",
      "Id": "78b8241348f34a01b6d9bc763ce48e58",
      "IsHidden": "False"
    },
    {
      "Start": "56aba7ded5b34a99bda2b4d32eb9013c",
      "End": "10a113c1f23348f6bf4b1965c73e9df9",
      "Id": "66f6bab8078c429ea05b00e533f7e503",
      "IsHidden": "False"
    },
    {
      "Start": "09aa5e27f18f471095fe1f2dd8e7def7",
      "End": "052a3b2d45854f5abf06dee327d9a4fd",
      "Id": "d95e786095e44da5b8bb432b81477232",
      "IsHidden": "False"
    },
    {
      "Start": "b9f9ec568bd84f6d8fd81bdd7c9a345e",
      "End": "c9bd9c9107bb4691b14925170e049888",
      "Id": "91035dc1022349ab8bcb92690e228c7a",
      "IsHidden": "False"
    },
    {
      "Start": "06b592998592497dade512d2c75474a4",
      "End": "3acc7181d74b4a7db863a8006b65ef75",
      "Id": "877591e3e4c94264a5973d6c44327d63",
      "IsHidden": "False"
    },
    {
      "Start": "3e44e76312be41139d835b462462765e",
      "End": "f91e71a9b6b0458bb63f38706445223c",
      "Id": "e9498afcbaf54c4d8821e17f3358a6e2",
      "IsHidden": "False"
    },
    {
      "Start": "e8bbfced104449d18d0d1ff92f3c2940",
      "End": "44380a1ffcc9452cbb08c21a56125535",
      "Id": "24f0db11d2044d59911ed7f3702a77cd",
      "IsHidden": "False"
    },
    {
      "Start": "d8b7546206c7460b978660ac4f994a67",
      "End": "6412e2f65ec8444ab048febce912edaf",
      "Id": "59ea239a1f0b4f68b7b7a223886739a4",
      "IsHidden": "False"
    },
    {
      "Start": "56d761e5529d49d4bfd58705f3db2063",
      "End": "e6e22ed051744948af142eb3d4759834",
      "Id": "9029692745e34d0b8df7262d0eccb829",
      "IsHidden": "False"
    },
    {
      "Start": "682fa1f808be428e9b3845c11de56295",
      "End": "b516dd829c974efba0abc760cff0a8c9",
      "Id": "d9821866e39c4583973435420cf0a642",
      "IsHidden": "False"
    },
    {
      "Start": "dc88b080573841bc86110c05bfa71eee",
      "End": "4a446d8bcdfe408b9beb844132599c96",
      "Id": "039f2be845c445b09b441c25d564ba5b",
      "IsHidden": "False"
    },
    {
      "Start": "c4fa76f1b15b4c929b163dad54d42bbf",
      "End": "5a56f4512505466eb1fb70e7e232e43e",
      "Id": "e1ad08912223472cba0e178e86ee6a33",
      "IsHidden": "False"
    },
    {
      "Start": "3aece3bd77b54305bdd951c25dbeecaf",
      "End": "137e53d610df49fe80885de0b7091e4d",
      "Id": "945bfd681d8940b1a367632d592186ae",
      "IsHidden": "False"
    },
    {
      "Start": "71021254301a47d79579f17dac96b5df",
      "End": "eee3695d94d94bb49cd0d82dc7a2ba45",
      "Id": "5e212eca28e34eae8fdbcd25621e9bbc",
      "IsHidden": "False"
    },
    {
      "Start": "514997de72ad41c199a834727f7793d4",
      "End": "0984378fdb584e06af23ebb01d106d17",
      "Id": "7c53f81452e5499dbd8f1e63eb296b30",
      "IsHidden": "False"
    },
    {
      "Start": "da21aa6ba20246d49c70b6d5b6469aa6",
      "End": "8b44044e082c4b208fe03fc41527a908",
      "Id": "5d73bc2f363b43e4a6b22a0777c90620",
      "IsHidden": "False"
    },
    {
      "Start": "326fbf4a721b40d99d3cb734ef5c51cf",
      "End": "aa827796d5eb4cf98d4c18024e7d3f98",
      "Id": "b7a737fbbbfd4f7486b721a345f2634d",
      "IsHidden": "False"
    },
    {
      "Start": "08550bfce6a148e6b294806d4d2fcd07",
      "End": "c8b839ee2d0f4add8f18addd9b8a9d6b",
      "Id": "7a88b33b04db478c81635d4e56c4cb8a",
      "IsHidden": "False"
    },
    {
      "Start": "89389db424664c0aadf53dbf0317b6d3",
      "End": "fca1793b4beb47fd8b0780bc464b0800",
      "Id": "61a1d8db8f24451787dbb587d93fe237",
      "IsHidden": "False"
    },
    {
      "Start": "6e69abd6d5ea4853adc38a1bdfccf267",
      "End": "6a39aef0d3fd43d2bea422bf52611da1",
      "Id": "d722d28d52a14febade6d7abb2dae171",
      "IsHidden": "False"
    },
    {
      "Start": "60dcf095941049df8f81831a1cdc4090",
      "End": "5ee927b5370a4cf58aae5b7a11c7f3cb",
      "Id": "4980204c231b4b87a0d8a79b3a602372",
      "IsHidden": "False"
    },
    {
      "Start": "a225b2b3e19c497cbb55101d0a37e1d1",
      "End": "128c1bb862eb445da8d9500e9616927a",
      "Id": "288f98ef430647dc95b7b86671fa46a2",
      "IsHidden": "False"
    },
    {
      "Start": "aa4f68c9ad034f3d8e79b3b01d303dba",
      "End": "5688cece0fca4e8090bbf5b5605c10d8",
      "Id": "df22428a0be049219ea4c4688d1b9b93",
      "IsHidden": "False"
    },
    {
      "Start": "33f5fdae06374c059a28f889778d7466",
      "End": "2f0487d56d3243c59b50e85311b4f8c4",
      "Id": "f121e54f1584424aa095634592f12719",
      "IsHidden": "False"
    },
    {
      "Start": "02e5ad6af725434fb3fc0850b1a8c929",
      "End": "31200506f6af4158afc445b42d0548c1",
      "Id": "f98507190551499087a95d96e3d47fe2",
      "IsHidden": "False"
    },
    {
      "Start": "5c5e103b484d4f43a9969825fd8180f1",
      "End": "3fa469c05b7741bea5d41cb20a1ff7f2",
      "Id": "088385d955854054b1340542ab3004fb",
      "IsHidden": "False"
    },
    {
      "Start": "5026d38d9adf47b693d1ac98f8b0da59",
      "End": "00c9c4e6a0fc4534b0f260152cecc686",
      "Id": "14f4a30ef94f422abf24b5b3285e5320",
      "IsHidden": "False"
    },
    {
      "Start": "6be12f51ff2b4d76bc495d1067bb770e",
      "End": "105b6fdd915045f29dee065ea2bc0f24",
      "Id": "30d4b5014ed2435faf997aa0b70127c1",
      "IsHidden": "False"
    },
    {
      "Start": "6be12f51ff2b4d76bc495d1067bb770e",
      "End": "f5fc8e6dbf0e4dd5b0e2da2a7b2dc023",
      "Id": "9a0a36bdd1fb4cf2a2c022cf8e079118",
      "IsHidden": "False"
    },
    {
      "Start": "64b547e07d6f4bd6887c088db52af20a",
      "End": "fffa70601833436ea6f106dbda8743bd",
      "Id": "a0cbaab9e39b4832bfac2f20f949e81d",
      "IsHidden": "False"
    },
    {
      "Start": "2de3f9590d354a0f9893fbad1955ab55",
      "End": "39106e7b780747b38b6bbfc9ce4bdc64",
      "Id": "9293f1d7136448cea15280272241784b",
      "IsHidden": "False"
    },
    {
      "Start": "8a5eaa659f984b9298cea44e1a951b37",
      "End": "2d454c2f0595497d8c34774d4fc1f858",
      "Id": "6b493b7057d646068896245a31ce47a7",
      "IsHidden": "False"
    },
    {
      "Start": "452f94b27bec4f8ab10649265ffa4a15",
      "End": "11621abc122647568a8716094595c3b1",
      "Id": "cb53a9949c6a4274bb8ebbb4e218d435",
      "IsHidden": "False"
    },
    {
      "Start": "309266afcb6e4bf6848682aea2af0d8d",
      "End": "b43a2d993ec9421782f87f036f663ce4",
      "Id": "7b94569156f04a19aa0c96c922c6a83b",
      "IsHidden": "False"
    },
    {
      "Start": "09ed37ca77524e75b5ca0071e42f0258",
      "End": "cf58a1f8502f4a8199c40a6be67aa3e2",
      "Id": "ce50741941a84bacab0b4a2cc99b6845",
      "IsHidden": "False"
    },
    {
      "Start": "0d2141f459ef4b60ae074cc96e736b8c",
      "End": "3b8f7ab79653460ea554c3db5f48ce30",
      "Id": "d4962734cac2419aa0ea1891cd00f0be",
      "IsHidden": "False"
    },
    {
      "Start": "0d2141f459ef4b60ae074cc96e736b8c",
      "End": "0939ba070e074304bec7df76106d99fb",
      "Id": "11295509749b493c813f0cc6c8c7028e",
      "IsHidden": "False"
    },
    {
      "Start": "0d2141f459ef4b60ae074cc96e736b8c",
      "End": "227b514457a541469757219309683e4b",
      "Id": "2dceee5dc8194d108b199dd6305593d5",
      "IsHidden": "False"
    },
    {
      "Start": "98d599be25034319a33b2bc0b8deafbf",
      "End": "9cd1dcec1ce74a1a9d1b8cfa8ee84428",
      "Id": "8fdff2437add4e14a5a9cae36b48de34",
      "IsHidden": "False"
    },
    {
      "Start": "a89285a6559e40b2b3045e9a16283d22",
      "End": "966b492cc3f04a309ed3c9d1fdaf34e0",
      "Id": "5d13912fbca941d88a2096b418f41fea",
      "IsHidden": "False"
    },
    {
      "Start": "55f7b934d41940d29ed583907ec54905",
      "End": "8466aa928ffb4a8cb687d6b0afa3c810",
      "Id": "273b7a3cfae84a97af2c7a6d1e4fddb0",
      "IsHidden": "False"
    },
    {
      "Start": "ae4afb8a7e884caa9f6b81a803b65bb0",
      "End": "e387b29052ae4c819ac2039365d5591b",
      "Id": "410908c4cb8943da87c6d806bfc26ef7",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "d6d21f84d6f0411588b4f91afff08b73",
      "Id": "3dc32907022441c187a3a93e2a762baa",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "e3811739e38f4bef82b6707ec32b70e1",
      "Id": "323fc108ab3c4f74a7b4e84f02ccba97",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "7a5f9f2a862a47f6bec46b9447518233",
      "Id": "bf8870eb0fa4481eba77df71917ac641",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "d87d21bf01604afa82434e8aed0963e6",
      "Id": "a8b5dfc4447345998085c290b3b8c541",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "4cdb1404c6a34512b42d3fc089f9337c",
      "Id": "1b2ace0c4c594daf8bb0c34d91654428",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "efaf22d3df9247449b92155a8a291748",
      "Id": "db66d9b08cd248c8a26c234bcd619b70",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "b329afb3eed24846900d403e4a446aae",
      "Id": "51ecf3fa9e5a441ebef2efb45e80be8e",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "cd90a44ff61b43f29cf9b498641cbdd7",
      "Id": "30d5dd18baa0411a824dd675c924193c",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "58bd5cfb36ea4654a0903c6eb58c2678",
      "Id": "df00a040acf44c6db15ee2fb80eca214",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "91acacf30b294e31bc2c87f6b4c150b3",
      "Id": "b83fae58469e43519d95e973d3e2a7ed",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "bdeb808a93a24dedb389bc0974fc8371",
      "Id": "9cc328a2f1eb46eb88ed53ffbc165df2",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "27c97f7e9d4c4495882808ce99f5b0e3",
      "Id": "d7888a1d1bf34ce78b495a876c6e8d8e",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "e8cd62f178584c09b3a12b26991803de",
      "Id": "15fec13884be4e24896c187e163f5b23",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "9ef7ea1ed1d7455d8a42159b2fc6ed7f",
      "Id": "b8c7074eaaa34b28b28396a37afe4215",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "f1e754ef6d124d6fa9037622a5c17ceb",
      "Id": "724d5d8b819945f6ab50524c0c001717",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "5817af1443214d8b9226fa85d638e198",
      "Id": "aac944bf3af04c3897d338de0919279c",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "fff01709a301434a9c027a4971a7dfb1",
      "Id": "c9c8f17f5f2148b4a83a188bcd8ae60a",
      "IsHidden": "False"
    },
    {
      "Start": "2ba5f593919847e583076da65a63f5ac",
      "End": "78a4ca679e9243dd8db11445f0436648",
      "Id": "33d852c6a2364e87b901dfec1df4a9e0",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "19642d51b9194788ada856521392a8d2",
      "Id": "27b5d60c96c841afb828b449c9ba605a",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "51d16db2ab254a0abc192687cf8734ef",
      "Id": "437b21f18e704f9ab21ff8351bf05234",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "76a2b6ad1b504e169122cf54a70a7124",
      "Id": "9578701f976a429f95221fb4fde9176d",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "eaf3c12f72de4a379531a5c33dc09b9c",
      "Id": "519df68ff7164d9d8275909a148054f5",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "8925fa4fcb0842bca5be5b211f123bdd",
      "Id": "a40927b1894a4c87a43556a579ba90c9",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "6ecffb608a6145a290598f0e46e5f7bc",
      "Id": "ce004ee73d804d61a5133ef1aab521c4",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "a40d492958fe476b92afcfdf6139d8d0",
      "Id": "cf134ce71fdd4558b9aa1949481eee75",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "444a99f2eb4c430aa9cd371030de1351",
      "Id": "4939fd931cba439c9db5bb91dec6a27a",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "e64a1ef5f43b4be3a0aa8f9b19e4cd69",
      "Id": "c30c4a155cf94faab9a30f9490ab49c3",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "ae9af7c1b2d644ae99e2a23ffa8ea247",
      "Id": "920317a1c517413ab09ce3ac83dc904f",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "7971fa9ae9914e80b4c414197ceca61c",
      "Id": "e74dad9370b040719556b197587f67b4",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "74036217c2b44809a098669efef5afe0",
      "Id": "f13e39d2b47f44ea9db202487e00f0c2",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "731408126f334310a37a30453adc8164",
      "Id": "0187844d9e144f6586a4942d24f45f03",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "a0ad3082c7c9438f98dc46f804cb8ce3",
      "Id": "869148ead627405aba5ee6ef79537bd4",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "bea12bb855494c2f9eec2d3d98e29922",
      "Id": "b44436b717b04c5b8400fdadbdb0584a",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "e1a9938594354729a198317f55528aca",
      "Id": "c40f951d9ff445718aff12a4c1390f2a",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "d4c00dfcfc54407b9ad7c394bb88f667",
      "Id": "659b825124cf4a31bffd7e9168c4ea20",
      "IsHidden": "False"
    },
    {
      "Start": "efd8f9c22ca242c18a841e3e33338e96",
      "End": "ae6bc93ba69b41f59e3f7b0807647a93",
      "Id": "509502bf19a44e40b38d314387ce55c0",
      "IsHidden": "False"
    },
    {
      "Start": "64338fb3339044289b85dcc8763c74a9",
      "End": "5b83b079ad3441e4ac4dcdc33bc1499d",
      "Id": "d244ee858e564be79f8fcf0a9aeb5b2f",
      "IsHidden": "False"
    },
    {
      "Start": "43cd98cd2eca41ecb6986748829444f3",
      "End": "3a2f2c65ef0847f193c1fb97a608ebfe",
      "Id": "9e11f64b6ac24a9fa215d4781c0640e4",
      "IsHidden": "False"
    },
    {
      "Start": "bf71b7b7646c4c6c8474ab57282532ba",
      "End": "7c4a9831aa1b4cf2981a71283cf1dc09",
      "Id": "5070f19d59eb4f75a97d5a20f6f16059",
      "IsHidden": "False"
    },
    {
      "Start": "4dcfddbfae744391b9fbb4c6f37566e6",
      "End": "2877429195ad45cdb05dc6216127854d",
      "Id": "d13aec1ff42f441b8ba2f16356c572c5",
      "IsHidden": "False"
    },
    {
      "Start": "cbc4dafd950b493d8bdea7daa85c4c54",
      "End": "12215c8fda7e4c3693002e45042c1c08",
      "Id": "5812bfd29e0240549f068c2da04b7ca4",
      "IsHidden": "False"
    },
    {
      "Start": "85e19f1d2649444fb0a3e5bd902d21d3",
      "End": "ea66df83440c489ab62fdfe06e351729",
      "Id": "7774974d95da48b7bd1949c838f1d5bb",
      "IsHidden": "False"
    },
    {
      "Start": "5add8125ca4d4fd78bb2a5d5864151a7",
      "End": "27dd7545114846b8a6b9ff5a0d38b29d",
      "Id": "0b5fe172f0364ca0a1f50b3a165bbd25",
      "IsHidden": "False"
    },
    {
      "Start": "6bed47d66add45d1bc84b9e3b3756eaf",
      "End": "a60e447fd696463ea28de1de70200252",
      "Id": "a9ebd8d8058c4f96b5b17933b66f6453",
      "IsHidden": "False"
    },
    {
      "Start": "23026bfad5f84f1cb84a61c1dcfc70e9",
      "End": "45e59355bfcd4bf99529d04df56050f7",
      "Id": "4175f900534143f4b6d0bd80b23c3cba",
      "IsHidden": "False"
    },
    {
      "Start": "415d6333501d478a991bd96e94cc4e2d",
      "End": "be510fc8738b4f86ae7299f89b58bf81",
      "Id": "f9d99814bdff42c7ae7145c9de520f53",
      "IsHidden": "False"
    },
    {
      "Start": "fe95177512174bf1b9f9b9c02df0be09",
      "End": "778bc30bc37f4ee7b97f2ede3c2d4ac7",
      "Id": "4a7fbfdd5c1342e793cb32eb7db432f9",
      "IsHidden": "False"
    },
    {
      "Start": "35b7002e2c7848d795cdf26a90793847",
      "End": "a84ec70ab2c34d52a9a4b4e6dc3d2344",
      "Id": "e7d3db4de1d543cf960c19c5938026ae",
      "IsHidden": "False"
    },
    {
      "Start": "ebbee14b15db4e098e3ddec7fd0e7d13",
      "End": "e10b8b0df6c24cd2b3909885c162f4ca",
      "Id": "b7dbfc619b0a4c5ab9e3ba77fef8e56d",
      "IsHidden": "False"
    },
    {
      "Start": "f62ec8aa36634bf7bccf14b6565643af",
      "End": "db4860f7b6ce4301b16d5d20835fcf7e",
      "Id": "cce629c37aca4ee09c9d484635a20177",
      "IsHidden": "False"
    },
    {
      "Start": "1632ea6a569141ba9c7ed823b8d9496f",
      "End": "977963e71efe4bee9c6b4c652e10e0d5",
      "Id": "0b5e047825b34154a6b8d4de98be14ea",
      "IsHidden": "False"
    },
    {
      "Start": "730722ce8e72427fb846c00aa75504f9",
      "End": "7b52de3331614d07950b97a72c094294",
      "Id": "3db6b03a6ed443f0b957c30d0e64961f",
      "IsHidden": "False"
    },
    {
      "Start": "2f0ca51053a740aab819206111fea154",
      "End": "9a4707deaf1b4ccc9c0c979bb8dc2366",
      "Id": "e780821d59e743468b5dffad30bf69ab",
      "IsHidden": "False"
    },
    {
      "Start": "df94c446918649bf8594381c395dbdeb",
      "End": "ab94152d585c41c09a61f847bc211a61",
      "Id": "89c0bdb2249d43aaa9e2328d2b0a1f88",
      "IsHidden": "False"
    },
    {
      "Start": "fe4a408445864c23952cfc5141456aa1",
      "End": "97568d47214e456cb1afcc728cac318f",
      "Id": "a1baa425a64743e78a5290d789e1d809",
      "IsHidden": "False"
    },
    {
      "Start": "6836ec2cc494463caa05cc018de6f6e4",
      "End": "29c24ad1f9214cd486d23c037f1da055",
      "Id": "820d673e0963432bbb0d291d23de3a67",
      "IsHidden": "False"
    },
    {
      "Start": "f6835ffe2a124d789060cf66f0546bdb",
      "End": "b78b0a1589c341808a51804e71c5edc3",
      "Id": "393375d9bbd947e6a3461fcb6aa5862a",
      "IsHidden": "False"
    },
    {
      "Start": "3b93418830c84c5ebae3fcc46f4d4ab9",
      "End": "c6f3d9fdc75e4040985c3ed9fbc4a5ed",
      "Id": "b34ceff0709a4e30a0f8504d00fe4dcd",
      "IsHidden": "False"
    },
    {
      "Start": "4c9b45001f2e4255a772da8e584ad8a8",
      "End": "35509073ffd74fe3aa61ef2c0d0d11d9",
      "Id": "7d217b452b4c405e824a85d527c26f4c",
      "IsHidden": "False"
    },
    {
      "Start": "cb3402334c344a02b58c63f0d0ec387e",
      "End": "4eb8fe799cde48a7bead35c9ffba2099",
      "Id": "7a1e6d4fc0ca4689816f1b985273119d",
      "IsHidden": "False"
    },
    {
      "Start": "ced27787af58424b90ee0d1fa9c1918f",
      "End": "e01f845ed27a4874931102566cbcaac0",
      "Id": "cb2d6573a0bc4238996f4421e655036c",
      "IsHidden": "False"
    },
    {
      "Start": "7e64c2437fc3479392651093a57dc96f",
      "End": "20cda17e32db4efea12b7deef6194133",
      "Id": "965d9d9f87864d69b9a86435be4974c2",
      "IsHidden": "False"
    },
    {
      "Start": "149dd32b467242d69d09b8046561f397",
      "End": "b7ad0a75704c4994a25a71bcda5e2011",
      "Id": "b4bcd058d2c84ec08cdc4139c700656b",
      "IsHidden": "False"
    },
    {
      "Start": "d3c61b5708234bdfb41d2aa86dfa3506",
      "End": "9c324e7df47e4599b23b05b1300996b5",
      "Id": "ac3a6bf682f74355aaed3917468c381b",
      "IsHidden": "False"
    },
    {
      "Start": "c67316c831e4453ab954c8df183c6891",
      "End": "ecff4f8dc00a4fb388bf471784edc9ad",
      "Id": "1f5624e1d48440348d7ca2de8696a5a4",
      "IsHidden": "False"
    },
    {
      "Start": "c67316c831e4453ab954c8df183c6891",
      "End": "6708b811eb2643e7bd15fcf14a15360b",
      "Id": "21bd440675234a4c908fc9de9e4d858c",
      "IsHidden": "False"
    },
    {
      "Start": "d8d7561f15fb4dc2afb386e3d497d441",
      "End": "1f77c4b2c524443fbd9c214aa767fbf4",
      "Id": "66ed3c94ad13443bb1616df22552cedb",
      "IsHidden": "False"
    },
    {
      "Start": "d8d7561f15fb4dc2afb386e3d497d441",
      "End": "ec3fa9ae171442979d22f042a2de5673",
      "Id": "551504f8666d411e908d4ab7fd849c55",
      "IsHidden": "False"
    },
    {
      "Start": "c4518fc096634c2788498766a8f8d151",
      "End": "e2ca0ade7e0a482b96f684938d9bdf28",
      "Id": "2354ab3a288745a0bcb2e637c0fa1257",
      "IsHidden": "False"
    },
    {
      "Start": "ad9e7bfbf9c64f0398105c55d0143b7f",
      "End": "8e4a7dbc9b3b4e9fb42cc0de61f1fa5f",
      "Id": "55166326e9d0424d8eb911fc48727afc",
      "IsHidden": "False"
    },
    {
      "Start": "05b3a8988c554df68aaec7c91a9eaef1",
      "End": "c61fc73523704a7abad76e316f1ec426",
      "Id": "916f80f75dff4a2d8603438681eef3c1",
      "IsHidden": "False"
    },
    {
      "Start": "94affb5661c3419fba3fe772f169bc9e",
      "End": "7faffadbcc8b4a0b987e61c063641b97",
      "Id": "84768a33282944feb8700a03d07f10cc",
      "IsHidden": "False"
    },
    {
      "Start": "747800ae7060443687837162417d9ef4",
      "End": "531c767fceb24b2f8450fe5fe495682c",
      "Id": "e02b5a5d540a457188a6ba777397e3bd",
      "IsHidden": "False"
    },
    {
      "Start": "1d93788207774876a13221c777c1f643",
      "End": "3c5fb72a67f24b61957a7a485fceaef0",
      "Id": "f7d01726e20b45509107177dca3eb0fd",
      "IsHidden": "False"
    },
    {
      "Start": "7431de6b03ca43fca7f880a6852f863b",
      "End": "3defb7266a704967952c8b3464880b52",
      "Id": "f5ba3837e0fc4d7fa188f7cc09c9a2ea",
      "IsHidden": "False"
    },
    {
      "Start": "df24e0f45c59428dad3a72626c290f17",
      "End": "cdd3ce72466c4cbcbef0f4bc25e0b1f7",
      "Id": "88e6b212674b42688e79e39f7d917d4d",
      "IsHidden": "False"
    },
    {
      "Start": "a620b27fcc764d439d77cdbedda07c7f",
      "End": "713f1b8dd93b42e1a9ec6a428c97ef08",
      "Id": "b4d14e7d96ae438bbe4d2473c6c9e76a",
      "IsHidden": "False"
    },
    {
      "Start": "a31adea549c442c6be22b5f4c2547635",
      "End": "1fb33586526a41339fbd4505ce5b05f7",
      "Id": "51cd71879ea043a5863f284542bf530f",
      "IsHidden": "False"
    },
    {
      "Start": "807c2734af1f4ca3871f42f9e73512a9",
      "End": "0c9f0e0936e84e3f8ce92e68e040fc2a",
      "Id": "8f8364997d5b4562bb078fc4b158f570",
      "IsHidden": "False"
    },
    {
      "Start": "446cb3cd2956464da9e174e88c316f5a",
      "End": "207d34f6dc664dcda90a43155afc96f3",
      "Id": "2c33777a235c49488ab0d5cae69c87c4",
      "IsHidden": "False"
    },
    {
      "Start": "13fe21dccce94833ac579fd3de2dff19",
      "End": "05fecb916e444a92a2433de7550e316b",
      "Id": "542e0d547a21401cb280fa1c6e6b3e5d",
      "IsHidden": "False"
    },
    {
      "Start": "bc5157f339dd4421993274ed02eb1507",
      "End": "158628bf8419489eb11ea8e27d2e2562",
      "Id": "b195576552ce418980804109823654eb",
      "IsHidden": "False"
    },
    {
      "Start": "aa5cc05d96be46d8b5a5d7bf50457da8",
      "End": "76cd11a306f84953942c1ca4851addb2",
      "Id": "57b4721135804c2886818ae849b5e6d8",
      "IsHidden": "False"
    },
    {
      "Start": "f8921a03707f427e9376177685c60fcb",
      "End": "293fe6aebae84161b648fec21ae1b289",
      "Id": "d201bd2e40544755927a279798db06e1",
      "IsHidden": "False"
    },
    {
      "Start": "20fadb9dc1d14a818956a01da221709e",
      "End": "4e8fe10362684e7d937fdc7c7600902f",
      "Id": "aabed8f5fc814d9db98efe552ed51329",
      "IsHidden": "False"
    },
    {
      "Start": "24e0f087d68f4e8f84f1b9cd9872a863",
      "End": "4902e46b2fd446f3a271a224ab89ab86",
      "Id": "c5e95fbc77c5418fa5ece609501b6948",
      "IsHidden": "False"
    },
    {
      "Start": "76d3505437824268a22184ee6386c8aa",
      "End": "2ba02a8317804e3fbf98bc5a4c84e4db",
      "Id": "b8167df4be154ea2bda9dc42adbddde1",
      "IsHidden": "False"
    },
    {
      "Start": "040ea221e16549e38e4715ac98b4bc0a",
      "End": "08ec1cacb96c457aa477ee374e7f4d5c",
      "Id": "66f9d25b22c34ddca25110d1859bc94d",
      "IsHidden": "False"
    },
    {
      "Start": "7d44fc8b2f6d4c7ab76cf1649be7d6d0",
      "End": "8177246130c646ada9d5704187356829",
      "Id": "002e42341de6425c85dab8b893ed857a",
      "IsHidden": "False"
    },
    {
      "Start": "2ed078c54afd4717a27614745b327905",
      "End": "28c1861374e04d23b40de065860a2e2e",
      "Id": "d194073bd5c94384ba97062a6f7ce269",
      "IsHidden": "False"
    },
    {
      "Start": "ecbc9f0f134c4400ac391074372ec7b4",
      "End": "5291dc28e75f4c229f75973bbee05256",
      "Id": "f489ebc55a0b41ae92597267a0bb6787",
      "IsHidden": "False"
    },
    {
      "Start": "1b90ff369ce4423c9c2399a45eea10f4",
      "End": "085d141a67f246c1ae8293365c7189d0",
      "Id": "1faaca7897854bca96e27b428d9e5673",
      "IsHidden": "False"
    },
    {
      "Start": "62b605c439eb46be81688b7639e5d624",
      "End": "5aa962e3ee794e34907b3b6e6edf6384",
      "Id": "277f117f451d4ea2b357fd89b76d8458",
      "IsHidden": "False"
    },
    {
      "Start": "cc0ff2aca2e649f091d1db1f0eb48c4d",
      "End": "144bdf50b1da4b3ba6e20624306a440b",
      "Id": "59676c82a8b14cff81797cd5ab29b2d1",
      "IsHidden": "False"
    },
    {
      "Start": "0a58b7d1da1a483e9a21e21f43ff286b",
      "End": "1ab147b5fdcb4830946d8507e39316c7",
      "Id": "c14241b02185408a85ebcd89fe0647cb",
      "IsHidden": "False"
    },
    {
      "Start": "ea15601006f24186a072619461aed51d",
      "End": "cdd3e9ebf01245e59f645712fe076af6",
      "Id": "9d0991ff26944bb28b6e332e3ed09725",
      "IsHidden": "False"
    },
    {
      "Start": "2693a6028ea14977a41b1bf17c48d068",
      "End": "b8b8b6532ef04954ad36d2deae769773",
      "Id": "3de93b55dffe4280af6837d7e6f56c1b",
      "IsHidden": "False"
    },
    {
      "Start": "e95f28cd484e462ebac8c2fde0eabca8",
      "End": "e681769801724a6ca1dddd9dff8a2403",
      "Id": "d3313b1b0ddb4f42b4048595a0e199bc",
      "IsHidden": "False"
    },
    {
      "Start": "10f39b2692dc474a940d95cee5e569db",
      "End": "5ce61fbd64af4ac68cccd9e9d1700bc7",
      "Id": "3598229e96e444638a7c725a08eb45b5",
      "IsHidden": "False"
    },
    {
      "Start": "b68be9ad28314d858759f760880a16df",
      "End": "d0dbc736ed9d4fd393977641fb49d03b",
      "Id": "ca42ace2a7d64bfc81ea819927c3fa7e",
      "IsHidden": "False"
    },
    {
      "Start": "67fad6bcccff462098ccced47f65e3af",
      "End": "cfd200da00494ff584d652ff7851b583",
      "Id": "7e81d0045f4e4a22aeea6b4a3252388b",
      "IsHidden": "False"
    },
    {
      "Start": "c8803f34493e45b5832e4b86eac906e3",
      "End": "e7f429e105fb4b64985b248bbc7692f3",
      "Id": "6a8f597cc1b04a7e820677e3ce2f7428",
      "IsHidden": "False"
    },
    {
      "Start": "65cdea81a9f3407197f97c2d477407fa",
      "End": "a9cdc6e5505f4f1f8253fe3d28bcd51d",
      "Id": "90caa91000914b239ba99210f425218f",
      "IsHidden": "False"
    },
    {
      "Start": "f61c01d42f51441bb80244449107a6ce",
      "End": "bbcb58d98fce450d94bc39cbcbb0eb5c",
      "Id": "572156e26b6742949a028e3e3e776c7b",
      "IsHidden": "False"
    },
    {
      "Start": "888bb394f81a483290687b8709ab1b9d",
      "End": "d3f17ae4e1dd4c639d2ba9165e3f2088",
      "Id": "e75db7aef7174898898b7c4a5434e37e",
      "IsHidden": "False"
    },
    {
      "Start": "ccb94367e06840d98aceb0bbc3c59e74",
      "End": "4447d4bf5ecb472992c9b47ebbc87b4e",
      "Id": "765354fef9da4dc887415984c06afb1b",
      "IsHidden": "False"
    },
    {
      "Start": "05543da39e674456a0fdfcaec8c38a93",
      "End": "c0199e2c8cc34dafa782e0cd0999975e",
      "Id": "b0d7ed8e2ec043b9b91d288d54b852b7",
      "IsHidden": "False"
    },
    {
      "Start": "667737d843fc4f59ad5989ab0b08f499",
      "End": "5653dcf7d9a94268b0b207c98a0af9c3",
      "Id": "dc44961741a54f24b8de2f226a9c9502",
      "IsHidden": "False"
    },
    {
      "Start": "1fbf58d07cd44c3599cd6d726c313720",
      "End": "a9767274fbfc4c2e8b0fc4aeed18f532",
      "Id": "cfa41ab6af1240229759b64f18b1d528",
      "IsHidden": "False"
    },
    {
      "Start": "3a6eb4bb93e049e9a4bc407a1ed2d814",
      "End": "bdd8bcff997a4ee3989e3a2e7fe62e79",
      "Id": "89fab2c5dbd84e2bbec367720fc7bc8f",
      "IsHidden": "False"
    },
    {
      "Start": "332c1ceee1c7406c8b71e78d85129032",
      "End": "a2fb84b48b17484e9a7da84d3e3e4682",
      "Id": "76d105ad14e645e2845b155c6e0d4e6c",
      "IsHidden": "False"
    },
    {
      "Start": "31bc9408d09f421ab0ed700acccf75f6",
      "End": "fa66bdc216ab4b68963420c8e918491b",
      "Id": "20be9f78b4b24855a50c3b10f11fe764",
      "IsHidden": "False"
    },
    {
      "Start": "3a35ffd4708046ceacd31f04c9c6d66d",
      "End": "1fdfa5a9d56d4ab0ac1d7624aceb3d9e",
      "Id": "1d386b21456e4e92bbf99f6530008d88",
      "IsHidden": "False"
    },
    {
      "Start": "e563290ca4bc4521857ddf4ed726ba7f",
      "End": "4d9fd48cd28b4965bec8c182c5649ba3",
      "Id": "5e10bb4626ba4c3d9e29228bc2132e0c",
      "IsHidden": "False"
    },
    {
      "Start": "2b6f1061277f43a7b71926230d3fbf7a",
      "End": "e8bd747762fe4af88d0bc7bea3fd4a59",
      "Id": "b4319d152f814f2cb9498b547969d6d3",
      "IsHidden": "False"
    },
    {
      "Start": "e86157bbcdee493198927cd8a9976809",
      "End": "41ac1f444ece49c795fb9b16adc27af4",
      "Id": "963759b2537c4dbd8ead495d72476f33",
      "IsHidden": "False"
    },
    {
      "Start": "76d1db60a6c64b7892ef5585de7a9e9f",
      "End": "1b307a90dd654810a9363f50547b9cf0",
      "Id": "4511c22b6d7f48f4bee1af450ac12638",
      "IsHidden": "False"
    },
    {
      "Start": "57ac30889e03498387e6d11e2b0b419b",
      "End": "4cc35d2fdfd94124823eb3168a5ae13f",
      "Id": "128539e3faed45009ec2af12c27559bb",
      "IsHidden": "False"
    },
    {
      "Start": "db10e47cef6a42ecaf3a81678a3bc65a",
      "End": "bca5ec30b21746668a31d398322347eb",
      "Id": "bcca9e6316ed415cba8b9949ff81c109",
      "IsHidden": "False"
    },
    {
      "Start": "3ac9f577bd40427faf79aa8acf62def7",
      "End": "2cb35e66b1654e29908eab4a7223ec1a",
      "Id": "119530b3070146eb9bab2908e49c194c",
      "IsHidden": "False"
    },
    {
      "Start": "71682c17cbe94a3ba4ea207593d25517",
      "End": "4f3776147fd24736b75e15f03122d533",
      "Id": "570c82a25c77404d8cb7e122201a0aa0",
      "IsHidden": "False"
    },
    {
      "Start": "909b750b690647d7ab361e66547f7def",
      "End": "80a916aaea5443ee9212c85355c9108e",
      "Id": "6a64ecf7e5ea465885b2f465fd47f102",
      "IsHidden": "False"
    },
    {
      "Start": "33598626ae404738ad7b41104bdf1f2a",
      "End": "5940aeb89f2f46069fc50b16b90b51e5",
      "Id": "7e1143b0bee6498ea8e40e7740c78f6f",
      "IsHidden": "False"
    },
    {
      "Start": "67bb70465f1442279a1c258b73241409",
      "End": "eb8a7f31cd9f429a885315b7299210b8",
      "Id": "b518ae4dd81b42258e3c2ba3d718b83f",
      "IsHidden": "False"
    },
    {
      "Start": "7dd21be736a84311bd47ac5975e5c942",
      "End": "28819a0827604e69a7c98df7150cf688",
      "Id": "2242ac8b1e92459ea9b31d843ae8b345",
      "IsHidden": "False"
    },
    {
      "Start": "62db3cbdacb94a86aff1cfd5adcdadd6",
      "End": "56c53132ff454743b73c0195520415bb",
      "Id": "2f5bba037024481994c4f0373ba39b64",
      "IsHidden": "False"
    },
    {
      "Start": "1cfb666fa2c84c91b802b63378ae23da",
      "End": "e304ab9145404ba29e3e74f492fee236",
      "Id": "e4ccd5c550de4338965aa15a223f39cb",
      "IsHidden": "False"
    },
    {
      "Start": "e2cba4ef71884ff9a0a43a8b91d69948",
      "End": "9a20cb9b62a449ecb1a4af0cfcbb8b93",
      "Id": "42b21ab33d6940239821d6b1d859bae8",
      "IsHidden": "False"
    },
    {
      "Start": "5d3399e769034014b3f4cf998bb396c6",
      "End": "ef77791abb5c42609d3463a64238eed3",
      "Id": "84e61ca49ebe45c3a9d318e6340d0e2e",
      "IsHidden": "False"
    },
    {
      "Start": "c7fe86f178dd43f5bd5da5bad0a9337e",
      "End": "06e33728371948369531d7728a349e8b",
      "Id": "1710c5653e43464ba77d795c91824ff2",
      "IsHidden": "False"
    },
    {
      "Start": "8bd57113b4934ff1a5296d60e2cd6afd",
      "End": "954275315ab44aafaed4eff4de50368e",
      "Id": "62ba85a44a334cb9b4cfc26b91207390",
      "IsHidden": "False"
    },
    {
      "Start": "5198264ffbe84a05b2e5e81d5bec497b",
      "End": "1ce87585c4e5468d93ebdd7563c64168",
      "Id": "4e52e4151dbb4b749662201b1a1083ef",
      "IsHidden": "False"
    },
    {
      "Start": "1e996f9a6e6d4ab286d52a5d7adef7e6",
      "End": "f4e59b0a7fb74f439861b4c74d93cf16",
      "Id": "fb260bc3b6bb4639a546c6c22cefbf56",
      "IsHidden": "False"
    },
    {
      "Start": "4e51179cbb664beaacfd1fdae7d610f7",
      "End": "187c0aaf1efa4a40aa469b9194ca9a1c",
      "Id": "013a44690dae4f6db5431a6cf8d44d75",
      "IsHidden": "False"
    },
    {
      "Start": "fbd148aad6024244ab591b1a030cbdba",
      "End": "7f101e6e94194011a1e53a47deb0ec1c",
      "Id": "b7bed430893d40b6bfd78b0045d40d87",
      "IsHidden": "False"
    },
    {
      "Start": "1af311c06cf44d2bb6a592e03c38312e",
      "End": "d5f284f1052043ce83f0964cf5618c47",
      "Id": "75ffa05b5ca74140aaad11d3d0660f34",
      "IsHidden": "False"
    },
    {
      "Start": "43092769fc6b440290baa916bd206fce",
      "End": "b18b2b861bfe4b9b83021c919870dc97",
      "Id": "f0548ce4bde54775a25cf482ae5d0df5",
      "IsHidden": "False"
    },
    {
      "Start": "2c01317764dc4542aed4aa6fc93053b2",
      "End": "f599b4f7aec54492a806282740a31e66",
      "Id": "ca8af482ae4842458d4645b05784e19e",
      "IsHidden": "False"
    },
    {
      "Start": "9dc8b3a8514c43ec8f2610a4437a79fd",
      "End": "f3d01fad9cc2483796f873dc307b17fe",
      "Id": "ab52ba7eff5a4018ae3f5e3f9a1e25e8",
      "IsHidden": "False"
    },
    {
      "Start": "39d45481e31d4156a9cdf253bdf6edde",
      "End": "5585c2e82e1649d5be6e8ad61fd5ad83",
      "Id": "98d1c0c2886c448dba3e80452e38046b",
      "IsHidden": "False"
    },
    {
      "Start": "abebb361f7b340669ea26333f3040d9f",
      "End": "0dcd4b0338e54b588b7bf69d3db370c1",
      "Id": "b40c80f2e9f240f1b8052b4c94672184",
      "IsHidden": "False"
    },
    {
      "Start": "478a558b724244f182a737acccc95bbc",
      "End": "11659ae0463944dea54c823536f54173",
      "Id": "f6645fa643c34910b1f2ff819f76cada",
      "IsHidden": "False"
    },
    {
      "Start": "16d989b9fcca481fb23d118d15e551cf",
      "End": "e9586dbcd2aa4ce086b88456dde9eef5",
      "Id": "6155bffd17674cd6b84194f19fb31c62",
      "IsHidden": "False"
    },
    {
      "Start": "3d0b5433e0494f5eb7e08341c5fe2d4e",
      "End": "da690c65e17e4ba5bb6ed39a74df62d4",
      "Id": "5343271a48d64dacbc444a8428b218e4",
      "IsHidden": "False"
    },
    {
      "Start": "4da96fd4549348f3aaa57967d5c4405c",
      "End": "de6925c2c541479f9293beb4a2d38d9e",
      "Id": "7dbb17cbeb1841f592476dba077c8979",
      "IsHidden": "False"
    },
    {
      "Start": "59ac2e5d056146a99555e9aa52adeeae",
      "End": "431611a9f58a47e587b84f27d6cceaf6",
      "Id": "356cd55cabc24e4c913a45495aca6bb7",
      "IsHidden": "False"
    },
    {
      "Start": "4990ae326baf4b209097e0ad0e0ef88f",
      "End": "a0ddce5f26d04a8297ab730900ac0cbc",
      "Id": "c7f076e0353846b09ac5cbc30091ea29",
      "IsHidden": "False"
    },
    {
      "Start": "b2bec77d53da4c3b80ffb892d041994c",
      "End": "084ab3b3e7124a02883c80d5539542e2",
      "Id": "5ede6a785075433ea69a6453005b379d",
      "IsHidden": "False"
    },
    {
      "Start": "f9a3e6c2ee7f4ddd9c5f1edf6ea8f715",
      "End": "8c89e2cf163444b7afc4ff01eaef4bf6",
      "Id": "de9d65afd7a245b19fa783dd5a6489f6",
      "IsHidden": "False"
    },
    {
      "Start": "db8993266fba441d8dc849265392aa24",
      "End": "2b454b6ac8bf4448917dfd8462bc52bb",
      "Id": "e34d77ea0c4444d2aba151d4ec781fb3",
      "IsHidden": "False"
    },
    {
      "Start": "fc7c6d8b8ccd431999bcddbec370eca9",
      "End": "e72facb3251a411cb3ac204f45d23683",
      "Id": "db2288a07e8747ec8261d54faee42849",
      "IsHidden": "False"
    },
    {
      "Start": "bf0fedf6d19244bf89d11af7f7684937",
      "End": "ce4490ccb5414a12a4918f57708b3a7c",
      "Id": "dca6feba7809414abc2db1a612efa47a",
      "IsHidden": "False"
    },
    {
      "Start": "e666b01d0d5a4213b5c72f61d6c0ebf5",
      "End": "260ba2094bbc4ea2aa641a23fba15bee",
      "Id": "e89496acba5245d794f923483ea192e8",
      "IsHidden": "False"
    },
    {
      "Start": "2219c1ea150549b2b51882b18182ed4c",
      "End": "f88be50ed8a046fa9634dadd73253efb",
      "Id": "1fa145b4ddd44c3b84133854f89c4f6f",
      "IsHidden": "False"
    },
    {
      "Start": "a844db8cc16e455795141fcaf30294c8",
      "End": "85b12e2e575f422c9aa676bf76d62a8e",
      "Id": "5e6b2f081a01434ba97bf2affcf12ee6",
      "IsHidden": "False"
    },
    {
      "Start": "3443712ade0f4727a19dd6ab35654c56",
      "End": "fcbfe8c3997d46dc848a85dd503523d7",
      "Id": "8a9de436aef54b65bce591df536f473f",
      "IsHidden": "False"
    },
    {
      "Start": "40273dba36c942a8a745a32c73234b8a",
      "End": "2cd366831aa04a869f4df406bd23499b",
      "Id": "b830871a76164108b58fa3261bf0b206",
      "IsHidden": "False"
    },
    {
      "Start": "ad7e279122d64cf494afedcd38f9308c",
      "End": "38088591c3ab4c9e8fde24db89e58e94",
      "Id": "053aa67ff7b846f09bfb76c8fddabf78",
      "IsHidden": "False"
    },
    {
      "Start": "a83d596ec16a4e8fafeab9849d5d2ba5",
      "End": "6ae10e1c67fa4d3997e98a508a779b7d",
      "Id": "9bf1ea0299644bbe9e44d31383811d05",
      "IsHidden": "False"
    },
    {
      "Start": "15c16025c4194969a28afe4f769da077",
      "End": "e8d6f5fdb529489f96f2fdfe3d0944db",
      "Id": "f7fc04929ed94e9ebafa95420bfcdbbf",
      "IsHidden": "False"
    },
    {
      "Start": "d1492b00de5d4c07869b883229409693",
      "End": "291db59c84bc4feebf381f508002ea72",
      "Id": "e15a80120b5c46009ca851ccf196949d",
      "IsHidden": "False"
    },
    {
      "Start": "bde8d2826ddf490b8c66647bc794a85c",
      "End": "b4fd1a8ac0ef4f2b83a3e56c061ac5e1",
      "Id": "ce8ce73b6b86427ea870df9f5aff5216",
      "IsHidden": "False"
    },
    {
      "Start": "580094ddea254cfe856617d1011c158d",
      "End": "2181b3cab0674982b979d74c992ef70f",
      "Id": "9302b81e0aa1455aa571f35a3e82717b",
      "IsHidden": "False"
    },
    {
      "Start": "df134100cffa4c7d93883c8fd843072f",
      "End": "002cb85c541040f6bb4c0dd96c1f7d2c",
      "Id": "1cd22d4b42c04617ae073c009a290582",
      "IsHidden": "False"
    },
    {
      "Start": "c9a1ed787a1345dd8789d031918c1e0a",
      "End": "de3313871ded47b99b3a00695fe276ad",
      "Id": "08b3db917c0541e2b0bb631b4d0c7e37",
      "IsHidden": "False"
    },
    {
      "Start": "c1738ef5a41344e59fe595fc98dd0879",
      "End": "e604201d5fb34c75ba506189cf59c79f",
      "Id": "6d54397b39db4515ac39360872313f99",
      "IsHidden": "False"
    },
    {
      "Start": "0ba715fff3f64bc488dec966a2c41305",
      "End": "0eb7df9a2e444c83bca1df7166a65b1b",
      "Id": "7dbe87b32ee64be795b426e503e0c95c",
      "IsHidden": "False"
    },
    {
      "Start": "6360bb3985e24ab4a596a665463e5774",
      "End": "39b416f215b24390952d78242772fba4",
      "Id": "ce67ecbd0cc1443589e3bc31781b4c70",
      "IsHidden": "False"
    },
    {
      "Start": "2df2fe6692fd4c05b71fe4a62a8bc193",
      "End": "ae8d080ec6994ac98934ec481fe69546",
      "Id": "1270b20ba084424aaa4927ab193b8068",
      "IsHidden": "False"
    },
    {
      "Start": "f3b8a3d1a59743db830c5b83da095d94",
      "End": "c5ec18d8720e447daaa275c98d0b30b8",
      "Id": "082e0a2b44d04b1eac4bf6e4e7d469c7",
      "IsHidden": "False"
    },
    {
      "Start": "b0474965a39a42ac831f94615b8a29ba",
      "End": "45b36a1b0d954ea98818cb5ed99a33c8",
      "Id": "94ececb99c884769aac1d34bd91fd8d2",
      "IsHidden": "False"
    },
    {
      "Start": "95d39774eb2b412dba25decfe5d29218",
      "End": "ad99aea8e7e34780903820a3c1c74b76",
      "Id": "a3c5b52e121d44828c1b0c67dfa594bd",
      "IsHidden": "False"
    },
    {
      "Start": "abbcf3eb21ae4fa7a934d25e1e1a3123",
      "End": "d637f820b25741f7b46d3e5b931ce5a3",
      "Id": "486b374b00f0493e99d2bdd094aa1fa3",
      "IsHidden": "False"
    },
    {
      "Start": "a753e8464b834ffd85f4c3d85b802e10",
      "End": "c54fbe0228a9431d8d4bdf9e1147d832",
      "Id": "631bdaae0e3d4bceac5dc3ea1251d2c5",
      "IsHidden": "False"
    },
    {
      "Start": "146b2cf9ba0b4a0a83084a0e225d4e9c",
      "End": "6890ebbe29434153b6040b7305e2ee46",
      "Id": "39442e09c3e642a7bec3f91271d37d9b",
      "IsHidden": "False"
    },
    {
      "Start": "f10d63bd05fd46ba9f9f0a848ee322f9",
      "End": "fd9735cb4a354a2281e518fa950d7a30",
      "Id": "2e8409933d404bee8db1a962fe1d4c79",
      "IsHidden": "False"
    },
    {
      "Start": "087f5fb1427c40db9d61980db595ed16",
      "End": "54ae409aaa3a4b66b8e3f6023a24229a",
      "Id": "a094e66f58b0417481016552299086e2",
      "IsHidden": "False"
    },
    {
      "Start": "087f5fb1427c40db9d61980db595ed16",
      "End": "c0ca3df06dbf4193ab260e4fb5eb5490",
      "Id": "c65df603bae648bdb6ca7987411bc5ec",
      "IsHidden": "False"
    },
    {
      "Start": "b57cc0bd74dc4c67962e372271a43e78",
      "End": "b8ce7fc1d1f54ab5914aa659587575ed",
      "Id": "d3138562e39848fab6b25b59f1caec99",
      "IsHidden": "False"
    },
    {
      "Start": "2e06f6ecc00342e983ee255f825070e9",
      "End": "b48e17a5a3144032a8528fb9d7a5e9b6",
      "Id": "f4385219e4444bc2a664f59b2f10188f",
      "IsHidden": "False"
    },
    {
      "Start": "00a4d9d4e4eb477ea26d231701432363",
      "End": "03cefbd2bc3241338f0363fa80b14f04",
      "Id": "eca919e5504d4e74b8a07e4ecf7f2a59",
      "IsHidden": "False"
    },
    {
      "Start": "00a4d9d4e4eb477ea26d231701432363",
      "End": "1873fd50eb574f75acaec6b6ace0e999",
      "Id": "724ae0268d7e49ed8730428e25e89872",
      "IsHidden": "False"
    },
    {
      "Start": "dc32fb95ea7f40b396b9d5e63936b5fe",
      "End": "c18e1ac528c5473b94254a3e68a0d5ed",
      "Id": "aa8ebf23b70947c58189441f2a7cf4f8",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "ecce77dc-1290-438e-a056-970b256fd553",
    "5610d24d-04fc-4ef0-ba86-cd8215d14e9b"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "4.2.4",
      "ReferenceType": "Package",
      "Nodes": [
        "27d9a802f570423f8e26ba473110c061",
        "f7590613b1d5476d8c044b3ba03aa953",
        "bf6f9c335b3c43e98b2207d1b01fe2c2",
        "5f1ce0004cef400db75e51a9d10d3ea6",
        "ab80e451dba34bc6a2c8d9357d3599f0",
        "814d1cfbfc6f4825b4dd0a33753e6e5a",
        "5f3b4067b57149119c29a3c823eca7d9",
        "09204cee5213427ea72a5bae1ed7bf97",
        "2dc2b24018a94df98dbb6fc3812cafe1",
        "0292b2829e3e4f5f97b0ad7f2e3365c6",
        "9475894c57024487a1cfaa835e7e14fa",
        "8af2fda5aedb4cca936a6610218fd574",
        "993aaab29da340d39cb90bd621493010",
        "36b4f9e751c04965b515db8430be5619",
        "f8bfe4f6139742529d67c350d2ada456",
        "bbc3aada4e3340bf98021d9da40e1069",
        "6b0633cdec294b53aeedc83628173b74",
        "d6556b0795454668a764bdd8e7e13467",
        "9d1926a5abde4fd5966bceab45e52762",
        "a397d4d457e749a4886a5094eaa3ab77",
        "4d6479c8c7754602a2f3f679783d429c",
        "b513aa22cc5142efb8a310be8d659d63",
        "a827c4034987412eaa46b30aa1408627",
        "3185b823cb6c4773843ee154dc5ce91b",
        "cee39260fc2e44b2ab6703154202ab83",
        "41828dd6bf4b43bdbae2a4073d068311",
        "773cad87852c433f8e713caf7f84133b",
        "9d7ee6b1a3c2434da5f929ba964353d7",
        "d9b69177c07848f7b5e511121e584be2"
      ]
    },
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.4.0",
      "ReferenceType": "Package",
      "Nodes": [
        "f3d17641a3924cf0ae94adec8ca73e9d",
        "18f0f297ec524587a7afff655de8cc5b",
        "04d896ff8c4849dd8517f09e1f9d72c2",
        "a78e9b9b1f204d1db53d5f748a467218",
        "e443433d7cb741fdab71466c50fc4f0b",
        "10fcaeab2fee4a479de7945e94536cf7",
        "80fba511af1741f69e221ca5719d1626",
        "0e4962e6ae26407f9ba59ec221f9678c",
        "13e682914945410eb711ba3a341797bd",
        "b1b776c67ebd4331ad73597fe2b32078"
      ]
    },
    {
      "Name": "Sparrow",
      "Version": "2021.2.1",
      "ReferenceType": "Package",
      "Nodes": [
        "73e352e2385b4c2483ce2da4564c0e5e",
        "228e43690ac64d19b070695c40767251",
        "8e4dbeeb8dd64e959fa6937163548227",
        "09ab425b17224c6e9a045cc6548101ac",
        "1f07c63319be45e8b08127f48721cae6",
        "ebaaa66a34c84c1fb33fefafeadeb16c",
        "67b48e8456cd4db8ac18e8332e8f469b"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Propriedades",
      "Version": "2.19",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.1",
      "Data": {}
    }
  ],
  "Author": "Jose Nelson",
  "Linting": {
    "activeLinter": "Nenhum",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.19.3.6394",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Visualização do plano de fundo",
      "EyeX": -25.561657055200627,
      "EyeY": 59.138867718078373,
      "EyeZ": 194.8862332202159,
      "LookX": 40.399064536643877,
      "LookY": -43.765653248030844,
      "LookZ": -195.26214526044535,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "4d030244cdff41108dce6d340db3deaf",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 295.24112378396848,
        "Y": 246.89595718742424
      },
      {
        "Id": "152484bc5ea345878a4bbe2d5dd0715a",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 341.90392681355684,
        "Y": 868.14426120981113
      },
      {
        "Id": "27d9a802f570423f8e26ba473110c061",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1052.1590789467621,
        "Y": -79.393280962459812
      },
      {
        "Id": "f642baf536e34a3e8cb74808c1787f24",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 827.93516525567316,
        "Y": -18.705565584022679
      },
      {
        "Id": "349991248b904436bcea734462ed6d1f",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 809.81477133217265,
        "Y": 83.35604577714372
      },
      {
        "Id": "974fecacb61649d08cad877ce085a399",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 947.63637229067558,
        "Y": 295.85543374360878
      },
      {
        "Id": "acc59ab50eda4eb7804aa29818ca8972",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 905.93504182455081,
        "Y": 769.61385005456862
      },
      {
        "Id": "f90d8ac5f6c047dabfe0a065af6080f9",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 868.2264382583619,
        "Y": 901.17135557285781
      },
      {
        "Id": "f7590613b1d5476d8c044b3ba03aa953",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1141.0126396244059,
        "Y": 680.81528477497875
      },
      {
        "Id": "bf6f9c335b3c43e98b2207d1b01fe2c2",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1132.7157531231687,
        "Y": 243.02960552949162
      },
      {
        "Id": "3f2930e639524104884d2098b4448567",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1922.0442067073955,
        "Y": -1065.2745299212283
      },
      {
        "Id": "7fddc8fb8c954860a2df0d7a22c43634",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2219.265351976318,
        "Y": -1065.044655017929
      },
      {
        "Id": "7da0e4ef66f34bdfbb0ecb8334f07421",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10031.673787312597,
        "Y": 997.91486140883785
      },
      {
        "Id": "33a7bc11b2a444e3802c7c5d2e4fc52b",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2518.834350297227,
        "Y": -898.950373765392
      },
      {
        "Id": "7bf2b5eafbad4faeabbfc7584be7ba14",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2839.1590541285809,
        "Y": -873.9827771449327
      },
      {
        "Id": "44340526a5b344abb9b3ca86918e837f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2578.1824856015551,
        "Y": -705.8248988265359
      },
      {
        "Id": "c1efda31f3e84611a77d59b2d1aeca27",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3120.159848499849,
        "Y": -1052.278111895587
      },
      {
        "Id": "ab27601c3cb140c68b13c05bb0e860ae",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2892.3399553470877,
        "Y": 1033.3049878983807
      },
      {
        "Id": "619c7114a6424bfa9c5de721523e9f6f",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 902.87504153093732,
        "Y": 1448.5591520510434
      },
      {
        "Id": "89703e4a5b9246e3bdea83fbc2a06057",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 940.58364509712692,
        "Y": 1317.0016465327512
      },
      {
        "Id": "5f1ce0004cef400db75e51a9d10d3ea6",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1175.661242896987,
        "Y": 1228.2030812531616
      },
      {
        "Id": "9da28366193e400a8ccc983fc5c20c0d",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 407.7403932867536,
        "Y": 1403.30436381394
      },
      {
        "Id": "4d7e08b6e37f478e924a9cf2ea262994",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2669.4916671222804,
        "Y": 876.71039700144206
      },
      {
        "Id": "711799435ea544b7bf1c92c884568888",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19330.818015813402,
        "Y": 8662.1284432592547
      },
      {
        "Id": "6b45cb627bb74fc3aa8f08c37f858e31",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18870.065623170332,
        "Y": 8827.4143922682633
      },
      {
        "Id": "8874d9c34e1d43c0b0ccca35ebb7cbb7",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19019.722114848912,
        "Y": 8728.8797233239129
      },
      {
        "Id": "c6e894fc609c440c96bac78b1c3da0f1",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19560.53522235321,
        "Y": 8663.1933418308254
      },
      {
        "Id": "275fe3ec0dd7407d85f51be1d5256e72",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19327.167931208307,
        "Y": 5116.9133036937737
      },
      {
        "Id": "8bb45464e593403e8b926ad117f1543c",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18866.415538565238,
        "Y": 5282.1992527027842
      },
      {
        "Id": "1e029989d0ed49609f77315ae45d18af",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19016.07203024382,
        "Y": 5183.6645837584338
      },
      {
        "Id": "9fdf77fc2edf41b2b4766d28c2803740",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19556.885137748119,
        "Y": 5117.9782022653553
      },
      {
        "Id": "3e85b5bfa3674016882cd79b804c9f5e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19317.469156786079,
        "Y": 5514.5120070621242
      },
      {
        "Id": "966671f7e8554a0bbab13595b8a3d89a",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18842.09551446122,
        "Y": 5627.9589799266005
      },
      {
        "Id": "baf65d41f5ff40f8bc772daa576badb5",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19005.044051305063,
        "Y": 5534.741129048356
      },
      {
        "Id": "7ec7362edebf4700b5d415060fd0ec92",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19547.186363325887,
        "Y": 5515.576905633704
      },
      {
        "Id": "13926a2ca81d4b708abd2a8278c8a1c2",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19329.015769542661,
        "Y": 5911.0118623574135
      },
      {
        "Id": "4689bfbd3bb74877b6ddc4d0928040f8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18868.263376899587,
        "Y": 6076.2978113664149
      },
      {
        "Id": "aebda548f69d4dce94794d9c37b340da",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19017.91986857817,
        "Y": 5977.7631424220735
      },
      {
        "Id": "1e3787eb281f468c80154b943c8f3998",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19558.732976082469,
        "Y": 5912.0767609289842
      },
      {
        "Id": "197761c9ef1b40d6ba11daafb5b8014e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19333.458082629768,
        "Y": 6310.3550371515748
      },
      {
        "Id": "726f6bd40550412393262aa0ecdcc02e",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18872.7056899867,
        "Y": 6475.6409861605744
      },
      {
        "Id": "b1b2d0a2a12e4bebb5ed99c7221477ae",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19022.362181665278,
        "Y": 6377.1063172162349
      },
      {
        "Id": "d89d7d5b6d274ee3b6d25de6e4ace489",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19563.17528916958,
        "Y": 6311.4199357231437
      },
      {
        "Id": "8cf42e354088472ebabf054f2a9e0a75",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19336.941749175498,
        "Y": 6706.9077198014647
      },
      {
        "Id": "fec4dda2e5524397a4015bc666d8ddad",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18876.189356532428,
        "Y": 6872.1936688104643
      },
      {
        "Id": "749e9a2531f746d4b5536ab67b231c68",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19025.845848211007,
        "Y": 6773.6589998661248
      },
      {
        "Id": "0aaea6ae40904a958775f14ca74efca3",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19566.658955715309,
        "Y": 6707.9726183730336
      },
      {
        "Id": "8a5de4ea6549413cb1bfd5e6cea2141e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19328.842327013357,
        "Y": 7103.9469154722838
      },
      {
        "Id": "cba7f20d6195459f85c3ce79eda997ac",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18868.089934370288,
        "Y": 7269.2328644812851
      },
      {
        "Id": "13ee484b62fa40a8b5f59f2723506e50",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19017.74642604887,
        "Y": 7170.6981955369438
      },
      {
        "Id": "31c6ffab7ce7465ebc877154b77cf737",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19558.559533553169,
        "Y": 7105.0118140438544
      },
      {
        "Id": "81acf1bb22984d0bb81f6f8aa8556c1a",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19329.579879798956,
        "Y": 7493.6342608073755
      },
      {
        "Id": "428285aefd054f1fbdcb87ffe36f1dae",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18868.827487155882,
        "Y": 7658.9202098163769
      },
      {
        "Id": "a49522455f2343eda7964927f2347d35",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19018.483978834462,
        "Y": 7560.3855408720356
      },
      {
        "Id": "3311ba0c8fcf4637b552a981965115af",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19559.297086338764,
        "Y": 7494.6991593789462
      },
      {
        "Id": "06d95876aa8a4f57916ad02f21b458a8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19331.006255212436,
        "Y": 7881.45717184763
      },
      {
        "Id": "3735cbfc38e84aafbdc202a59a2edd71",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18870.253862569367,
        "Y": 8046.7431208566313
      },
      {
        "Id": "7a0a4995d8ef441e9b75f58e6a99a0a1",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19019.910354247946,
        "Y": 7948.20845191229
      },
      {
        "Id": "99640e582c054fa2950e244742c839b3",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19560.723461752248,
        "Y": 7882.5220704192006
      },
      {
        "Id": "c20485f5cae744b2ac008c39a42524e2",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19329.183424362265,
        "Y": 8274.2548452049559
      },
      {
        "Id": "4495e6d204184472a2f66600b9951fe3",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18868.431031719196,
        "Y": 8439.5407942139555
      },
      {
        "Id": "9a04f29a0ad54e48ae5489f0035df7d4",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19018.087523397779,
        "Y": 8341.0061252696159
      },
      {
        "Id": "3794f6371cba46f68611f665bf0a8ada",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19558.900630902077,
        "Y": 8275.3197437765266
      },
      {
        "Id": "8d9987f83a204dc189454eb037b8fd88",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19325.53256291485,
        "Y": 4339.8251448007741
      },
      {
        "Id": "fec894e262634fb3a0bcb88ec954f69c",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18864.780170271777,
        "Y": 4505.1110938097854
      },
      {
        "Id": "dc7709e307e54201af25a71415efee54",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19014.43666195036,
        "Y": 4406.5764248654341
      },
      {
        "Id": "174358f71cce4bb9bae4a23479d6423b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19555.249769454658,
        "Y": 4340.8900433723538
      },
      {
        "Id": "1132cf14a34d4380b7f6aaccd0ad6f06",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19324.838576280978,
        "Y": 4733.4417747679045
      },
      {
        "Id": "e36a8fd8d48c476480a52d5b2ea66c17",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18864.086183637908,
        "Y": 4898.7277237769149
      },
      {
        "Id": "e24afc457573473ebb1a7db6e0bc907f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19013.742675316487,
        "Y": 4800.1930548325645
      },
      {
        "Id": "b4ce53b5cdb44713891cde7695d6beac",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19554.555782820789,
        "Y": 4734.5066733394842
      },
      {
        "Id": "651940114cdb44c59ebc6f74e5105910",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19335.441790994839,
        "Y": 3942.8611635690349
      },
      {
        "Id": "970cb8fc7fc142deb38f70b7f4524c31",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18862.502859383709,
        "Y": 4043.2231449796918
      },
      {
        "Id": "0bf98cca2ebe4c4bbba5f12100f4852f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19027.211352774844,
        "Y": 3959.4668456049567
      },
      {
        "Id": "f2e4468a88874631a1a690869095eee9",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19556.562609301149,
        "Y": 3948.2242562573638
      },
      {
        "Id": "0a04106339c3444994bf800624f70ddc",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18851.95672543627,
        "Y": 3718.2526281628543
      },
      {
        "Id": "e9e98fbfb605430dadd77fb064cee60d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19001.613217114849,
        "Y": 3619.7179592185039
      },
      {
        "Id": "8df3c6f6d51a4beaaddf474ec66e2ed0",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19312.70911807934,
        "Y": 3552.9666791538439
      },
      {
        "Id": "7902519511c14bd2ad7470492be8d9a8",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19542.426324619148,
        "Y": 3554.0315777254245
      },
      {
        "Id": "8f5b01259df7489baceac60cd95efa24",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18856.163874149497,
        "Y": 3329.9050980666843
      },
      {
        "Id": "70ea1bcfa8f64135974fb3fe0d26befc",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19005.82036582808,
        "Y": 3231.3704291223339
      },
      {
        "Id": "f25f6506a2874f079b4b883f267dd982",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19316.91626679257,
        "Y": 3164.6191490576739
      },
      {
        "Id": "27c61046f30a40ffb984ea5e1cf73f0f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19546.633473332378,
        "Y": 3165.6840476292546
      },
      {
        "Id": "ab80e451dba34bc6a2c8d9357d3599f0",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17277.779760178157,
        "Y": 3141.8505881371
      },
      {
        "Id": "6af976371f594a8e91552722ecc56895",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17054.195107962591,
        "Y": 3174.8724027497328
      },
      {
        "Id": "e3e34310d6524c83bf769fe929e6518b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18859.319835631897,
        "Y": 2936.6013827571969
      },
      {
        "Id": "dfbd944cfe67412a8e4100640baa293c",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19008.97632731048,
        "Y": 2838.0667138128474
      },
      {
        "Id": "a50b7b9abdac47d992810920c6bd231f",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19320.07222827497,
        "Y": 2771.3154337481874
      },
      {
        "Id": "9f17f4fd7e36454d820ca8c3518620db",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19549.789434814778,
        "Y": 2772.3803323197671
      },
      {
        "Id": "b49e31fc70e9459891db9ada0181f8b2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17031.643236714688,
        "Y": 2782.511697328734
      },
      {
        "Id": "814d1cfbfc6f4825b4dd0a33753e6e5a",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17263.098733245559,
        "Y": 2671.2775176763744
      },
      {
        "Id": "11bc756a54ef4b69b0f09430c0b850f9",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16409.461053873853,
        "Y": 2624.8444687082238
      },
      {
        "Id": "fe7cefb9b5b44d8c9be612489edbe5af",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19313.74393687414,
        "Y": 2366.8448799482339
      },
      {
        "Id": "bbc526d645df4d09982d28c2fa4caf51",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18852.99154423107,
        "Y": 2532.1308289572444
      },
      {
        "Id": "8f8d4ec321464f9fa4279954da2bf52a",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19002.648035909649,
        "Y": 2433.596160012894
      },
      {
        "Id": "37d5b6458ea14ca49db46c8501b8a974",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19543.461143413948,
        "Y": 2367.9097785198137
      },
      {
        "Id": "8c848fef24754e0c86ebcf97baa8c35e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19328.001813044939,
        "Y": 1977.7578268000625
      },
      {
        "Id": "9b89ab9eaf2544cba05497d7cbd66047",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18847.415944543689,
        "Y": 2141.0604282232553
      },
      {
        "Id": "12c8880566a44e5d81497ea3fe5053ee",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19016.905912080452,
        "Y": 2042.9217061172003
      },
      {
        "Id": "9e3b6032b3914cab801ffd52fe1b3584",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19557.719019584751,
        "Y": 1978.8227253716432
      },
      {
        "Id": "080aad95b79a4e93a105fd0d97f62e58",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 20813.077169188735,
        "Y": 4172.1383840670987
      },
      {
        "Id": "3a6fcbcf105048fe808d5fd280e0ae9c",
        "Name": "Fase B",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15384.325172029043,
        "Y": 967.34973218012772
      },
      {
        "Id": "fff2c4e5120442d38eb6a0ddcd35d0a6",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 21600.448730971624,
        "Y": 1465.67251970584
      },
      {
        "Id": "5ea68abc58274b8a9eac209d4003b2d5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22225.410125758877,
        "Y": 1506.7475378487347
      },
      {
        "Id": "76702725510f44eead608eb86fe05b03",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 21860.08441942315,
        "Y": 1481.8142406443753
      },
      {
        "Id": "0264cb85964b4cfb99a5092fc294e8f9",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22726.504926544509,
        "Y": 1244.9274269984076
      },
      {
        "Id": "430acdcbe6d6464b93318ad433792444",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22032.821294775615,
        "Y": 1037.1050858421563
      },
      {
        "Id": "bb308284f1964061a67517f5fd342675",
        "Name": "Fase B",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 14925.771908992214,
        "Y": 1495.1425173207069
      },
      {
        "Id": "5792102c31474414bc37d62ab8993723",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22437.591937089481,
        "Y": 1405.2905964601946
      },
      {
        "Id": "bae4b11f4f44439c9cbadc8a13009aa9",
        "Name": "Neutro",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 26942.112156931056,
        "Y": 1312.0499676899599
      },
      {
        "Id": "cfe04e5b74454badbd45285fc5abbcf8",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27175.915465006969,
        "Y": 1255.2438034521465
      },
      {
        "Id": "f3a741d8bc004daf9099c3fee10ee27d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27808.260400377847,
        "Y": 1298.1647067409458
      },
      {
        "Id": "346b786bc94d4fa1960ab4cd3b3c19fa",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27435.5511534585,
        "Y": 1271.3855243906828
      },
      {
        "Id": "1b6cd2aa45a94da3bb25466207f6918d",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28314.7866427539,
        "Y": 1058.7069586193074
      },
      {
        "Id": "60365327e5e34a8d9fc017c743c29f59",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28013.058671124829,
        "Y": 1194.8618802065002
      },
      {
        "Id": "f38818b9a79042629779841061d094b3",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27611.014125394839,
        "Y": 912.89101324673629
      },
      {
        "Id": "fdd89884bd6a473d994f2ebd1e5ef918",
        "Name": "Neutro",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27401.443537794359,
        "Y": 1011.2533914002697
      },
      {
        "Id": "6cfc8da815ed4356b4ab6430f814773f",
        "Name": "Proteção",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32115.927143885514,
        "Y": 1399.7688458287353
      },
      {
        "Id": "5aa9c989391d41df8735d941af6ff791",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32317.027764006416,
        "Y": 1273.8694070716952
      },
      {
        "Id": "b661269aeb8e4eed8140febe22db9b4e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32967.422119768613,
        "Y": 1333.5504864382151
      },
      {
        "Id": "bc4da1abeea443c8a0c3f79ebb46d4a0",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32557.708855510788,
        "Y": 1285.0792939239814
      },
      {
        "Id": "cd40d7cd4a394a62b5ffd0ec77461ad5",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 33453.637004963923,
        "Y": 1063.3896726189737
      },
      {
        "Id": "25f095c741a047b38ff443f97a07d20e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 33172.220390515613,
        "Y": 1230.247659903765
      },
      {
        "Id": "4bb27b286321416abc8335a4477394d3",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32780.454972806692,
        "Y": 861.500685442566
      },
      {
        "Id": "dc2d0a4f4e8c4f42a132daa84ae9a746",
        "Name": "Proteção",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32520.697785678381,
        "Y": 965.74564777307523
      },
      {
        "Id": "f3d17641a3924cf0ae94adec8ca73e9d",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9166.3182513675365,
        "Y": 755.64824927602081
      },
      {
        "Id": "18f0f297ec524587a7afff655de8cc5b",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32858.465454082005,
        "Y": 533.74193710211512
      },
      {
        "Id": "0de2679396a3463b8da032e22bf12dbf",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9681.577054443982,
        "Y": 999.29286738090377
      },
      {
        "Id": "6416c23d4f43465ebd6a2477c937ccc6",
        "Name": "Fase A",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9420.7668193800255,
        "Y": 1087.0375747052044
      },
      {
        "Id": "7828976f8dab4de8bde775d339ecf4ad",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8902.0551535105224,
        "Y": 1359.7166225529941
      },
      {
        "Id": "0aafe501db724b49850281c6dc437ec3",
        "Name": "Fase A",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8735.5954985135977,
        "Y": 1398.5624999464069
      },
      {
        "Id": "444f427b7d564c7dace894f73d257e6a",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15131.563486870602,
        "Y": 1399.3461379112766
      },
      {
        "Id": "e7fd1be7a17a46789ddc555110353039",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15581.823523443,
        "Y": 940.32960778974143
      },
      {
        "Id": "bfcf03ca68df41379a4d9d91a5d0b9ac",
        "Name": "Fase C",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 21408.657820720429,
        "Y": 1520.742922840835
      },
      {
        "Id": "b042e3423a9141bb8e02620e041a7a6e",
        "Name": "Fase C",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 21762.637859701543,
        "Y": 1120.7175155065856
      },
      {
        "Id": "e243161d0c4a4db8893b65e0d8bc3b1a",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16007.787301604036,
        "Y": 1012.037902821279
      },
      {
        "Id": "c92bbfa85c23479c8f551d5d41b582a1",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4649.5610224793472,
        "Y": 81.3466012940986
      },
      {
        "Id": "2efbc059d4d84d96855e370f4e74eda4",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4647.3047041560094,
        "Y": -222.25489740448998
      },
      {
        "Id": "6bef753e97914db796d33c4ae92b6ae1",
        "Name": "Retornos",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4461.3628340380865,
        "Y": -88.660825581990025
      },
      {
        "Id": "3e04103da0504259b30d0dfc813deae8",
        "Name": "Retornos",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4477.5149772896866,
        "Y": 142.03908311129317
      },
      {
        "Id": "178c23889e8a40bba2d4b75e7c908b44",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4955.7810134968795,
        "Y": 16.689901249565196
      },
      {
        "Id": "5f3b4067b57149119c29a3c823eca7d9",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16949.903075159469,
        "Y": 4354.6964483113406
      },
      {
        "Id": "0edf538f6c784735a352ae738f234364",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16713.350620096149,
        "Y": 4390.5999968901406
      },
      {
        "Id": "6eb402a8a7814e9d87af177091e5b055",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16706.64828566217,
        "Y": 4058.7557047586606
      },
      {
        "Id": "09204cee5213427ea72a5bae1ed7bf97",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16942.85236308178,
        "Y": 4004.5044957711834
      },
      {
        "Id": "1c06dc9685274959b7da876e4cb7c1a0",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16164.600890417252,
        "Y": 3945.1679195776733
      },
      {
        "Id": "2dc2b24018a94df98dbb6fc3812cafe1",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16933.372172877014,
        "Y": 3643.9055646599045
      },
      {
        "Id": "0e6d9c3cf66b4319981602cc42ab626e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16714.115993466738,
        "Y": 3858.7295389327937
      },
      {
        "Id": "debb951e87bc4a91836355655519f418",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17367.624756136938,
        "Y": 3710.9763517083084
      },
      {
        "Id": "29764d7f12904699ae84b143a62c98ea",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17240.953181521127,
        "Y": 3780.2237808258978
      },
      {
        "Id": "0e9c300f2eec4762855177c733dea857",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18104.273122257255,
        "Y": 3187.5541366844736
      },
      {
        "Id": "49012652526947aa84c1b43648136dd6",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18106.372352240171,
        "Y": 3657.1781144322504
      },
      {
        "Id": "dc2ce1f1f3c043b1a9ec24714029f76d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19806.056522552739,
        "Y": 3951.7984153003126
      },
      {
        "Id": "e7b8a1efaf7742ff909c9e5e587aa256",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19793.515554442252,
        "Y": 3576.855531002544
      },
      {
        "Id": "7d0442efa8c242f98d40efcd9b049187",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19787.01222632885,
        "Y": 3167.7485263620356
      },
      {
        "Id": "457387e1fe9144f39340bcab96bb0911",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19778.543299558314,
        "Y": 2771.9908164572971
      },
      {
        "Id": "27fc6846452b4906bb0a13d539a5205b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19797.089908501133,
        "Y": 2384.13862757051
      },
      {
        "Id": "d658ca84f1494e36a028a03a9a99f462",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19815.886688178558,
        "Y": 2018.8497852922956
      },
      {
        "Id": "1e212fccc8204abe8b59d734c1520fa9",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19799.241895100153,
        "Y": 4340.6724282343357
      },
      {
        "Id": "2b9daa4628ce41f2a0127e603a9feff2",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19788.797287615624,
        "Y": 4731.10542047437
      },
      {
        "Id": "2d7f9d4a6fdc4f94bdba275ffcf3087a",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19785.884842157575,
        "Y": 5119.1992228467971
      },
      {
        "Id": "1dc29b5614514e3f8036ba7c022da2cb",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19794.022463831974,
        "Y": 5491.0822003707144
      },
      {
        "Id": "93694b93f7ed41c6bd50fa8502535d74",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19802.444546751849,
        "Y": 5922.6152360780015
      },
      {
        "Id": "aa78f6cff5df467e98b84983c865ced4",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19817.312887666347,
        "Y": 6316.8382758057678
      },
      {
        "Id": "bf20593eb86e408c8269e1a00d63680a",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19808.69569312302,
        "Y": 6721.5527217794688
      },
      {
        "Id": "d58508d5927742bd878da7beddecfcac",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19804.343887835559,
        "Y": 7107.96237597863
      },
      {
        "Id": "f812c9b855f14e2e8ac6989f052825c5",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19826.321523122617,
        "Y": 7494.0899708281968
      },
      {
        "Id": "f26ce196f31f40a7b97f0b97835c6f34",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19821.556480739491,
        "Y": 7892.32207410871
      },
      {
        "Id": "4096523e1ea74e199975c82821ba6503",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19809.253405384166,
        "Y": 8281.7025540807626
      },
      {
        "Id": "c1903a02fb07450d855440d23ca69c71",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19817.339170125953,
        "Y": 8641.9516937190037
      },
      {
        "Id": "ca7c0210e75a4da0847796e1728da419",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24524.727009279457,
        "Y": 5306.9283801805277
      },
      {
        "Id": "32a996a04dfc47f5a06780e11d82d9e2",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24515.028234857236,
        "Y": 5704.5270835488782
      },
      {
        "Id": "37bea85d49e5492bbb8c8d89a1cde8fd",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24526.574847613807,
        "Y": 6101.0269388441566
      },
      {
        "Id": "b80a600aca174d8cb99b93b4ade06f7b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24523.091640986007,
        "Y": 4529.8402212875271
      },
      {
        "Id": "e129d36377fc4f7ea58090786b18513b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24522.397654352128,
        "Y": 4923.4568512546584
      },
      {
        "Id": "fb7d5c15de9f4ad6b583308c51f379f0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24524.404480832487,
        "Y": 4137.174434172538
      },
      {
        "Id": "4b3d5f2dfe724eb0963a0a1376ae90cb",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24510.268196150508,
        "Y": 3742.981755640596
      },
      {
        "Id": "669c6a87132145fdb301775968ddbad0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24514.475344863728,
        "Y": 3354.634225544427
      },
      {
        "Id": "74b403977f3d4935950d10c7f0d16b4c",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24517.631306346128,
        "Y": 2950.7719719606575
      },
      {
        "Id": "5c32949207994695a0386fd615d94eed",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24511.303014945297,
        "Y": 2556.8599564349861
      },
      {
        "Id": "04581ac78cb24ad9b42a8654a74204f9",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24505.727415257916,
        "Y": 2165.7895557009961
      },
      {
        "Id": "cf3be8306204402c81150f9c234cf7cb",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24528.377093884566,
        "Y": 8852.1435197460087
      },
      {
        "Id": "21d46a587eb943dabb845decd6908a04",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24526.401405084507,
        "Y": 7293.9619919590268
      },
      {
        "Id": "f16fc1632cd144d18c1a73277162430f",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24527.138957870116,
        "Y": 7683.6493372941168
      },
      {
        "Id": "6c7e6936cd134c859c1df1dc9b1d997e",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24528.565333283597,
        "Y": 8071.4722483343758
      },
      {
        "Id": "0ab78e9a766c4e94982e4075b7546e39",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24526.742502433419,
        "Y": 8464.269921691699
      },
      {
        "Id": "89e76357d63746fe879937928aca628b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24531.017160700929,
        "Y": 6500.3701136383179
      },
      {
        "Id": "cace1f2d02de46d2bdc4edd497ff86ff",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24534.500827246648,
        "Y": 6896.9227962882078
      },
      {
        "Id": "d9d0dcf190a4449782bf1150a560e6d2",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30210.588599077884,
        "Y": 5157.3809372401338
      },
      {
        "Id": "e08a7abfce054c64916dfe0be8ea45b8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30200.889824655686,
        "Y": 5554.9796406084843
      },
      {
        "Id": "22a2e4ed3239447f8c3b0be1c502b1b8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30208.953230784482,
        "Y": 4380.292778347135
      },
      {
        "Id": "ed15be9fc7c9461abd80c50824c309a5",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30208.259244150584,
        "Y": 4773.9094083142645
      },
      {
        "Id": "6c2065b963f646b5ac067c8a229caa03",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30210.266070630983,
        "Y": 3987.6269912321441
      },
      {
        "Id": "31db8cd7afdd463abee23a9d40ae4fab",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30196.129785948982,
        "Y": 3593.4343127002048
      },
      {
        "Id": "62a1182722a449a1af8814653c5fa6f1",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30200.336934662184,
        "Y": 3205.0867826040339
      },
      {
        "Id": "5b0ca05f498443e4a6fe2777c345bc8f",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30203.492896144584,
        "Y": 2801.2245290202645
      },
      {
        "Id": "2b8968f10df14a99b63a666ce1bf0d84",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30197.164604743783,
        "Y": 2407.3125134945949
      },
      {
        "Id": "3b483b5dacd54af785d1c99ad1b737f8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30191.589005056383,
        "Y": 2016.2421127606049
      },
      {
        "Id": "759a300e556f40ee93c7190847284e12",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30214.238683682983,
        "Y": 8702.5960768056138
      },
      {
        "Id": "2ac355c8d8ff4028960cf48e9fec97ad",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30212.262994882985,
        "Y": 7144.4145490186347
      },
      {
        "Id": "f6a7e5d705a94899aaced7ee9c39bedf",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30213.000547668584,
        "Y": 7534.1018943537238
      },
      {
        "Id": "4c4a8645ebe54e379752280e3961e9e9",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30214.426923082083,
        "Y": 7921.9248053939846
      },
      {
        "Id": "f5fd3fca1d8e49f6802293ad0f362cfa",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30212.604092231883,
        "Y": 8314.7224787513042
      },
      {
        "Id": "3fa0d74d876e499a999e107780b83e7d",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30212.436437412282,
        "Y": 5951.4794959037645
      },
      {
        "Id": "f64a2129538540e0be6602b5708e2f91",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30216.878750499382,
        "Y": 6350.8226706979258
      },
      {
        "Id": "061eafacd7434118b99778d6428e99d9",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30220.362417045082,
        "Y": 6747.3753533478157
      },
      {
        "Id": "b371fc6578ae422ea8eafe2ccf855d49",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25079.141894742319,
        "Y": 8687.844260458085
      },
      {
        "Id": "b11fc1404bbd4007a3d5fb521b80f62f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24768.045993777829,
        "Y": 8754.5955405227432
      },
      {
        "Id": "c08a031cb6de45288fb2c9080a64abf7",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25308.859101282127,
        "Y": 8688.9091590296557
      },
      {
        "Id": "0de3b776265e445d9ef0594015c976a2",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25307.620965267677,
        "Y": 7520.4149765777729
      },
      {
        "Id": "b99cd0a199ef466b88583398c04067bc",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25309.047340681158,
        "Y": 7908.2378876180337
      },
      {
        "Id": "d137ae066c4f43078a647c2f8e3436d0",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25307.224509830987,
        "Y": 8301.0355609753533
      },
      {
        "Id": "8dd2db94ec584b54b2b6fd05347b6fa2",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25569.880359668408,
        "Y": 7918.0378913075438
      },
      {
        "Id": "559847ec8bc64d80a74a8895fae25a53",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25557.57728431308,
        "Y": 8307.4183712795966
      },
      {
        "Id": "f0e07ca72c4d45b898b6ef02bf32997a",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25565.663049054867,
        "Y": 8667.6675109178359
      },
      {
        "Id": "e2bea0baecd345bc81516aefd66c1a9f",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25077.903758727869,
        "Y": 7519.3500780062041
      },
      {
        "Id": "ad5bbec687244d928906c45cecbd3d70",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24766.807857763379,
        "Y": 7586.1013580708641
      },
      {
        "Id": "7d38592318144c3284da913f5bd93469",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25079.33013414135,
        "Y": 7907.172989046463
      },
      {
        "Id": "34255ded7c85469c86e03d88d0496334",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24768.234233176856,
        "Y": 7973.9242691111231
      },
      {
        "Id": "aa887b4eebfb4285ab9593c0daa24746",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25077.507303291179,
        "Y": 8299.9706624037863
      },
      {
        "Id": "f99b16d7864a4556b989f728536837a2",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24766.411402326688,
        "Y": 8366.7219424684445
      },
      {
        "Id": "b3c901807d644a638b0fa9753f5577e6",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25075.491810137217,
        "Y": 5142.6291208926041
      },
      {
        "Id": "8d52d3b5303347209c62d16d6ef5b873",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24764.395909172727,
        "Y": 5209.3804009572641
      },
      {
        "Id": "010e57f4c9d24f6a9d18bd1db15b06b3",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25305.209016677029,
        "Y": 5143.6940194641838
      },
      {
        "Id": "aa0bcbc0748e45eba407fc1004d2d54b",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25065.793035714985,
        "Y": 5540.2278242609545
      },
      {
        "Id": "741d9229fe5c44bebb0ffe0a9d4c985e",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24754.6971347505,
        "Y": 5606.9791043256146
      },
      {
        "Id": "089c19f8def14d5986b48436baebfbbc",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25295.510242254797,
        "Y": 5541.2927228325343
      },
      {
        "Id": "70d54fe59fc54ccc9e91fdb59afa98ad",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25077.339648471567,
        "Y": 5936.7276795562439
      },
      {
        "Id": "c15a11187dfc443388218665115ee9f8",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24766.243747507087,
        "Y": 6003.4789596209039
      },
      {
        "Id": "38f528c295594b8b94097aa6d2b75b0d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25307.056855011379,
        "Y": 5937.7925781278145
      },
      {
        "Id": "b10f3f71f60745d390a3973d509ac396",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25081.781961558678,
        "Y": 6336.0708543504052
      },
      {
        "Id": "0772e19c200e40f8a61bd747d8c1670b",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24770.686060594187,
        "Y": 6402.8221344150652
      },
      {
        "Id": "40182becba1f443dbb9c602a40aaaf4b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25311.499168098486,
        "Y": 6337.135752921974
      },
      {
        "Id": "9526325046554a11ae18f363d1652eab",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25085.265628104407,
        "Y": 6732.6235370002951
      },
      {
        "Id": "7b8f230c012c4e23802fe40d38f62f18",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24774.169727139917,
        "Y": 6799.3748170649551
      },
      {
        "Id": "e8672e46847e4835889c6b4ab68d61ea",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25314.982834644219,
        "Y": 6733.6884355718639
      },
      {
        "Id": "9e323f93670d4975a41878c56d415c12",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25077.166205942267,
        "Y": 7129.6627326711141
      },
      {
        "Id": "73183a6ef9fb47bd98fc6faa0c2f17c1",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24766.070304977777,
        "Y": 7196.4140127357741
      },
      {
        "Id": "ebb11d6277d54caaadbe49175eddda89",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25306.883412482075,
        "Y": 7130.7276312426848
      },
      {
        "Id": "979a5b4654f14797bb0a7f77610969f7",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25073.856441843767,
        "Y": 4365.5409619996053
      },
      {
        "Id": "d0e83e88505148d3becb1a7c63275d94",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24762.76054087927,
        "Y": 4432.2922420642653
      },
      {
        "Id": "185c9a7e6ab64e439cd370f368b8445c",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25303.573648383575,
        "Y": 4366.6058605711851
      },
      {
        "Id": "bc2e1f68ed9d464380c8602b370e7a40",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25073.162455209887,
        "Y": 4759.1575919667348
      },
      {
        "Id": "e4efd77bfac743839a80d5f8dfd08b2b",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24762.066554245397,
        "Y": 4825.9088720313948
      },
      {
        "Id": "08ae709330f94caea4cff456027120ff",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25302.879661749696,
        "Y": 4760.2224905383146
      },
      {
        "Id": "59b9db125cec46808bfca0f4b2bdf093",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25083.765669923745,
        "Y": 3968.5769807678644
      },
      {
        "Id": "92e7b0e09c3c417487b86c404dcbc33b",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24775.535231703758,
        "Y": 3985.1826628037943
      },
      {
        "Id": "9ee63791298e4b4bb7ebacdd88ae2657",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25304.886488230059,
        "Y": 3973.9400734561932
      },
      {
        "Id": "931b1e762e3e4f1ab3c0c5ebf3e834c6",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24749.937096043755,
        "Y": 3645.4337764173342
      },
      {
        "Id": "db939a26dc364d4c917f6dc3e31a0735",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25061.032997008249,
        "Y": 3578.6824963526742
      },
      {
        "Id": "10ca2a7ceadf40e08fb1ad31d17b3e08",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25290.750203548057,
        "Y": 3579.747394924254
      },
      {
        "Id": "2c1a1322d2a24e97acbdc3b5899e213e",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24754.14424475699,
        "Y": 3257.0862463211633
      },
      {
        "Id": "5167c925d44b433fad2136eb22e7ce42",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25065.240145721487,
        "Y": 3190.3349662565033
      },
      {
        "Id": "72c92afb4bdc4a1b83d05a5ee334ae17",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25294.957352261295,
        "Y": 3191.3998648280831
      },
      {
        "Id": "0292b2829e3e4f5f97b0ad7f2e3365c6",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22875.018451519147,
        "Y": 3063.74913436522
      },
      {
        "Id": "c2eb7b3ca1274a50923189d5c9dee729",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22638.465996455827,
        "Y": 3099.652682944019
      },
      {
        "Id": "e094bd7798d54ebc8be09ec775b08c76",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24757.30020623939,
        "Y": 2863.7825310116841
      },
      {
        "Id": "894ec82cf4714d6fae9ec3537d6a129e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25068.396107203887,
        "Y": 2797.0312509470241
      },
      {
        "Id": "a9b237828a4c404b8369e3fbec76f178",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25298.113313743695,
        "Y": 2798.0961495186039
      },
      {
        "Id": "ed0ed73ea13f4b7ebd8810affd5bcf0a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22631.763662021847,
        "Y": 2767.8083908125391
      },
      {
        "Id": "9475894c57024487a1cfaa835e7e14fa",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22863.219158552714,
        "Y": 2656.5742111601794
      },
      {
        "Id": "432f8ca55410470ba9f8e97d0521da8d",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22009.581479181012,
        "Y": 2610.1411621920288
      },
      {
        "Id": "5e7c6429c8034ee5b106035906958ae4",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 26561.401048117648,
        "Y": 4197.8542012659354
      },
      {
        "Id": "8af2fda5aedb4cca936a6610218fd574",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22550.023500466628,
        "Y": 4339.9931417951493
      },
      {
        "Id": "369fade943af4102bfc35728466ed8ac",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22313.471045403305,
        "Y": 4375.89669037395
      },
      {
        "Id": "8cb893b055a14e5b80e79dee1b425d26",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22306.768710969329,
        "Y": 4044.0523982424693
      },
      {
        "Id": "993aaab29da340d39cb90bd621493010",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22542.972788388939,
        "Y": 3989.8011892549894
      },
      {
        "Id": "2a73868f85a542b3a1fe3e220f338d75",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 21764.721315724411,
        "Y": 3930.46461306148
      },
      {
        "Id": "36b4f9e751c04965b515db8430be5619",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22539.320691335215,
        "Y": 3652.514630747879
      },
      {
        "Id": "16caccd4966247b9a97774fadb9539ad",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22314.236418773897,
        "Y": 3844.0262324165997
      },
      {
        "Id": "642b1474226443dc8412830633bc4898",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22967.745181444094,
        "Y": 3696.2730451921198
      },
      {
        "Id": "eb05030585ee40cfb76a1b950e9b6403",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22841.073606828282,
        "Y": 3765.5204743097092
      },
      {
        "Id": "e6335fa31d0847179a0152414565db23",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 23715.25336600043,
        "Y": 3293.1454308433676
      },
      {
        "Id": "497ac25c58494d3fbb1c9e4da055073e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 23708.253973295188,
        "Y": 3619.5792631938803
      },
      {
        "Id": "68db88fd583041aeb539027fbe53c992",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25554.38040148166,
        "Y": 3977.5142324991448
      },
      {
        "Id": "1e54155f48084e4db53429b2ac754ec7",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25541.839433371166,
        "Y": 3602.5713482013743
      },
      {
        "Id": "9be2748c42ce4732a3d1a696f3f14b85",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25535.336105257757,
        "Y": 3193.4643435608632
      },
      {
        "Id": "6c50adb14fbc4a5aada0460bd5fa5198",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25526.867178487228,
        "Y": 2797.7066336561238
      },
      {
        "Id": "43f6c93a33a347528e6e5207eea15c28",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25547.565774029066,
        "Y": 4366.3882454331642
      },
      {
        "Id": "0415fd8a84f446cebbd769d64b4807e9",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25537.121166544537,
        "Y": 4756.8212376732054
      },
      {
        "Id": "49238e81565c4fc48e07f026f7d8d3ec",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25534.208721086488,
        "Y": 5144.9150400456338
      },
      {
        "Id": "de4c9ee4132247779ed15059b0a87788",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25542.346342760888,
        "Y": 5516.7980175695438
      },
      {
        "Id": "a0fabaf461d94fe88a4bbc56ec1e400b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25550.768425680759,
        "Y": 5948.3310532768346
      },
      {
        "Id": "5eb0009f5e134692a736201cd7e28354",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25565.636766595257,
        "Y": 6342.5540930046054
      },
      {
        "Id": "5c79b3460093445c8d45a52254145746",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25557.019572051937,
        "Y": 6747.2685389783046
      },
      {
        "Id": "a0193b4bd438446c84642da184c181f0",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25552.667766764465,
        "Y": 7133.6781931774649
      },
      {
        "Id": "1c12735526214e01bd8456206ab83007",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25574.645402051527,
        "Y": 7519.8057880270244
      },
      {
        "Id": "e700a1f561794d8a905dc41328ad6b60",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25062.067815803046,
        "Y": 2392.5606971470643
      },
      {
        "Id": "de5bb8a167d54d308ec59c00594dbebc",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24750.971914838559,
        "Y": 2459.3119772117243
      },
      {
        "Id": "c5c4f2cd5c1d4bbd83010e34526e0414",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25291.785022342858,
        "Y": 2393.625595718644
      },
      {
        "Id": "3255682d6b824eda8653f3e883a74b31",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25076.32569197386,
        "Y": 2003.4736439988937
      },
      {
        "Id": "4e6f7454d0044c4b92f696c4e0238c23",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24765.229791009366,
        "Y": 2068.6375233160343
      },
      {
        "Id": "509c8104adff43788c1f3dea34cb293a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25306.042898513668,
        "Y": 2004.5385425704735
      },
      {
        "Id": "51719cfc139647189038895af8999cd4",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25545.413787430047,
        "Y": 2409.8544447693439
      },
      {
        "Id": "d8614cb702ab430380441963484658ad",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 25564.210567107468,
        "Y": 2044.5656024911241
      },
      {
        "Id": "6599cf262f354ff399771a0ed69ebefb",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30750.566276256352,
        "Y": 8559.0453680356186
      },
      {
        "Id": "039f446258fd4e10be7392a06eb57e99",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30439.470375291861,
        "Y": 8625.7966481002768
      },
      {
        "Id": "3ab8f15d0cd346b08944fe242aef7d71",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30980.283482796163,
        "Y": 8560.1102666071856
      },
      {
        "Id": "7c8ba4f1930c411eb1098be06e786222",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30979.045346781713,
        "Y": 7391.6160841553065
      },
      {
        "Id": "53f0cf61c62d402caf05bf7dd29c59dc",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30980.471722195191,
        "Y": 7779.4389951955673
      },
      {
        "Id": "ea3de33b637343d98e2150c79e17e88f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30978.648891345023,
        "Y": 8172.2366685528868
      },
      {
        "Id": "8d6766be39fa475f9ddc809421ab7866",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31241.304741182441,
        "Y": 7789.2389988850773
      },
      {
        "Id": "cb2a4b236eaf43a9b868e61fdd1bb002",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31229.001665827112,
        "Y": 8178.6194788571265
      },
      {
        "Id": "64ff351967d34ff2ba5d11b14952072d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31237.0874305689,
        "Y": 8538.8686184953658
      },
      {
        "Id": "a9199462a0c142ca9e5b639841ddc6fd",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30749.3281402419,
        "Y": 7390.5511855837376
      },
      {
        "Id": "f6f0867ea29949d28dea9013aec98cb3",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30438.232239277411,
        "Y": 7457.3024656483976
      },
      {
        "Id": "05472bfdd6804097ae4f3d92759aeac8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30750.754515655382,
        "Y": 7778.3740966239966
      },
      {
        "Id": "1321b8aa73f2470391a79a134a85d229",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30439.658614690888,
        "Y": 7845.1253766886566
      },
      {
        "Id": "2ab851c8b5194d36963ee82f71448f07",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30748.931684805211,
        "Y": 8171.1717699813162
      },
      {
        "Id": "64ba8ca6d2c246c6b11ae0394d9c4955",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30437.835783840721,
        "Y": 8237.923050045978
      },
      {
        "Id": "0d712f8d7ea946739920af46c8d64f6c",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30746.916191651253,
        "Y": 5013.8302284701358
      },
      {
        "Id": "06c4275b367547249b70b8381b68c7ea",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30435.820290686759,
        "Y": 5080.5815085347958
      },
      {
        "Id": "6fa67fc27b14449d8855fb0542d8e318",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30976.633398191061,
        "Y": 5014.8951270417156
      },
      {
        "Id": "346265cb06024658a3d84adf3c541757",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30737.217417229022,
        "Y": 5411.4289318384863
      },
      {
        "Id": "c43df2c23bb940edb20635e64dd5ab13",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30426.121516264531,
        "Y": 5478.1802119031463
      },
      {
        "Id": "4c611f9fbff440abb8e234c15bd6bfe5",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30966.93462376883,
        "Y": 5412.493830410066
      },
      {
        "Id": "4b77c86da8a0450ba7a959e89ccbdf1f",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30748.7640299856,
        "Y": 5807.9287871337756
      },
      {
        "Id": "444400ccc4504896a37d83141854a038",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30437.66812902112,
        "Y": 5874.6800671984356
      },
      {
        "Id": "cc2b61fb17964e33aa1fc89a6789d5d0",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30978.481236525411,
        "Y": 5808.9936857053463
      },
      {
        "Id": "05cdc67247f746828cb03fb7e7cfbaf5",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30753.20634307271,
        "Y": 6207.2719619279378
      },
      {
        "Id": "72834b0590194cdfbb3bc9f8692de523",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30442.11044210822,
        "Y": 6274.0232419925978
      },
      {
        "Id": "96f3ad48d0aa4e2ba0bcb801794c20b2",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30982.923549612522,
        "Y": 6208.3368604995067
      },
      {
        "Id": "510bb4c0d2b740d4b981375f302d99ba",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30756.69000961844,
        "Y": 6603.8246445778277
      },
      {
        "Id": "77847df9e67e438991bf4079b4e3d812",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30445.594108653953,
        "Y": 6670.5759246424877
      },
      {
        "Id": "a77fc09f8b784c5cad81303ee6f178f9",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30986.407216158252,
        "Y": 6604.8895431493966
      },
      {
        "Id": "8231212ce1c3457d8e28b9b235690942",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30748.590587456303,
        "Y": 7000.8638402486467
      },
      {
        "Id": "d05489c3689745a49cc92884a8b9467f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30437.494686491809,
        "Y": 7067.6151203133068
      },
      {
        "Id": "0bb424621ad1451c8938efc00d9bdd86",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30978.307793996111,
        "Y": 7001.9287388202174
      },
      {
        "Id": "ec471c982d4c487182d5c7330b8e0260",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30745.280823357803,
        "Y": 4236.742069577137
      },
      {
        "Id": "bce23ea975c0481d88feb5cdb2a2ec8d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30434.184922393302,
        "Y": 4303.4933496417971
      },
      {
        "Id": "56271b7db8bf4a3ca6823b9e9b171ae4",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30974.998029897612,
        "Y": 4237.8069681487168
      },
      {
        "Id": "cd9037eaecf447d09888716b576d4425",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30744.586836723924,
        "Y": 4630.3586995442665
      },
      {
        "Id": "4841a8ea7ba34cc2b9936f85428c322d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30433.49093575943,
        "Y": 4697.1099796089266
      },
      {
        "Id": "f79fb0ac28284f3ca6a5ab89e3815919",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30974.304043263732,
        "Y": 4631.4235981158463
      },
      {
        "Id": "e28fec4fd58846358c3e91fa0598b25f",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30755.190051437781,
        "Y": 3839.778088345397
      },
      {
        "Id": "e0aee7e71f35429785f9c6a0ff0c54cb",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30446.95961321779,
        "Y": 3856.3837703813269
      },
      {
        "Id": "461e5661f36a48eab278dccac80ffc1e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30976.310869744091,
        "Y": 3845.1411810337258
      },
      {
        "Id": "1ca676feaf2944f8ba6aa4253511aa08",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30421.361477557792,
        "Y": 3516.6348839948669
      },
      {
        "Id": "02b9118d849446f7b7841874f8e30d3d",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30732.457378522282,
        "Y": 3449.8836039302068
      },
      {
        "Id": "57983bc95cb6459c84ae11e69e70a5ad",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30962.17458506209,
        "Y": 3450.9485025017866
      },
      {
        "Id": "05fff04bf80e42e6825df302b2fe49e0",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30425.568626271022,
        "Y": 3128.287353898696
      },
      {
        "Id": "9b9415c92c6d421ea2c3d935ed4a7d7e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30736.664527235524,
        "Y": 3061.536073834036
      },
      {
        "Id": "1df51a0a08294d0d92796d3e4dd2599e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30966.381733775332,
        "Y": 3062.6009724056157
      },
      {
        "Id": "f8bfe4f6139742529d67c350d2ada456",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28694.646286654934,
        "Y": 2975.3693656577761
      },
      {
        "Id": "1534781173484fa6b937ef126003808a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28458.093831591614,
        "Y": 3011.2729142365761
      },
      {
        "Id": "ce1c4c98c3454368892816b5236b1bd8",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30428.724587753422,
        "Y": 2734.9836385892168
      },
      {
        "Id": "82bd1b455be44c98b27a530b3fe28edb",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30739.820488717924,
        "Y": 2668.2323585245567
      },
      {
        "Id": "d8df060b92ec4fddb48e5bef52096c99",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30969.537695257732,
        "Y": 2669.2972570961365
      },
      {
        "Id": "9c64cc6e0e25468eb5acca627404edb6",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28451.391497157638,
        "Y": 2679.4286221050961
      },
      {
        "Id": "bbc3aada4e3340bf98021d9da40e1069",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28682.846993688509,
        "Y": 2568.1944424527364
      },
      {
        "Id": "d2f883fca4004b31977c1556a2795d7f",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27829.209314316802,
        "Y": 2521.7613934845858
      },
      {
        "Id": "aa58c164b440492093fe41f79866576a",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32232.825429631681,
        "Y": 4069.0553088434672
      },
      {
        "Id": "6b0633cdec294b53aeedc83628173b74",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28369.651335602415,
        "Y": 4251.6133730877054
      },
      {
        "Id": "dab2cdee2c2d43d0ac450db2ca4f3a78",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28133.098880539095,
        "Y": 4287.5169216665063
      },
      {
        "Id": "9661baf203d54f468c8834d1f9554556",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28126.396546105119,
        "Y": 3955.6726295350263
      },
      {
        "Id": "d6556b0795454668a764bdd8e7e13467",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28362.600623524726,
        "Y": 3901.4214205475464
      },
      {
        "Id": "d4125daf3390484394f2a9e403a325cd",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27584.349150860202,
        "Y": 3842.0848443540362
      },
      {
        "Id": "9d1926a5abde4fd5966bceab45e52762",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28358.948526471002,
        "Y": 3564.134862040436
      },
      {
        "Id": "46715e1ef6a042879cc75f0f3f2f6222",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28133.864253909684,
        "Y": 3755.6464637091567
      },
      {
        "Id": "cf315551ce7a4da2b8b991b4b853a85f",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28787.373016579884,
        "Y": 3607.8932764846768
      },
      {
        "Id": "1f41d2c41a324b129122786ccc50dc6a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28660.701441964073,
        "Y": 3677.1407056022663
      },
      {
        "Id": "36bebed2bd1c415db91ce84d35556341",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 29524.216897220977,
        "Y": 3208.4023053846449
      },
      {
        "Id": "42321a8afa374812bc229582b848271c",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 29527.881808430982,
        "Y": 3531.1994944864364
      },
      {
        "Id": "510d044f40c946f48434be43a89bfcde",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31225.804782995692,
        "Y": 3848.7153400766765
      },
      {
        "Id": "150eb04ee724423ca8d5e3bc1c8bb349",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31213.263814885202,
        "Y": 3473.772455778907
      },
      {
        "Id": "9ef9138ecbe44ac5a0143b1b058c7e7e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31206.760486771789,
        "Y": 3064.6654511383958
      },
      {
        "Id": "5ceba41b485f4ac5ba9b6173663fa70b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31198.29156000126,
        "Y": 2668.9077412336565
      },
      {
        "Id": "25496c8dee5647c49a6fb6f001d67fb0",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31218.9901555431,
        "Y": 4237.589353010696
      },
      {
        "Id": "980c90cde9384d5498383e7fb94c56e3",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31208.545548058573,
        "Y": 4628.0223452507371
      },
      {
        "Id": "af2da4b3c1814b4c83456de0559c22a0",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31205.633102600521,
        "Y": 5016.1161476231655
      },
      {
        "Id": "41bdb1b6b61a40e69c6241c662ec4ce6",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31213.77072427492,
        "Y": 5387.9991251470756
      },
      {
        "Id": "552ffbae176c4f479e67ca2cf294b46e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31222.192807194791,
        "Y": 5819.5321608543663
      },
      {
        "Id": "60057ff1400347be8da995cd57a02f2d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31237.061148109293,
        "Y": 6213.7552005821381
      },
      {
        "Id": "69c225f4e76b4113a23d94fa030448a3",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31228.443953565969,
        "Y": 6618.4696465558372
      },
      {
        "Id": "edd7c83fa3b94b5499c365e875e22cce",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31224.0921482785,
        "Y": 7004.8793007549975
      },
      {
        "Id": "f14832f1c2474e7197d1a063e48ee398",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31246.069783565559,
        "Y": 7391.0068956045579
      },
      {
        "Id": "de9d55e9b68f40499e0b23763779a010",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30733.492197317079,
        "Y": 2263.7618047245969
      },
      {
        "Id": "2d77c57a7c81465d9e5a8b81118d9ab7",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30422.396296352592,
        "Y": 2330.5130847892569
      },
      {
        "Id": "eec85c66b8064c0e8a757aad744ff9c1",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30963.20940385689,
        "Y": 2264.8267032961767
      },
      {
        "Id": "9132726271924e7c99b846663e15464f",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30747.750073487892,
        "Y": 1874.6747515764264
      },
      {
        "Id": "b6646e3548654bb7a429c7b5639362e4",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30436.654172523402,
        "Y": 1939.8386308935669
      },
      {
        "Id": "8904456623e2435f868ad97fcd6197f2",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30977.4672800277,
        "Y": 1875.7396501480061
      },
      {
        "Id": "787e6b4fdab5480bac231f1f0cd20ae4",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31216.838168944079,
        "Y": 2281.0555523468765
      },
      {
        "Id": "6a384ab14f1c428aae73d4e03545ad5c",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 31235.6349486215,
        "Y": 1915.7667100686567
      },
      {
        "Id": "3f3ee99372964bf390d0281dabe15968",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 35818.929933335879,
        "Y": 1132.7263300805421
      },
      {
        "Id": "baf2c601d59647e28834f1f5e53c9b6d",
        "Name": ">",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 35562.893400496163,
        "Y": 1029.1549064359538
      },
      {
        "Id": "eae3f274e0f746f29f5b07a2219340fc",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 35350.765905987362,
        "Y": 1382.9897869227884
      },
      {
        "Id": "c141ec9d85f24934b88c33204e34483e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 35155.44740120096,
        "Y": 1206.9049435834909
      },
      {
        "Id": "926f58999966422289946380770ba2dd",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 35445.2783211379,
        "Y": 1078.5370211750765
      },
      {
        "Id": "87786a888dd94d6c8d0bf3c204024ffa",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 36101.513649801382,
        "Y": 1105.2447935572868
      },
      {
        "Id": "8628760ccb024e07b61a20b041d1a119",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 36571.372886373458,
        "Y": 1101.1754762330822
      },
      {
        "Id": "620e60b4d46c4fcb9e768926703d10e3",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 34865.920227869618,
        "Y": 1065.7386958453594
      },
      {
        "Id": "f85c98e080e04eb6acb0bb729e54a532",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2354.870347293439,
        "Y": -2149.171775923237
      },
      {
        "Id": "6eb60b2767484b308780d18f538379f7",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2652.0914925623579,
        "Y": -2148.9419010199367
      },
      {
        "Id": "31f7f59bc7b84cf7ac2dc47d45f40996",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2928.8173182841379,
        "Y": -2017.2429941109417
      },
      {
        "Id": "b052cf6cb65b42d68e5f0975a6c08dfd",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3271.9851947146167,
        "Y": -1957.8800231469436
      },
      {
        "Id": "4df1efa47b5a4b0f8a619da254951fde",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2928.4453643224219,
        "Y": -1824.9625614783158
      },
      {
        "Id": "0541bce4ea9b4837b82d361040d8fbab",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3552.9859890858866,
        "Y": -2136.1753578975968
      },
      {
        "Id": "ae80c1740d534f11bf24cdc15252434b",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10533.054341343424,
        "Y": 1361.3720686442693
      },
      {
        "Id": "73e352e2385b4c2483ce2da4564c0e5e",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10020.625774907401,
        "Y": 1439.0397016660304
      },
      {
        "Id": "228e43690ac64d19b070695c40767251",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16361.053061490054,
        "Y": 1444.4799825806876
      },
      {
        "Id": "a29a6c0c5790476caefe7b676412b1c3",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 16761.527570231789,
        "Y": 1362.0529618170451
      },
      {
        "Id": "72376e4c19424467b5fb8f8412a6b16c",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5385.0163888261059,
        "Y": -301.49791606965084
      },
      {
        "Id": "8e4dbeeb8dd64e959fa6937163548227",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5084.7306435180635,
        "Y": -145.84184032027622
      },
      {
        "Id": "708a55abcf684d7e946b25d1b912f6e5",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 23416.922266663583,
        "Y": 1450.0228855618914
      },
      {
        "Id": "04d896ff8c4849dd8517f09e1f9d72c2",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9153.9652889221488,
        "Y": 443.6141978794933
      },
      {
        "Id": "09ab425b17224c6e9a045cc6548101ac",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 23055.025979289287,
        "Y": 1530.4682732881015
      },
      {
        "Id": "07e4f85a78b54be6aca8955cda036c62",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28977.572053523119,
        "Y": 1342.8453889002267
      },
      {
        "Id": "1f07c63319be45e8b08127f48721cae6",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 28667.950967027584,
        "Y": 1417.6308039734695
      },
      {
        "Id": "31679b8016204e339d504521939c534a",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 34162.936218982373,
        "Y": 1224.2243333670554
      },
      {
        "Id": "ebaaa66a34c84c1fb33fefafeadeb16c",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 33832.721337846742,
        "Y": 1345.8342111996967
      },
      {
        "Id": "a78e9b9b1f204d1db53d5f748a467218",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27425.532004042474,
        "Y": 643.88450876440811
      },
      {
        "Id": "b7aeaf390b5d44c5b4e8aa0fdc593b04",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15704.765557716806,
        "Y": 1395.91450549254
      },
      {
        "Id": "5a14d0f677f3441f99ad4917a609e09f",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15873.965526947315,
        "Y": 1332.3827188982002
      },
      {
        "Id": "0bb29da86b7c433bb5e35a9de9c79ce3",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15405.274975644785,
        "Y": 1392.0834684917575
      },
      {
        "Id": "181369cda88a4633bcf5114fb963b0fd",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12919.092164407937,
        "Y": 8667.8918969800034
      },
      {
        "Id": "9959a6c46cf342bc8d69862b339d4714",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12458.339771764839,
        "Y": 8833.177845989012
      },
      {
        "Id": "290b6f6b543d4946b8fecdf38ff3597d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12607.99626344344,
        "Y": 8734.6431770446634
      },
      {
        "Id": "ba9669c97aa640c488a7a5eb43873b42",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13148.809370947738,
        "Y": 8668.9567955515722
      },
      {
        "Id": "aa3a5a557dca4855881d46f9fb1f195f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13147.571234933339,
        "Y": 7500.462613099693
      },
      {
        "Id": "87b0cfc7199d480ab3a4c580d0c5c32d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13148.99761034674,
        "Y": 7888.2855241399429
      },
      {
        "Id": "49fe56255ad74e3e8cd3206e15cbefaf",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13147.174779496638,
        "Y": 8281.0831974972734
      },
      {
        "Id": "52497759c05c458794d03edc59350863",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13409.830629334037,
        "Y": 7898.085527829453
      },
      {
        "Id": "0ccc11d2279b4947ba33f20c3306981c",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13397.527553978738,
        "Y": 8287.4660078015131
      },
      {
        "Id": "0bae5ab006794afda72fe2bdfb9b4652",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13405.61331872054,
        "Y": 8647.7151474397524
      },
      {
        "Id": "382bdfc529d34ee987a1eb9f5b7e9e9b",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12917.854028393538,
        "Y": 7499.3977145281224
      },
      {
        "Id": "ea6611d5d17b43dbaabbc15473fb465c",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12457.10163575044,
        "Y": 7664.6836635371237
      },
      {
        "Id": "8be4d17ac9bf4e248d08ace31575fa62",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12606.758127429037,
        "Y": 7566.1489945927824
      },
      {
        "Id": "4f9c9e6cc93c437ca57a56856ff4772e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12919.280403806939,
        "Y": 7887.2206255683723
      },
      {
        "Id": "6152103476df4277bc976ff7ad0a1b70",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12458.528011163939,
        "Y": 8052.5065745773736
      },
      {
        "Id": "9f55ed52562e43eab8ef833fa4dd3894",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12608.184502842438,
        "Y": 7953.9719056330323
      },
      {
        "Id": "146c221586ac4c15817e94ac48fca76d",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12917.457572956837,
        "Y": 8280.0182989257028
      },
      {
        "Id": "72b1611c08e44e71986d95d059668809",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12456.705180313738,
        "Y": 8445.3042479347023
      },
      {
        "Id": "2b4bd961c48b4a658d736db00c4430dd",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12606.361671992339,
        "Y": 8346.7695789903628
      },
      {
        "Id": "5ff5df3ff2d9447f8390946c1a9b1451",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12915.442079802839,
        "Y": 5122.6767574145233
      },
      {
        "Id": "b0e33373a0db48d19abfde653f03f0a5",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12454.68968715974,
        "Y": 5287.9627064235337
      },
      {
        "Id": "87c430fee56d4ec58d6146b2dca60ea5",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12604.346178838337,
        "Y": 5189.4280374791833
      },
      {
        "Id": "63ceeb75530c4fa2ab840b650196c95a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13145.159286342639,
        "Y": 5123.7416559861031
      },
      {
        "Id": "4cc71ccf45ec4868a7deb5d502b31515",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12905.74330538064,
        "Y": 5520.2754607828738
      },
      {
        "Id": "a32e60543f324a5692eeef7a956d8d41",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12444.990912737538,
        "Y": 5685.5614097918824
      },
      {
        "Id": "712b2783065046deb2e7fc9a9229d37e",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12594.647404416139,
        "Y": 5587.0267408475338
      },
      {
        "Id": "8e880c2c6c8b46cea6d1c3b5d2069bed",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13135.460511920437,
        "Y": 5521.3403593544535
      },
      {
        "Id": "18abb32be01644929407f325ea226b00",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12917.28991813724,
        "Y": 5916.7753160781631
      },
      {
        "Id": "0d499ab65140490caaec907c2a39e0a9",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12456.537525494137,
        "Y": 6082.0612650871626
      },
      {
        "Id": "30e743fc0fce444d84fc555b8c4263ba",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12606.194017172738,
        "Y": 5983.5265961428231
      },
      {
        "Id": "890e7bcdcde8463bb49331e490f5ec84",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13147.00712467704,
        "Y": 5917.8402146497338
      },
      {
        "Id": "6faf1347282a4643a00ab15850f8f1aa",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12921.73223122434,
        "Y": 6316.1184908723226
      },
      {
        "Id": "37992c7d54dc42fa918724f948b6f0f0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12460.979838581237,
        "Y": 6481.4044398813239
      },
      {
        "Id": "aea842712f1b468298fcdee4f355e32d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12610.636330259838,
        "Y": 6382.8697709369826
      },
      {
        "Id": "449ed22e123e450f9e598a989385179a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13151.44943776414,
        "Y": 6317.1833894438932
      },
      {
        "Id": "10d3947aa73a4b67adc9f2ef1428be46",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12925.21589777004,
        "Y": 6712.6711735222125
      },
      {
        "Id": "d18dcb785d784881bab444274520e92e",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12464.463505126938,
        "Y": 6877.9571225312138
      },
      {
        "Id": "9c717b77a21a49d390c97368b45506fe",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12614.119996805539,
        "Y": 6779.4224535868725
      },
      {
        "Id": "37292105a0bb487aa811285f0cf2fa06",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13154.933104309837,
        "Y": 6713.7360720937832
      },
      {
        "Id": "ab9c4700132b41e6afbda4145b31e7ef",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12917.11647560794,
        "Y": 7109.7103691930333
      },
      {
        "Id": "6739e27d3f144ef3a372376dbcd10173",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12456.364082964838,
        "Y": 7274.9963182020329
      },
      {
        "Id": "d0e7cd6bfbf54fbbb515f3d81367efbb",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12606.020574643439,
        "Y": 7176.4616492576934
      },
      {
        "Id": "db27e671624e4bcf91fbe531cf74cb8c",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13146.833682147737,
        "Y": 7110.7752677646022
      },
      {
        "Id": "525bedb3ea614dc7b7dfb8d8b8d09aea",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12913.80671150944,
        "Y": 4345.5885985215227
      },
      {
        "Id": "c7d40f3e7af14d82a9c8b9cde719e22b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12453.054318866338,
        "Y": 4510.8745475305332
      },
      {
        "Id": "2ad28911d19a4a08b35ecb1de941faff",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12602.710810544939,
        "Y": 4412.3398785861827
      },
      {
        "Id": "ab52b82b13294320aa49567b58227b4a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13143.523918049237,
        "Y": 4346.6534970931025
      },
      {
        "Id": "efa05a4bedfd4834ab336603a7ff9382",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12913.112724875538,
        "Y": 4739.2052284886522
      },
      {
        "Id": "d5cee9f6b6f94985ad5007711ae39ff1",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12452.36033223244,
        "Y": 4904.4911774976626
      },
      {
        "Id": "f9faa705fcb94000b603f561dd7825ec",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12602.016823911037,
        "Y": 4805.9565085533122
      },
      {
        "Id": "96a5c4bc73e3427ebe49aca47d686e6a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13142.829931415339,
        "Y": 4740.2701270602338
      },
      {
        "Id": "41a723f2c38f48cfb22d61184257c34e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12923.715939589338,
        "Y": 3948.6246172897831
      },
      {
        "Id": "76f89a4feea24c819f096975c95171b4",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12441.472576362537,
        "Y": 4116.7760290432925
      },
      {
        "Id": "b849fd29fbc24ca093009503efb897e1",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12615.48550136934,
        "Y": 3965.230299325704
      },
      {
        "Id": "0102f7d5aa254519b627526c7fb1f910",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13144.83675789564,
        "Y": 3953.9877099781138
      },
      {
        "Id": "e226e843fd514efa8180ab86564ddb55",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12440.230874030838,
        "Y": 3724.0160818836034
      },
      {
        "Id": "8faf16ae28a544cb95bee95d044e4d36",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12589.887365709439,
        "Y": 3625.481412939253
      },
      {
        "Id": "6c24183f68fb438f882eb6266bd47ae6",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12900.983266673838,
        "Y": 3558.730132874593
      },
      {
        "Id": "2b6a1ded3d1d486394f26b7f90b00cf9",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13130.700473213639,
        "Y": 3559.7950314461737
      },
      {
        "Id": "39c4fc2d7eef4ae893f47881de224102",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12444.43802274404,
        "Y": 3335.6685517874334
      },
      {
        "Id": "88dfae41d6ec4ef19e226846f9d61676",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12594.094514422637,
        "Y": 3237.1338828430839
      },
      {
        "Id": "33171fa64f6c45e5934fd76605da9b9d",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12905.190415387138,
        "Y": 3170.3826027784239
      },
      {
        "Id": "5fa71349f43640ca92b65e50bf39bf49",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13134.907621926939,
        "Y": 3171.4475013500037
      },
      {
        "Id": "a397d4d457e749a4886a5094eaa3ab77",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10866.053908772739,
        "Y": 3147.6140418578439
      },
      {
        "Id": "ea6191e821974d56824f82b6c36b52db",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10642.46925655714,
        "Y": 3180.6358564704828
      },
      {
        "Id": "dcbd7f17bee74c53a75895567d8a9e58",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12447.59398422644,
        "Y": 2942.3648364779433
      },
      {
        "Id": "cceb1af15ed14f8d892830b3d98d4c53",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12597.250475905037,
        "Y": 2843.8301675335938
      },
      {
        "Id": "d2407c4f48e34585ab0a68038de6aea6",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12908.346376869538,
        "Y": 2777.0788874689338
      },
      {
        "Id": "d9fe947479184119acf62dcadd3f4d5f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13138.063583409339,
        "Y": 2778.1437860405135
      },
      {
        "Id": "eef6523938cb406191f89a4f34fea320",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10619.917385309238,
        "Y": 2788.2751510494841
      },
      {
        "Id": "4d6479c8c7754602a2f3f679783d429c",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10851.372881840138,
        "Y": 2677.0409713971235
      },
      {
        "Id": "7b6345c3ebe04545b1fc39cf7b13f17a",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9997.7352024684387,
        "Y": 2630.6079224289738
      },
      {
        "Id": "477451dfe57e405d9c504daa2b0886d5",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12441.265692825638,
        "Y": 2537.8942826779935
      },
      {
        "Id": "a09409745cd342b9a83666a2f052de15",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 14401.351317783237,
        "Y": 4177.9018377878438
      },
      {
        "Id": "b513aa22cc5142efb8a310be8d659d63",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10538.177223754037,
        "Y": 4360.4599020320838
      },
      {
        "Id": "c8c7ca4fe73a4ccf951ab98e82a784be",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10301.624768690739,
        "Y": 4396.3634506108829
      },
      {
        "Id": "33c6da5867b742e0aa84574df33cc6cf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10294.922434256738,
        "Y": 4064.5191584794034
      },
      {
        "Id": "a827c4034987412eaa46b30aa1408627",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10531.126511676337,
        "Y": 4010.2679494919335
      },
      {
        "Id": "69c193e2ff6f4565902c3b26e1479caf",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9752.8750390118385,
        "Y": 3950.9313732984233
      },
      {
        "Id": "3185b823cb6c4773843ee154dc5ce91b",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10521.646321471539,
        "Y": 3649.6690183806536
      },
      {
        "Id": "78c6e4dd654f4f85a50ae494c992c43c",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10302.39014206124,
        "Y": 3864.4929926535428
      },
      {
        "Id": "0011e67a0e904284a98accef6ea27f27",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10955.898904731437,
        "Y": 3716.7398054290538
      },
      {
        "Id": "ede529dcb4db4eec9667a787a6b9fdc6",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 10829.22733011564,
        "Y": 3785.9872345466433
      },
      {
        "Id": "7ddabd6f56fa4a58a24f48a43823615e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 11692.547270851837,
        "Y": 3193.3175904052237
      },
      {
        "Id": "df45b906be284ce5b2f9e1197cd1a990",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 11694.646500834739,
        "Y": 3662.941568152994
      },
      {
        "Id": "2f6b22df2cd547a48319772eaf3736d8",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13394.330671147238,
        "Y": 3957.5618690210636
      },
      {
        "Id": "55115438ca9f411dafa68773bd6c7067",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13381.789703036839,
        "Y": 3582.6189847232931
      },
      {
        "Id": "c2bb592db3d34cf19a2a911a28964849",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13375.286374923338,
        "Y": 3173.5119800827838
      },
      {
        "Id": "d0d6befbee4242a28ef2a3c7476e9788",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13366.817448152839,
        "Y": 2777.7542701780435
      },
      {
        "Id": "8af19821ce3148b48587b813c3dcc9d6",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13387.516043694739,
        "Y": 4346.4358819550835
      },
      {
        "Id": "b6248543fce344849712bda1ff2a0a28",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13377.071436210137,
        "Y": 4736.8688741951137
      },
      {
        "Id": "631365ba09554bd68cb3d91bc62ae75a",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13374.158990752139,
        "Y": 5124.9626765675439
      },
      {
        "Id": "1a8ecf974aff4e81855ac53636c4c189",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13382.296612426539,
        "Y": 5496.8456540914631
      },
      {
        "Id": "279d104e1ccd4d82a082c3d77d5cef51",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13390.718695346439,
        "Y": 5928.3786897987429
      },
      {
        "Id": "84a6dc62d2db4570af5864973e69c0f8",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13405.587036260838,
        "Y": 6322.6017295265137
      },
      {
        "Id": "3928ddfb19274340abc0b145ca9d2b34",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13396.96984171754,
        "Y": 6727.3161755002129
      },
      {
        "Id": "3064eea963894ffdbe6b18972133a127",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13392.618036430138,
        "Y": 7113.7258296993732
      },
      {
        "Id": "6f1333843d58488a9b644373608e4871",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13414.595671717138,
        "Y": 7499.8534245489427
      },
      {
        "Id": "86e10e15552d4e5ea8697589f0ad5c6c",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12902.018085468639,
        "Y": 2372.6083336689831
      },
      {
        "Id": "ce345dcec6264d1facd20dd8becb5240",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12590.922184504239,
        "Y": 2439.3596137336431
      },
      {
        "Id": "d2905e3de0d84e109c2514e1ad3f6799",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13131.73529200844,
        "Y": 2373.6732322405628
      },
      {
        "Id": "e413eecb34214235abe8aab8fb7f7127",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12916.275961639438,
        "Y": 1983.5212805208034
      },
      {
        "Id": "34a0658784754cfc92ec3e41ca0d28ec",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12435.690093138239,
        "Y": 2146.8238819440035
      },
      {
        "Id": "c0ca7828c7a448df9ae45879fb95bee1",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12605.180060675038,
        "Y": 2048.685159837944
      },
      {
        "Id": "cb8100a7bd014a6eb4923fd9a745b35e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13145.993168179337,
        "Y": 1984.5861790923932
      },
      {
        "Id": "a1da207eb8f44f0d9cabbeff39b70351",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13385.36405709564,
        "Y": 2389.9020812912536
      },
      {
        "Id": "cd0b8b5bc1774316a4f7a4f62cdd744b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 13404.160836773137,
        "Y": 2024.6132390130438
      },
      {
        "Id": "36759a63fcb7498d9551bf9e45e3974d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9150.18653375786,
        "Y": 1369.9779682456729
      },
      {
        "Id": "5e53abc7a3e14c27ae7d9b4b59ba6a1f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9398.7739218686638,
        "Y": 1384.8749169771511
      },
      {
        "Id": "48f187d81d7646f0b02a497b1986f38f",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9581.064638450951,
        "Y": 1364.8762475856452
      },
      {
        "Id": "d13ae072cc66457ab230022586af6b21",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6968.10349409845,
        "Y": 8605.57638629475
      },
      {
        "Id": "f1afd69662fc4f119759958327665019",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6480.097887664,
        "Y": 8764.50325208577
      },
      {
        "Id": "c4d8030b01654676baa6582fd05194a9",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6657.00759313395,
        "Y": 8672.32766635941
      },
      {
        "Id": "6f5d1bbc448f488cb6cc5e1b524b05dc",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7197.82070063825,
        "Y": 8606.64128486631
      },
      {
        "Id": "33e36c2736f543968ac0fbbee296b5e7",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7196.58256462385,
        "Y": 7438.14710241444
      },
      {
        "Id": "d6f108d306be431a9ebbf218043e72fb",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7198.00894003725,
        "Y": 7825.97001345469
      },
      {
        "Id": "b6c3c72dcdde456f99f6fd930b98da51",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7196.18610918715,
        "Y": 8218.76768681202
      },
      {
        "Id": "956bc08b084d417ab2005504a5ca44ad",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7458.84195902455,
        "Y": 7835.7700171442
      },
      {
        "Id": "30ae15f0768c4a959da90b686e239e1e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7446.53888366925,
        "Y": 8225.15049711626
      },
      {
        "Id": "9bcd266d5ae042ff813ca5ea36b36223",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7454.62464841105,
        "Y": 8585.39963675449
      },
      {
        "Id": "374ab5fce2554a15a140b5f2e560f688",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6966.86535808405,
        "Y": 7437.08220384286
      },
      {
        "Id": "13a758763c854819b84d116f6bc66bb8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6470.31377238385,
        "Y": 7590.4350884995
      },
      {
        "Id": "8125e8096d3548b8b6f6b3afb8bf0a2f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6655.76945711955,
        "Y": 7503.83348390752
      },
      {
        "Id": "f0bfa716e34e44d5b62874b56d0a0cf5",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6968.29173349745,
        "Y": 7824.90511488311
      },
      {
        "Id": "911e929ec1a3481388412ab2cf5d873d",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6471.04910839188,
        "Y": 7981.54864041414
      },
      {
        "Id": "485d4218f7564eeeafffb9af7a207021",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6657.19583253295,
        "Y": 7891.65639494777
      },
      {
        "Id": "75272b6446cf437ab1330abaf787d1ea",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6966.46890264735,
        "Y": 8217.70278824044
      },
      {
        "Id": "1afaf54f01774b0c8a772039d278d30c",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6471.97946594635,
        "Y": 8377.17200551532
      },
      {
        "Id": "8eaee89718304f5f854f12ad2f3b5557",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6655.37300168285,
        "Y": 8284.4540683051
      },
      {
        "Id": "58c7a401d0b94e379801ec21d1bf9537",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6964.45340949335,
        "Y": 5060.36124672927
      },
      {
        "Id": "428182e59f3c4e09b3f2b16cc9aadaaa",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6503.70101685025,
        "Y": 5225.64719573828
      },
      {
        "Id": "fe69cc850f294ff5876bd75f2eb294e3",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6653.35750852885,
        "Y": 5127.11252679393
      },
      {
        "Id": "efed447ffd5c4aa7b3bd10418f172d0c",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7194.17061603315,
        "Y": 5061.42614530085
      },
      {
        "Id": "7eafc263b432493e9e718eda7bafa133",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6954.75463507115,
        "Y": 5457.95995009762
      },
      {
        "Id": "5f9e8f3237e04f919277cfeb917bb0f6",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6469.68088226133,
        "Y": 5618.38162707327
      },
      {
        "Id": "484d90d74dd644c8be8f27e2a052de4f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6643.65873410665,
        "Y": 5524.71123016228
      },
      {
        "Id": "7bd858ce7c2044ccb8f140fb5b03be3f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7184.47184161095,
        "Y": 5459.0248486692
      },
      {
        "Id": "6f56172e7ac14e0092cc505811b23a22",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6966.30124782775,
        "Y": 5854.45980539291
      },
      {
        "Id": "5dc17fe0d0ad45f1a54798e8acf29dae",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6468.33882391846,
        "Y": 6006.21483394147
      },
      {
        "Id": "5b3c1a4d854a40f09c291f41e2f91b38",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6655.20534686325,
        "Y": 5921.21108545757
      },
      {
        "Id": "d1b745cae55c460087b06a9c6644d641",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7196.01845436755,
        "Y": 5855.52470396448
      },
      {
        "Id": "2d93b62612454a078ab9c9994c6bc4c5",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6970.74356091485,
        "Y": 6253.80298018706
      },
      {
        "Id": "3f71a59286fc43b98763fce8d9d994c8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6470.35086012914,
        "Y": 6402.31802959727
      },
      {
        "Id": "f6f39fa1cbe646a18bd979ec6016a6f5",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6659.64765995035,
        "Y": 6320.55426025172
      },
      {
        "Id": "407ea768fe5040a3ab7a0a89d9cc96af",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7200.46076745465,
        "Y": 6254.86787875864
      },
      {
        "Id": "c37035ac68874480a9163879ff17c521",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6974.22722746055,
        "Y": 6650.35566283695
      },
      {
        "Id": "68b06123c46e411a9af645bf388f0228",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6471.62774252577,
        "Y": 6809.36454800221
      },
      {
        "Id": "8ecc9ee1c81f4df7bf2e9cd83ea5054f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6663.13132649605,
        "Y": 6717.10694290161
      },
      {
        "Id": "02e2e53cd93541ee99dca751ff14a249",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7203.94443400035,
        "Y": 6651.42056140853
      },
      {
        "Id": "afccea2a75a84bddb3361909263bd507",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6966.12780529845,
        "Y": 7047.39485850778
      },
      {
        "Id": "22f66d35fd6e4538b25b43cb46334a95",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6474.36280946384,
        "Y": 7206.86594441837
      },
      {
        "Id": "973917c1a24540e18b4172013e745045",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6655.03190433395,
        "Y": 7114.14613857244
      },
      {
        "Id": "b4f0fbe87910417aab2b4a4c79424d41",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7195.84501183825,
        "Y": 7048.45975707934
      },
      {
        "Id": "01a1b5b190944e2db3b2e523d06c9deb",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6962.81804119995,
        "Y": 4283.27308783626
      },
      {
        "Id": "f63fe9d20053423b8abd4d5ab4a94e30",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6479.36646005674,
        "Y": 4441.33656777706
      },
      {
        "Id": "181a4ffac98e4c74a5649d19a8de6d8f",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6651.72214023545,
        "Y": 4350.02436790092
      },
      {
        "Id": "9e8dc28c4a594277b5485440fe45a025",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7192.53524773975,
        "Y": 4284.33798640784
      },
      {
        "Id": "12183dbbf1614fb7924f695c772b9048",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6962.12405456605,
        "Y": 4676.88971780339
      },
      {
        "Id": "dc19bdbf4f234a7eac4202e890fc6284",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6501.37166192295,
        "Y": 4842.1756668124
      },
      {
        "Id": "f3c9cb64d2164e1093189e1ec4a56679",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6651.02815360155,
        "Y": 4743.64099786805
      },
      {
        "Id": "29380587365345cb9bdbe8b045bee1b7",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7191.84126110585,
        "Y": 4677.95461637498
      },
      {
        "Id": "44259427ec1c42658dc1c9f52043d731",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6972.72726927985,
        "Y": 3886.30910660452
      },
      {
        "Id": "71e98b1afb2544cab2b33294f3535c02",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6490.48390605305,
        "Y": 4054.46051835803
      },
      {
        "Id": "1d6929f8765b4dfbbf9b93fbd2710ea2",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6664.49683105985,
        "Y": 3902.91478864045
      },
      {
        "Id": "a8c961b7d5134415ac773cd542a47868",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7193.84808758615,
        "Y": 3891.67219929286
      },
      {
        "Id": "6482b5562d6248178ac8d9a1eb644c2d",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6489.24220372135,
        "Y": 3661.70057119835
      },
      {
        "Id": "989bd4d1bff141aa8d3331097a3b3763",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6638.89869539995,
        "Y": 3563.16590225399
      },
      {
        "Id": "abdb452b481547a8918fcdfba8286efd",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6949.99459636435,
        "Y": 3496.41462218933
      },
      {
        "Id": "5cc6e2dce1bb4948881da567b45eb902",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7179.71180290415,
        "Y": 3497.47952076092
      },
      {
        "Id": "88359e1673c4416ba4c81edbfe61f92b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6450.97699246585,
        "Y": 3253.68991148704
      },
      {
        "Id": "e8372dff27e2403190c0c616bfc5d66c",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6643.10584411315,
        "Y": 3174.81837215783
      },
      {
        "Id": "03c672b88de641bfa0a4dafdcc663ef8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6954.20174507765,
        "Y": 3108.06709209317
      },
      {
        "Id": "d9c8ee542fad454e91ec8f3220f12d0b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7183.91895161745,
        "Y": 3109.13199066475
      },
      {
        "Id": "cee39260fc2e44b2ab6703154202ab83",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4915.06523846325,
        "Y": 3085.29853117259
      },
      {
        "Id": "5ced960df3184252a2eb63c9cfbc469f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4691.48058624765,
        "Y": 3118.32034578522
      },
      {
        "Id": "fe827ec266504d15affc452c98c703af",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6496.60531391695,
        "Y": 2880.04932579268
      },
      {
        "Id": "6a87274b2dfe43948d383e9a3cbd5d9c",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6646.26180559555,
        "Y": 2781.51465684834
      },
      {
        "Id": "e6ac43a1b18a4379875e17a08876c44a",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6957.35770656005,
        "Y": 2714.76337678368
      },
      {
        "Id": "2518b8084a194ee7bfb7784d2d28b314",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7187.07491309985,
        "Y": 2715.82827535526
      },
      {
        "Id": "7d7a59df588e4d15a061c2dc61d744b9",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4668.92871499975,
        "Y": 2725.95964036423
      },
      {
        "Id": "41828dd6bf4b43bdbae2a4073d068311",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4900.38421153065,
        "Y": 2614.72546071187
      },
      {
        "Id": "2936967180c3492e8fef9b8f65d6528a",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4046.74653215895,
        "Y": 2568.29241174372
      },
      {
        "Id": "711464e4a2a24b9eb61fc47883dc4da6",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6490.27702251615,
        "Y": 2475.57877199274
      },
      {
        "Id": "ef782749ff3c4de9951a8baf749db9d2",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8450.36264747375,
        "Y": 4115.58632710258
      },
      {
        "Id": "773cad87852c433f8e713caf7f84133b",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4587.18855344455,
        "Y": 4298.14439134683
      },
      {
        "Id": "dc2615d21e2f4ef286c1a67cf5cd1222",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4350.63609838125,
        "Y": 4334.04793992563
      },
      {
        "Id": "7fa5bdc4eb6846bab4ec9243a5a2f733",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4343.93376394725,
        "Y": 4002.20364779415
      },
      {
        "Id": "9d7ee6b1a3c2434da5f929ba964353d7",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4580.13784136685,
        "Y": 3947.95243880668
      },
      {
        "Id": "cbcb86359fee4cd898bc07c74dd93d59",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3801.88636870238,
        "Y": 3888.61586261316
      },
      {
        "Id": "d9b69177c07848f7b5e511121e584be2",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4570.65765116205,
        "Y": 3587.3535076954
      },
      {
        "Id": "a381be4ee8cd43bb9d34018ca2ea24cd",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4351.40147175175,
        "Y": 3802.17748196828
      },
      {
        "Id": "76c0dc46264f4d35803c4d91374f73c6",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5004.91023442195,
        "Y": 3654.4242947438
      },
      {
        "Id": "85630154f4564545977c0de1cc3a2545",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4878.23865980615,
        "Y": 3723.67172386139
      },
      {
        "Id": "b13f42397bd44df7a5c9e5d63cf60aef",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5741.55860054235,
        "Y": 3131.00207971997
      },
      {
        "Id": "e08be1c7938d4953849452d0f6ae0cf6",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5743.65783052525,
        "Y": 3600.62605746774
      },
      {
        "Id": "08b86f7fd34d4f46bd0359c35f7d0c5d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7443.34200083775,
        "Y": 3895.24635833581
      },
      {
        "Id": "a62015cc4f1c44609b7d6c7ebb5765b6",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7430.80103272735,
        "Y": 3520.30347403803
      },
      {
        "Id": "5737890b854147bfb5df1f7cc176b106",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7424.29770461385,
        "Y": 3111.19646939753
      },
      {
        "Id": "2acef0b300d1414aa8cc55e4dbc02073",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7415.82877784335,
        "Y": 2715.43875949279
      },
      {
        "Id": "50eb6ce2f9fa4b2fa02cf5899c81d5f8",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7436.52737338525,
        "Y": 4284.12037126983
      },
      {
        "Id": "db1d6ce5c3454ca3a84a219a252b561e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7426.08276590065,
        "Y": 4674.55336350986
      },
      {
        "Id": "ffcdecfa8b734629a75dceeea3e1bcc8",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7423.17032044265,
        "Y": 5062.64716588229
      },
      {
        "Id": "54f4524c03f547c9a1abf044d0c82563",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7431.30794211705,
        "Y": 5434.53014340621
      },
      {
        "Id": "46ae68e70cc04fbda1a5929142306f42",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7439.73002503695,
        "Y": 5866.06317911349
      },
      {
        "Id": "33ec27a25db04e51addf29197b7150f0",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7454.59836595135,
        "Y": 6260.28621884126
      },
      {
        "Id": "24e4ea5060394b07ba0b9ee1d34ec11b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7445.98117140805,
        "Y": 6665.00066481496
      },
      {
        "Id": "2375facdf9ad41d1a4583e180c0cd234",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7441.62936612065,
        "Y": 7051.41031901412
      },
      {
        "Id": "05e741562714489893030c8b15aa5c99",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7463.60700140765,
        "Y": 7437.53791386368
      },
      {
        "Id": "3e0886061fe14a6f8197416d4fac43f7",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6951.02941515915,
        "Y": 2310.29282298372
      },
      {
        "Id": "a7372bd8f33647bb845ed7b62f9e7d9a",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6639.93351419475,
        "Y": 2377.04410304838
      },
      {
        "Id": "c38fa0d41f6b48ca91e3d5108c23cbb8",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7180.74662169895,
        "Y": 2311.3577215553
      },
      {
        "Id": "425fdda0ec22448f8d5bced8c062f48d",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6965.28729132995,
        "Y": 1912.18764369501
      },
      {
        "Id": "a97d8a37e95f436fb88b7ae8bad946ff",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6445.41555702464,
        "Y": 2060.93685177628
      },
      {
        "Id": "a6487acd2b1a43c398468f63056f93c9",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6650.98910675124,
        "Y": 1838.51958862062
      },
      {
        "Id": "f52daf04263e4002bfc65bf023002bc7",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7205.85054895024,
        "Y": 1919.01685308301
      },
      {
        "Id": "979fe2e5a818413b98cba1c2a5a03d98",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7434.37538678615,
        "Y": 2327.586570606
      },
      {
        "Id": "6134fa194833455a926dc1a507cc4d20",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7453.17216646365,
        "Y": 1962.29772832779
      },
      {
        "Id": "e443433d7cb741fdab71466c50fc4f0b",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15452.767156636681,
        "Y": 725.75525632544225
      },
      {
        "Id": "10fcaeab2fee4a479de7945e94536cf7",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 15431.285678794227,
        "Y": 457.1681611101418
      },
      {
        "Id": "80fba511af1741f69e221ca5719d1626",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22233.128076876117,
        "Y": 648.11563501624073
      },
      {
        "Id": "0e4962e6ae26407f9ba59ec221f9678c",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 22236.669642925262,
        "Y": 785.641372067699
      },
      {
        "Id": "13e682914945410eb711ba3a341797bd",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 27451.802826665979,
        "Y": 504.87055089945966
      },
      {
        "Id": "b1b776c67ebd4331ad73597fe2b32078",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 32834.553501060305,
        "Y": 385.6510102308298
      },
      {
        "Id": "0447a064e4e444aaac9a41bb66481fde",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3747.3011130299583,
        "Y": 1449.6809185935524
      },
      {
        "Id": "baf870a672c544e3846ff0b7e1f33bc0",
        "Name": "List.Slice",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3746.1461008894385,
        "Y": 1222.0695465097408
      },
      {
        "Id": "54b0a666fe754721956ea37754ba11a1",
        "Name": "Retornos",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3559.1029245886984,
        "Y": 1279.6734917174638
      },
      {
        "Id": "2f9d882577814669978cc75eb222a0a2",
        "Name": "Retornos",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3575.2550678402986,
        "Y": 1510.3734004107466
      },
      {
        "Id": "bb361da01f944ecab2435bb80dc5d3f5",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4053.5211040474887,
        "Y": 1385.024218549019
      },
      {
        "Id": "7b42ddd6b25141fd9358e870c7984cd1",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4496.5953552444089,
        "Y": 1027.2967558935459
      },
      {
        "Id": "67b48e8456cd4db8ac18e8332e8f469b",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4187.4131897357,
        "Y": 1180.975849376108
      },
      {
        "Id": "e1a1b5a6f0df46e5a5a5ef4b306ba4a2",
        "Name": "String.FromList",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 36356.663145644125,
        "Y": 1119.3156067033788
      },
      {
        "Id": "60d390db5ce840dbbb8963fa62656e81",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5265.731978739921,
        "Y": 3852.3762224377856
      },
      {
        "Id": "f95b72822efb412abeec55a45613b90e",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 11220.833505199578,
        "Y": 3928.1549881529113
      },
      {
        "Id": "2f141cf6b9614e0e9e32e005a6cb0ea6",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 17610.7116494717,
        "Y": 3973.7345079492416
      },
      {
        "Id": "99bde537de604f21884b872869f8e6d9",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 23196.453779815427,
        "Y": 3970.078585011177
      },
      {
        "Id": "73c725a83fee4bf195933b13624e64a2",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 29067.199207576403,
        "Y": 3864.9886405034454
      },
      {
        "Id": "387819befd04418f8907a2fc31e99601",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6631.3511244343708,
        "Y": 2079.8464261971035
      },
      {
        "Id": "b19552a74bcc4580a6a4cd31ea5f804f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6623.3019658316471,
        "Y": 2633.08898915471
      },
      {
        "Id": "3f9d4b6f206849e0a80abbdcb9a54bc3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6635.557576761682,
        "Y": 2982.9309738847437
      },
      {
        "Id": "5be9477259114f3cac6d7b139e7d7817",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6628.8726980725705,
        "Y": 3388.4802810240162
      },
      {
        "Id": "506b6d8d47844f56ab57cbc5b907263f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6637.0450364708295,
        "Y": 3758.3661555150507
      },
      {
        "Id": "fba2c17c8b5d40b58697dcea87cb6f3b",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6656.347876674381,
        "Y": 4133.5467787424586
      },
      {
        "Id": "96b033abaffb47f3801b22a1279d4e1f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6642.934719833409,
        "Y": 4577.2127357899926
      },
      {
        "Id": "17be372707314578bb621a72cb1518c4",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6643.3707715140754,
        "Y": 4921.19206256424
      },
      {
        "Id": "f7ac7479da3a403b9fa18ff2ba00acc6",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6632.6169068788158,
        "Y": 5324.2223937025865
      },
      {
        "Id": "2393adf26d134430abb920ec42f1cb61",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6642.9347198334108,
        "Y": 5732.8077867045022
      },
      {
        "Id": "76989797eca64a0a9c36e3102eb58beb",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6641.9029385379517,
        "Y": 6111.4715221380957
      },
      {
        "Id": "cc305f6dee91474880d6362d6bf61c8b",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6647.0618450152488,
        "Y": 6547.9150101174146
      },
      {
        "Id": "f7af6a388be74538805fefbfc2cd559f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6650.157188901625,
        "Y": 6930.7058707328451
      },
      {
        "Id": "17911eb0b1d84c769d23b620c1a33785",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6642.9347198334108,
        "Y": 7353.736201871191
      },
      {
        "Id": "f59e6a078551422cbe77c1817dca84ef",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6648.093626310706,
        "Y": 7714.8596552819754
      },
      {
        "Id": "183ca3f58ef043bd86faefa91e3ff4c3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6651.1889701970858,
        "Y": 8125.50861087481
      },
      {
        "Id": "598f413be44d43b581ddb2aa30615222",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6662.5385644471389,
        "Y": 8517.5855031493757
      },
      {
        "Id": "9743e70a53394a71a7632a2ebda99b5b",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6671.8245961062721,
        "Y": 8896.2492385829682
      },
      {
        "Id": "eab43113a59b485f97edb60e57fdde31",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12607.975184728173,
        "Y": 8968.3691424194476
      },
      {
        "Id": "1ae467c1dc574017a790ffe88abc6737",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12610.220158950015,
        "Y": 8586.2461052215658
      },
      {
        "Id": "06b66be4d8d54cc9bd8a6a302d1ae134",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12610.401570580938,
        "Y": 8181.485106477925
      },
      {
        "Id": "5f9778b82cce43cab8bb2d7c303f08c3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12606.153126106461,
        "Y": 7778.9078550017766
      },
      {
        "Id": "75f46c96d0f546e08543fb67ad11a8fb",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12609.065923745842,
        "Y": 7403.94719453382
      },
      {
        "Id": "1fac819f2d0e4496ae435b88da8933f0",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12600.144984580687,
        "Y": 7025.8877863312728
      },
      {
        "Id": "fb201c0f24944f708cec8a0b4dccad16",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12602.815143634805,
        "Y": 6622.3411151300834
      },
      {
        "Id": "1df79561f3c2454ab1f84543bf726b22",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12610.340343626578,
        "Y": 6212.4189406770092
      },
      {
        "Id": "065955ccdddc4662a69f14c0b3a391e9",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12596.381817276771,
        "Y": 5811.8462940695626
      },
      {
        "Id": "01732cc827f54a8d8939f02ff9d4e88c",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12596.441909615056,
        "Y": 5424.0167116534021
      },
      {
        "Id": "ebc9bb272dfd485ab82ac5e314057225",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12606.042673662221,
        "Y": 5034.8235875722185
      },
      {
        "Id": "18637362f8954acca4a6cce9385ef088",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12612.525225510133,
        "Y": 4649.3326396264674
      },
      {
        "Id": "514be2a12d344e188d54ffb6d9dcbc63",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12629.397684115394,
        "Y": 4210.2790849313269
      },
      {
        "Id": "15950c4238ac43c2813c1e690e980d28",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12589.339033326094,
        "Y": 3842.017065232501
      },
      {
        "Id": "0c8ab0370c894ce59e2e8adfb7997d64",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12571.941890223055,
        "Y": 3470.9780901533732
      },
      {
        "Id": "f1d1b750ebb747aa82de5ef7243836e4",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12592.463975969333,
        "Y": 3081.5721912474555
      },
      {
        "Id": "68afff99338648a89ec8bd8337b2e5f3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12582.514566215497,
        "Y": 2686.7592835816317
      },
      {
        "Id": "37b4bfeb924241bf892fd56caa4fa149",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 12591.716825406313,
        "Y": 2261.5108859028192
      },
      {
        "Id": "07d6e82352044841a2933028b0a17908",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19013.195689855736,
        "Y": 8949.2114988417034
      },
      {
        "Id": "55db16a757c149649e2a979e6c0d6499",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19017.251746590482,
        "Y": 8542.38113235438
      },
      {
        "Id": "53edc256a5474580ab89e97c05e9f008",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19010.34951513839,
        "Y": 8136.9621516859361
      },
      {
        "Id": "274312bbdb254802bb18f308d98bb9a7",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19008.736625517995,
        "Y": 7729.27810462508
      },
      {
        "Id": "ad129db1c6144915b95db9a55b311f8f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19010.989990370628,
        "Y": 7342.95292869253
      },
      {
        "Id": "28bdd9a1ffdc445d81da83aa888a19ec",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19021.177367970806,
        "Y": 6951.0541371398931
      },
      {
        "Id": "dc1232da53ff42e1b831109610f99fe5",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19019.564478350421,
        "Y": 6553.4387338645956
      },
      {
        "Id": "3b7a172d755245d4b3989ba55a1f6f85",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19020.335388937066,
        "Y": 6159.9864195988766
      },
      {
        "Id": "02289a9a534a4d9a98cd9d98650e2636",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19003.577719040695,
        "Y": 5716.0946964618961
      },
      {
        "Id": "34ff904d15634c5fa5947be7c7c0add3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19011.049357277934,
        "Y": 5357.9127485035078
      },
      {
        "Id": "59a1605c75d149a7b9139ac600066c14",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19018.838313381224,
        "Y": 4974.1543228229739
      },
      {
        "Id": "0677734789c44a68ab2ab9f6ebf43b86",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19009.507536104637,
        "Y": 4581.2540052711884
      },
      {
        "Id": "dc0f6ab4cd5c430a869993a810a2de11",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19024.403147211597,
        "Y": 4153.8950451495048
      },
      {
        "Id": "29ac88c78f5f401b83595dd0bda576cc",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19005.100307008048,
        "Y": 3797.986327379911
      },
      {
        "Id": "f9fc5648f89f422ba8accf3251223b8c",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19005.822694205704,
        "Y": 3399.9338218351481
      },
      {
        "Id": "ab0165c1fa2d4a74a16574a895c4dff8",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18999.16548450094,
        "Y": 3012.1739658877
      },
      {
        "Id": "0b2ed65155ba41308bb9ca2579f85954",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 19004.699324762736,
        "Y": 2605.9987190502043
      },
      {
        "Id": "4b28f5036bb547078c0427988eea5a8c",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 18981.616943779754,
        "Y": 2196.55421989323
      },
      {
        "Id": "f49f94ac60c94e45b582cc196e4abe32",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24741.723483997812,
        "Y": 2225.0621184417787
      },
      {
        "Id": "b7ffa61e81ea4916af693c9d83e7d39f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24764.80586498071,
        "Y": 2634.5066175987495
      },
      {
        "Id": "5983be294d304b138d020851947d9104",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24759.27202471891,
        "Y": 3040.6818644362493
      },
      {
        "Id": "91a5a7bc309b4edd920852584ff4d6d2",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24765.929234423711,
        "Y": 3428.4417203836992
      },
      {
        "Id": "07b464cb0cc84167804b03806e43cc2f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24765.206847226011,
        "Y": 3826.4942259284589
      },
      {
        "Id": "662425a74cae4f0a9257b23027e7bfbc",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24784.50968742961,
        "Y": 4182.4029436980481
      },
      {
        "Id": "443a8644e28343ce852c88c143968940",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24769.61407632261,
        "Y": 4609.76190381974
      },
      {
        "Id": "16e67dc1b955453fbdd461a9ca5f20a3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24778.944853599209,
        "Y": 5002.6622213715191
      },
      {
        "Id": "4c82730c31fa4f2ca7954ee071569461",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24771.155897495912,
        "Y": 5386.4206470520576
      },
      {
        "Id": "7888f4a5217845bd91efc0333f15c197",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24753.485676551791,
        "Y": 5810.8933826054226
      },
      {
        "Id": "35d5a8cd34de42afb39c7705859579c6",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24780.441929155109,
        "Y": 6188.4943181474291
      },
      {
        "Id": "82d98afb576249e895529b44fc1d67ed",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24779.67101856841,
        "Y": 6581.946632413149
      },
      {
        "Id": "03be358961584d0c898600c3d9a17519",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24781.283908188809,
        "Y": 6979.5620356884383
      },
      {
        "Id": "f2329453c1a845298cfd39ed117b27cd",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24771.096530588609,
        "Y": 7371.46082724108
      },
      {
        "Id": "a0cf4cf9a8ab421a803a6a4d6c420a37",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24768.843165736009,
        "Y": 7757.78600317363
      },
      {
        "Id": "656be755c8274edeba1f2282743ddeb7",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24771.708395691086,
        "Y": 8141.675583875649
      },
      {
        "Id": "42990ee2ecb64100a96c71fc9991f896",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24758.573181788375,
        "Y": 8523.30009818525
      },
      {
        "Id": "d9eb7f285166440db9d5feea5dfa52b3",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 24773.30223007371,
        "Y": 8977.71939739025
      },
      {
        "Id": "7ce8b9a36a7547aeba612c2e3d199b7c",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30401.364486778886,
        "Y": 2195.7700278427651
      },
      {
        "Id": "d4ffc9846dcf4d049385ece2652469f8",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30424.446867761784,
        "Y": 2605.214526999735
      },
      {
        "Id": "4194db61c0fe4850ae9a9ed1601444a0",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30418.913027499984,
        "Y": 3011.3897738372348
      },
      {
        "Id": "b75300a6445b41e6be2e1028db8d1596",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30425.570237204785,
        "Y": 3399.1496297846847
      },
      {
        "Id": "19ac871c1e81442e8b7d9eee75b9a318",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30419.858410028213,
        "Y": 3712.381655688625
      },
      {
        "Id": "2a97019a905846bd9c613a642a3dcaf5",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30444.150690210685,
        "Y": 4153.110853099035
      },
      {
        "Id": "2f42dabda20f4847a9cdaf9261822ebb",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30429.255079103685,
        "Y": 4580.469813220725
      },
      {
        "Id": "d9200fab3e2647598c587b3d9df0f992",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30438.585856380283,
        "Y": 4973.3701307725059
      },
      {
        "Id": "1013b9e478ff4ab089823bab1906eb7d",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30430.796900276986,
        "Y": 5357.1285564530444
      },
      {
        "Id": "e8f7ade47446475b92d93f805253700e",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30423.325262039783,
        "Y": 5715.3105044114345
      },
      {
        "Id": "2601ad9b66104540ac0bace1980bb49f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30440.082931936184,
        "Y": 6159.2022275484142
      },
      {
        "Id": "0a1b69e0f9964157984d5b00599ba511",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30439.312021349484,
        "Y": 6552.6545418141341
      },
      {
        "Id": "2e29bbc989404659b022de5ed68be797",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30440.924910969883,
        "Y": 6950.2699450894252
      },
      {
        "Id": "74df64e489b1418ca3a361a2d870332e",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30430.737533369684,
        "Y": 7342.1687366420647
      },
      {
        "Id": "f511840a85b04fcea72ae1d13e60ce11",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30426.82102185746,
        "Y": 7710.1992993187514
      },
      {
        "Id": "5147aab9cf184d7db82fb4e000200831",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30432.55647505786,
        "Y": 8074.6925366261776
      },
      {
        "Id": "88a01d65881a4aa0ba7224e1d9138250",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30432.080455748841,
        "Y": 8455.5173480909
      },
      {
        "Id": "1802c5d635054ec2ab7a26569453abd5",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 30440.365185656345,
        "Y": 8810.5910404765564
      },
      {
        "Id": "736913cd148b41428b172eba2df1fc04",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2112.33480304961,
        "Y": 1117.6458350542289
      },
      {
        "Id": "9b2fc646f53c478b8ef86b3e54cf72fb",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2044.7681223562822,
        "Y": 716.667066255162
      },
      {
        "Id": "124cd55cf5ca46fe98b9f74fe9693625",
        "Name": "ReplaceByCondition",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1918.7081921905901,
        "Y": 1121.5755426451349
      },
      {
        "Id": "49614581d85946cdbdf4573a46036ea5",
        "Name": "ReplaceByCondition",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1905.50487782674,
        "Y": 308.292295051454
      },
      {
        "Id": "c0d664a532d74b9680b5223396121808",
        "Name": "ReplaceByCondition",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1762.0199491872024,
        "Y": 720.964426227837
      },
      {
        "Id": "4f26a0a40957445e95b73f2ab0226bbd",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1707.00713175984,
        "Y": 1264.8341514737929
      },
      {
        "Id": "1f3776f3746f45fa8f4f886c9e1fe87c",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2130.94388354693,
        "Y": 319.71962109321174
      },
      {
        "Id": "ab6f09aa4b7a48fb800a87a4eb78c866",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1649.00937463038,
        "Y": 298.22287495461086
      },
      {
        "Id": "abb3dd0fb58b46f68087e81d657340fe",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1547.69117597852,
        "Y": 1221.6927269612959
      },
      {
        "Id": "e27c95e1b9ee4966ab818dbe153836c7",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1531.6653270460201,
        "Y": 217.08463501656382
      }
    ],
    "Annotations": [
      {
        "Id": "2065c0d695fc490baebd75bd59830551",
        "Title": "Cabos dentro de caixas e modelados como conduite",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "711799435ea544b7bf1c92c884568888",
          "6b45cb627bb74fc3aa8f08c37f858e31",
          "8874d9c34e1d43c0b0ccca35ebb7cbb7",
          "c6e894fc609c440c96bac78b1c3da0f1",
          "3311ba0c8fcf4637b552a981965115af",
          "99640e582c054fa2950e244742c839b3",
          "3794f6371cba46f68611f665bf0a8ada",
          "f26ce196f31f40a7b97f0b97835c6f34",
          "4096523e1ea74e199975c82821ba6503",
          "c1903a02fb07450d855440d23ca69c71",
          "81acf1bb22984d0bb81f6f8aa8556c1a",
          "428285aefd054f1fbdcb87ffe36f1dae",
          "a49522455f2343eda7964927f2347d35",
          "06d95876aa8a4f57916ad02f21b458a8",
          "3735cbfc38e84aafbdc202a59a2edd71",
          "7a0a4995d8ef441e9b75f58e6a99a0a1",
          "c20485f5cae744b2ac008c39a42524e2",
          "4495e6d204184472a2f66600b9951fe3",
          "9a04f29a0ad54e48ae5489f0035df7d4",
          "275fe3ec0dd7407d85f51be1d5256e72",
          "8bb45464e593403e8b926ad117f1543c",
          "1e029989d0ed49609f77315ae45d18af",
          "9fdf77fc2edf41b2b4766d28c2803740",
          "3e85b5bfa3674016882cd79b804c9f5e",
          "966671f7e8554a0bbab13595b8a3d89a",
          "baf65d41f5ff40f8bc772daa576badb5",
          "7ec7362edebf4700b5d415060fd0ec92",
          "13926a2ca81d4b708abd2a8278c8a1c2",
          "4689bfbd3bb74877b6ddc4d0928040f8",
          "aebda548f69d4dce94794d9c37b340da",
          "1e3787eb281f468c80154b943c8f3998",
          "197761c9ef1b40d6ba11daafb5b8014e",
          "726f6bd40550412393262aa0ecdcc02e",
          "b1b2d0a2a12e4bebb5ed99c7221477ae",
          "d89d7d5b6d274ee3b6d25de6e4ace489",
          "8cf42e354088472ebabf054f2a9e0a75",
          "fec4dda2e5524397a4015bc666d8ddad",
          "749e9a2531f746d4b5536ab67b231c68",
          "0aaea6ae40904a958775f14ca74efca3",
          "8a5de4ea6549413cb1bfd5e6cea2141e",
          "cba7f20d6195459f85c3ce79eda997ac",
          "13ee484b62fa40a8b5f59f2723506e50",
          "31c6ffab7ce7465ebc877154b77cf737",
          "8d9987f83a204dc189454eb037b8fd88",
          "fec894e262634fb3a0bcb88ec954f69c",
          "dc7709e307e54201af25a71415efee54",
          "174358f71cce4bb9bae4a23479d6423b",
          "1132cf14a34d4380b7f6aaccd0ad6f06",
          "e36a8fd8d48c476480a52d5b2ea66c17",
          "e24afc457573473ebb1a7db6e0bc907f",
          "b4ce53b5cdb44713891cde7695d6beac",
          "651940114cdb44c59ebc6f74e5105910",
          "970cb8fc7fc142deb38f70b7f4524c31",
          "0bf98cca2ebe4c4bbba5f12100f4852f",
          "f2e4468a88874631a1a690869095eee9",
          "0a04106339c3444994bf800624f70ddc",
          "e9e98fbfb605430dadd77fb064cee60d",
          "8df3c6f6d51a4beaaddf474ec66e2ed0",
          "7902519511c14bd2ad7470492be8d9a8",
          "8f5b01259df7489baceac60cd95efa24",
          "70ea1bcfa8f64135974fb3fe0d26befc",
          "f25f6506a2874f079b4b883f267dd982",
          "27c61046f30a40ffb984ea5e1cf73f0f",
          "ab80e451dba34bc6a2c8d9357d3599f0",
          "6af976371f594a8e91552722ecc56895",
          "e3e34310d6524c83bf769fe929e6518b",
          "dfbd944cfe67412a8e4100640baa293c",
          "a50b7b9abdac47d992810920c6bd231f",
          "9f17f4fd7e36454d820ca8c3518620db",
          "b49e31fc70e9459891db9ada0181f8b2",
          "814d1cfbfc6f4825b4dd0a33753e6e5a",
          "11bc756a54ef4b69b0f09430c0b850f9",
          "bbc526d645df4d09982d28c2fa4caf51",
          "080aad95b79a4e93a105fd0d97f62e58",
          "5f3b4067b57149119c29a3c823eca7d9",
          "0edf538f6c784735a352ae738f234364",
          "6eb402a8a7814e9d87af177091e5b055",
          "09204cee5213427ea72a5bae1ed7bf97",
          "1c06dc9685274959b7da876e4cb7c1a0",
          "2dc2b24018a94df98dbb6fc3812cafe1",
          "0e6d9c3cf66b4319981602cc42ab626e",
          "debb951e87bc4a91836355655519f418",
          "29764d7f12904699ae84b143a62c98ea",
          "0e9c300f2eec4762855177c733dea857",
          "49012652526947aa84c1b43648136dd6",
          "dc2ce1f1f3c043b1a9ec24714029f76d",
          "e7b8a1efaf7742ff909c9e5e587aa256",
          "7d0442efa8c242f98d40efcd9b049187",
          "457387e1fe9144f39340bcab96bb0911",
          "1e212fccc8204abe8b59d734c1520fa9",
          "2b9daa4628ce41f2a0127e603a9feff2",
          "2d7f9d4a6fdc4f94bdba275ffcf3087a",
          "1dc29b5614514e3f8036ba7c022da2cb",
          "93694b93f7ed41c6bd50fa8502535d74",
          "aa78f6cff5df467e98b84983c865ced4",
          "bf20593eb86e408c8269e1a00d63680a",
          "d58508d5927742bd878da7beddecfcac",
          "f812c9b855f14e2e8ac6989f052825c5",
          "fe7cefb9b5b44d8c9be612489edbe5af",
          "8f8d4ec321464f9fa4279954da2bf52a",
          "37d5b6458ea14ca49db46c8501b8a974",
          "8c848fef24754e0c86ebcf97baa8c35e",
          "9b89ab9eaf2544cba05497d7cbd66047",
          "12c8880566a44e5d81497ea3fe5053ee",
          "9e3b6032b3914cab801ffd52fe1b3584",
          "27fc6846452b4906bb0a13d539a5205b",
          "d658ca84f1494e36a028a03a9a99f462",
          "07d6e82352044841a2933028b0a17908"
        ],
        "HasNestedGroups": false,
        "Left": 16154.600890417252,
        "Top": 1904.7578268000625,
        "Width": 4833.4762787714826,
        "Height": 7176.4536720416409,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1977.7578268000625,
        "InitialHeight": 7116.4536720416409,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0ac90ee182944d87925b1873f576f039",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "275fe3ec0dd7407d85f51be1d5256e72",
          "8bb45464e593403e8b926ad117f1543c",
          "1e029989d0ed49609f77315ae45d18af",
          "9fdf77fc2edf41b2b4766d28c2803740"
        ],
        "HasNestedGroups": false,
        "Left": 18856.415538565238,
        "Top": 5043.9133036937737,
        "Width": 905.46959918288121,
        "Height": 370.28594900901044,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 5116.9133036937737,
        "InitialHeight": 310.28594900901044,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3a55d6d17c014d77a443ebfc737548d0",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3e85b5bfa3674016882cd79b804c9f5e",
          "966671f7e8554a0bbab13595b8a3d89a",
          "baf65d41f5ff40f8bc772daa576badb5",
          "7ec7362edebf4700b5d415060fd0ec92"
        ],
        "HasNestedGroups": false,
        "Left": 18832.09551446122,
        "Top": 5441.5120070621242,
        "Width": 920.09084886466735,
        "Height": 318.44697286447627,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 5514.5120070621242,
        "InitialHeight": 258.44697286447627,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b5c76ecdf03946388d321c35f807e4cc",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "13926a2ca81d4b708abd2a8278c8a1c2",
          "4689bfbd3bb74877b6ddc4d0928040f8",
          "aebda548f69d4dce94794d9c37b340da",
          "1e3787eb281f468c80154b943c8f3998"
        ],
        "HasNestedGroups": false,
        "Left": 18858.263376899587,
        "Top": 5838.0118623574135,
        "Width": 905.46959918288121,
        "Height": 370.28594900900134,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 5911.0118623574135,
        "InitialHeight": 310.28594900900134,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6feda2b3f26e413c96e967e640a6d49f",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "197761c9ef1b40d6ba11daafb5b8014e",
          "726f6bd40550412393262aa0ecdcc02e",
          "b1b2d0a2a12e4bebb5ed99c7221477ae",
          "d89d7d5b6d274ee3b6d25de6e4ace489"
        ],
        "HasNestedGroups": false,
        "Left": 18862.7056899867,
        "Top": 6237.3550371515748,
        "Width": 905.46959918288121,
        "Height": 370.28594900899952,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 6310.3550371515748,
        "InitialHeight": 310.28594900899952,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b7196f58da874839afb803bc83c0212a",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8cf42e354088472ebabf054f2a9e0a75",
          "fec4dda2e5524397a4015bc666d8ddad",
          "749e9a2531f746d4b5536ab67b231c68",
          "0aaea6ae40904a958775f14ca74efca3"
        ],
        "HasNestedGroups": false,
        "Left": 18866.189356532428,
        "Top": 6633.9077198014647,
        "Width": 905.46959918288121,
        "Height": 370.28594900899952,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 6706.9077198014647,
        "InitialHeight": 310.28594900899952,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1cc92d0a0ab54e8592c476452e88db32",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8a5de4ea6549413cb1bfd5e6cea2141e",
          "cba7f20d6195459f85c3ce79eda997ac",
          "13ee484b62fa40a8b5f59f2723506e50",
          "31c6ffab7ce7465ebc877154b77cf737"
        ],
        "HasNestedGroups": false,
        "Left": 18858.089934370288,
        "Top": 7030.9469154722838,
        "Width": 905.46959918288121,
        "Height": 370.28594900900134,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 7103.9469154722838,
        "InitialHeight": 310.28594900900134,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b90740c382d443169aa133f183671a62",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "81acf1bb22984d0bb81f6f8aa8556c1a",
          "428285aefd054f1fbdcb87ffe36f1dae",
          "a49522455f2343eda7964927f2347d35",
          "3311ba0c8fcf4637b552a981965115af"
        ],
        "HasNestedGroups": false,
        "Left": 18858.827487155882,
        "Top": 7420.6342608073755,
        "Width": 905.46959918288121,
        "Height": 370.28594900900134,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 7493.6342608073755,
        "InitialHeight": 310.28594900900134,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "abe65a53304f4e48ae3b87f6f087fb37",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "06d95876aa8a4f57916ad02f21b458a8",
          "3735cbfc38e84aafbdc202a59a2edd71",
          "7a0a4995d8ef441e9b75f58e6a99a0a1",
          "99640e582c054fa2950e244742c839b3"
        ],
        "HasNestedGroups": false,
        "Left": 18860.253862569367,
        "Top": 7808.45717184763,
        "Width": 905.46959918288121,
        "Height": 370.28594900900134,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 7881.45717184763,
        "InitialHeight": 310.28594900900134,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a6b6479821ac4d71a3e0ca0fc4ec5a5d",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c20485f5cae744b2ac008c39a42524e2",
          "4495e6d204184472a2f66600b9951fe3",
          "9a04f29a0ad54e48ae5489f0035df7d4",
          "3794f6371cba46f68611f665bf0a8ada"
        ],
        "HasNestedGroups": false,
        "Left": 18858.431031719196,
        "Top": 8201.2548452049559,
        "Width": 905.46959918288121,
        "Height": 370.28594900899952,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 8274.2548452049559,
        "InitialHeight": 310.28594900899952,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1f26244e1e684764813b179efd02f689",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8d9987f83a204dc189454eb037b8fd88",
          "fec894e262634fb3a0bcb88ec954f69c",
          "dc7709e307e54201af25a71415efee54",
          "174358f71cce4bb9bae4a23479d6423b"
        ],
        "HasNestedGroups": false,
        "Left": 18854.780170271777,
        "Top": 4266.8251448007741,
        "Width": 905.46959918288121,
        "Height": 370.28594900901135,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 4339.8251448007741,
        "InitialHeight": 310.28594900901135,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "44dd212d7aaf4949b39e32204ae1f9e5",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1132cf14a34d4380b7f6aaccd0ad6f06",
          "e36a8fd8d48c476480a52d5b2ea66c17",
          "e24afc457573473ebb1a7db6e0bc907f",
          "b4ce53b5cdb44713891cde7695d6beac"
        ],
        "HasNestedGroups": false,
        "Left": 18854.086183637908,
        "Top": 4660.4417747679045,
        "Width": 905.46959918288121,
        "Height": 370.28594900901044,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 4733.4417747679045,
        "InitialHeight": 310.28594900901044,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1d77348057b84a3080c507a12ebe7977",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "651940114cdb44c59ebc6f74e5105910",
          "970cb8fc7fc142deb38f70b7f4524c31",
          "0bf98cca2ebe4c4bbba5f12100f4852f",
          "f2e4468a88874631a1a690869095eee9"
        ],
        "HasNestedGroups": false,
        "Left": 18852.502859383709,
        "Top": 3869.8611635690349,
        "Width": 909.05974991744006,
        "Height": 305.36198141065688,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 3942.8611635690349,
        "InitialHeight": 245.36198141065688,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7739ef2ec60d485caa0359ee3a3617c8",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8df3c6f6d51a4beaaddf474ec66e2ed0",
          "0a04106339c3444994bf800624f70ddc",
          "e9e98fbfb605430dadd77fb064cee60d",
          "7902519511c14bd2ad7470492be8d9a8"
        ],
        "HasNestedGroups": false,
        "Left": 18841.95672543627,
        "Top": 3479.9666791538439,
        "Width": 905.46959918287757,
        "Height": 370.28594900901044,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 3552.9666791538439,
        "InitialHeight": 310.28594900901044,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "51e2eb130b6046a09e8af84c4a4f4c20",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f25f6506a2874f079b4b883f267dd982",
          "8f5b01259df7489baceac60cd95efa24",
          "70ea1bcfa8f64135974fb3fe0d26befc",
          "27c61046f30a40ffb984ea5e1cf73f0f"
        ],
        "HasNestedGroups": false,
        "Left": 18846.163874149497,
        "Top": 3091.6191490576739,
        "Width": 905.46959918288121,
        "Height": 370.28594900901044,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 3164.6191490576739,
        "InitialHeight": 310.28594900901044,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0ad60606a47f46f8911f2a7f5906af3d",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a50b7b9abdac47d992810920c6bd231f",
          "e3e34310d6524c83bf769fe929e6518b",
          "dfbd944cfe67412a8e4100640baa293c",
          "9f17f4fd7e36454d820ca8c3518620db"
        ],
        "HasNestedGroups": false,
        "Left": 18849.319835631897,
        "Top": 2698.3154337481874,
        "Width": 905.46959918288121,
        "Height": 370.28594900900953,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2771.3154337481874,
        "InitialHeight": 310.28594900900953,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "578b0fae05864712b164367924657ef7",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fe7cefb9b5b44d8c9be612489edbe5af",
          "bbc526d645df4d09982d28c2fa4caf51",
          "8f8d4ec321464f9fa4279954da2bf52a",
          "37d5b6458ea14ca49db46c8501b8a974"
        ],
        "HasNestedGroups": false,
        "Left": 18842.99154423107,
        "Top": 2293.8448799482339,
        "Width": 905.46959918287757,
        "Height": 370.28594900901044,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2366.8448799482339,
        "InitialHeight": 310.28594900901044,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "19ff2124e5c04c149728cd48125f4ddf",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8c848fef24754e0c86ebcf97baa8c35e",
          "9b89ab9eaf2544cba05497d7cbd66047",
          "12c8880566a44e5d81497ea3fe5053ee",
          "9e3b6032b3914cab801ffd52fe1b3584"
        ],
        "HasNestedGroups": false,
        "Left": 18837.415944543689,
        "Top": 1904.7578268000625,
        "Width": 925.30307504106167,
        "Height": 368.30260142319275,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1977.7578268000625,
        "InitialHeight": 308.30260142319275,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bb9b7026ade64fbaa6c59654050dab68",
        "Title": "Selecionar familia genérica para atribuir parâmetros SOMA",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3f2930e639524104884d2098b4448567",
          "7fddc8fb8c954860a2df0d7a22c43634",
          "33a7bc11b2a444e3802c7c5d2e4fc52b",
          "7bf2b5eafbad4faeabbfc7584be7ba14",
          "44340526a5b344abb9b3ca86918e837f",
          "c1efda31f3e84611a77d59b2d1aeca27"
        ],
        "HasNestedGroups": false,
        "Left": 1912.0442067073955,
        "Top": -1138.2745299212283,
        "Width": 1453.1156417924535,
        "Height": 564.44963109469245,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1065.2745299212283,
        "InitialHeight": 504.44963109469245,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "8234188b967c4cf3b6943635ffd35265",
        "Title": "Fase C - Preta",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fff2c4e5120442d38eb6a0ddcd35d0a6",
          "5ea68abc58274b8a9eac209d4003b2d5",
          "76702725510f44eead608eb86fe05b03",
          "0264cb85964b4cfb99a5092fc294e8f9",
          "5792102c31474414bc37d62ab8993723",
          "430acdcbe6d6464b93318ad433792444",
          "bfcf03ca68df41379a4d9d91a5d0b9ac",
          "09ab425b17224c6e9a045cc6548101ac",
          "708a55abcf684d7e946b25d1b912f6e5",
          "b042e3423a9141bb8e02620e041a7a6e"
        ],
        "HasNestedGroups": false,
        "Left": 21398.657820720429,
        "Top": 964.10508584215631,
        "Width": 2331.264445943154,
        "Height": 733.56743386368362,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1037.1050858421563,
        "InitialHeight": 638.36318744594519,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "acc0e170ca5441a4960152f217f96299",
        "Title": "Neutro - Azul",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bae4b11f4f44439c9cbadc8a13009aa9",
          "cfe04e5b74454badbd45285fc5abbcf8",
          "f3a741d8bc004daf9099c3fee10ee27d",
          "346b786bc94d4fa1960ab4cd3b3c19fa",
          "1b6cd2aa45a94da3bb25466207f6918d",
          "60365327e5e34a8d9fc017c743c29f59",
          "f38818b9a79042629779841061d094b3",
          "fdd89884bd6a473d994f2ebd1e5ef918",
          "07e4f85a78b54be6aca8955cda036c62",
          "1f07c63319be45e8b08127f48721cae6"
        ],
        "HasNestedGroups": false,
        "Left": 26932.112156931056,
        "Top": 839.89101324673629,
        "Width": 2358.4598965920632,
        "Height": 739.73979072673319,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 912.89101324673629,
        "InitialHeight": 649.73979072673319,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6bf2d85c324d4b84b2b31cd409215071",
        "Title": "Proteção - Verde",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6cfc8da815ed4356b4ab6430f814773f",
          "5aa9c989391d41df8735d941af6ff791",
          "b661269aeb8e4eed8140febe22db9b4e",
          "bc4da1abeea443c8a0c3f79ebb46d4a0",
          "cd40d7cd4a394a62b5ffd0ec77461ad5",
          "25f095c741a047b38ff443f97a07d20e",
          "4bb27b286321416abc8335a4477394d3",
          "dc2d0a4f4e8c4f42a132daa84ae9a746",
          "ebaaa66a34c84c1fb33fefafeadeb16c",
          "31679b8016204e339d504521939c534a"
        ],
        "HasNestedGroups": false,
        "Left": 32105.927143885514,
        "Top": 788.500685442566,
        "Width": 2370.0090750968593,
        "Height": 753.26816038616926,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 861.500685442566,
        "InitialHeight": 683.26816038616926,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "94a2df16fc5848c3a5c5fbeaf33fcbc9",
        "Title": "Neutro",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ca7c0210e75a4da0847796e1728da419",
          "32a996a04dfc47f5a06780e11d82d9e2",
          "37bea85d49e5492bbb8c8d89a1cde8fd",
          "b80a600aca174d8cb99b93b4ade06f7b",
          "e129d36377fc4f7ea58090786b18513b",
          "fb7d5c15de9f4ad6b583308c51f379f0",
          "4b3d5f2dfe724eb0963a0a1376ae90cb",
          "669c6a87132145fdb301775968ddbad0",
          "74b403977f3d4935950d10c7f0d16b4c",
          "5c32949207994695a0386fd615d94eed",
          "04581ac78cb24ad9b42a8654a74204f9",
          "cf3be8306204402c81150f9c234cf7cb",
          "21d46a587eb943dabb845decd6908a04",
          "f16fc1632cd144d18c1a73277162430f",
          "6c7e6936cd134c859c1df1dc9b1d997e",
          "0ab78e9a766c4e94982e4075b7546e39",
          "89e76357d63746fe879937928aca628b",
          "cace1f2d02de46d2bdc4edd497ff86ff",
          "8dd2db94ec584b54b2b6fd05347b6fa2",
          "559847ec8bc64d80a74a8895fae25a53",
          "f0e07ca72c4d45b898b6ef02bf32997a",
          "a0193b4bd438446c84642da184c181f0",
          "1c12735526214e01bd8456206ab83007",
          "b371fc6578ae422ea8eafe2ccf855d49",
          "b11fc1404bbd4007a3d5fb521b80f62f",
          "c08a031cb6de45288fb2c9080a64abf7",
          "0de3b776265e445d9ef0594015c976a2",
          "b99cd0a199ef466b88583398c04067bc",
          "d137ae066c4f43078a647c2f8e3436d0",
          "e2bea0baecd345bc81516aefd66c1a9f",
          "ad5bbec687244d928906c45cecbd3d70",
          "7d38592318144c3284da913f5bd93469",
          "34255ded7c85469c86e03d88d0496334",
          "aa887b4eebfb4285ab9593c0daa24746",
          "f99b16d7864a4556b989f728536837a2",
          "b3c901807d644a638b0fa9753f5577e6",
          "8d52d3b5303347209c62d16d6ef5b873",
          "010e57f4c9d24f6a9d18bd1db15b06b3",
          "aa0bcbc0748e45eba407fc1004d2d54b",
          "741d9229fe5c44bebb0ffe0a9d4c985e",
          "089c19f8def14d5986b48436baebfbbc",
          "70d54fe59fc54ccc9e91fdb59afa98ad",
          "c15a11187dfc443388218665115ee9f8",
          "38f528c295594b8b94097aa6d2b75b0d",
          "b10f3f71f60745d390a3973d509ac396",
          "0772e19c200e40f8a61bd747d8c1670b",
          "40182becba1f443dbb9c602a40aaaf4b",
          "9526325046554a11ae18f363d1652eab",
          "7b8f230c012c4e23802fe40d38f62f18",
          "e8672e46847e4835889c6b4ab68d61ea",
          "9e323f93670d4975a41878c56d415c12",
          "73183a6ef9fb47bd98fc6faa0c2f17c1",
          "ebb11d6277d54caaadbe49175eddda89",
          "979a5b4654f14797bb0a7f77610969f7",
          "d0e83e88505148d3becb1a7c63275d94",
          "185c9a7e6ab64e439cd370f368b8445c",
          "bc2e1f68ed9d464380c8602b370e7a40",
          "e4efd77bfac743839a80d5f8dfd08b2b",
          "08ae709330f94caea4cff456027120ff",
          "5e7c6429c8034ee5b106035906958ae4",
          "0415fd8a84f446cebbd769d64b4807e9",
          "49238e81565c4fc48e07f026f7d8d3ec",
          "de4c9ee4132247779ed15059b0a87788",
          "a0fabaf461d94fe88a4bbc56ec1e400b",
          "5eb0009f5e134692a736201cd7e28354",
          "5c79b3460093445c8d45a52254145746",
          "59b9db125cec46808bfca0f4b2bdf093",
          "92e7b0e09c3c417487b86c404dcbc33b",
          "9ee63791298e4b4bb7ebacdd88ae2657",
          "931b1e762e3e4f1ab3c0c5ebf3e834c6",
          "db939a26dc364d4c917f6dc3e31a0735",
          "10ca2a7ceadf40e08fb1ad31d17b3e08",
          "2c1a1322d2a24e97acbdc3b5899e213e",
          "5167c925d44b433fad2136eb22e7ce42",
          "72c92afb4bdc4a1b83d05a5ee334ae17",
          "0292b2829e3e4f5f97b0ad7f2e3365c6",
          "c2eb7b3ca1274a50923189d5c9dee729",
          "e094bd7798d54ebc8be09ec775b08c76",
          "894ec82cf4714d6fae9ec3537d6a129e",
          "a9b237828a4c404b8369e3fbec76f178",
          "ed0ed73ea13f4b7ebd8810affd5bcf0a",
          "9475894c57024487a1cfaa835e7e14fa",
          "432f8ca55410470ba9f8e97d0521da8d",
          "8af2fda5aedb4cca936a6610218fd574",
          "369fade943af4102bfc35728466ed8ac",
          "8cb893b055a14e5b80e79dee1b425d26",
          "993aaab29da340d39cb90bd621493010",
          "2a73868f85a542b3a1fe3e220f338d75",
          "36b4f9e751c04965b515db8430be5619",
          "16caccd4966247b9a97774fadb9539ad",
          "642b1474226443dc8412830633bc4898",
          "eb05030585ee40cfb76a1b950e9b6403",
          "e6335fa31d0847179a0152414565db23",
          "497ac25c58494d3fbb1c9e4da055073e",
          "68db88fd583041aeb539027fbe53c992",
          "1e54155f48084e4db53429b2ac754ec7",
          "9be2748c42ce4732a3d1a696f3f14b85",
          "6c50adb14fbc4a5aada0460bd5fa5198",
          "43f6c93a33a347528e6e5207eea15c28",
          "e700a1f561794d8a905dc41328ad6b60",
          "de5bb8a167d54d308ec59c00594dbebc",
          "c5c4f2cd5c1d4bbd83010e34526e0414",
          "3255682d6b824eda8653f3e883a74b31",
          "4e6f7454d0044c4b92f696c4e0238c23",
          "509c8104adff43788c1f3dea34cb293a",
          "51719cfc139647189038895af8999cd4",
          "d8614cb702ab430380441963484658ad",
          "d9eb7f285166440db9d5feea5dfa52b3"
        ],
        "HasNestedGroups": false,
        "Left": 21754.721315724411,
        "Top": 1930.4736439988937,
        "Width": 4981.6797323932369,
        "Height": 7179.2457533913566,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2003.4736439988937,
        "InitialHeight": 7119.2457533913566,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2b0975e866524f2ba6bb4f0f1b7393f8",
        "Title": "Proteção",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d9d0dcf190a4449782bf1150a560e6d2",
          "e08a7abfce054c64916dfe0be8ea45b8",
          "22a2e4ed3239447f8c3b0be1c502b1b8",
          "ed15be9fc7c9461abd80c50824c309a5",
          "6c2065b963f646b5ac067c8a229caa03",
          "31db8cd7afdd463abee23a9d40ae4fab",
          "62a1182722a449a1af8814653c5fa6f1",
          "5b0ca05f498443e4a6fe2777c345bc8f",
          "2b8968f10df14a99b63a666ce1bf0d84",
          "3b483b5dacd54af785d1c99ad1b737f8",
          "759a300e556f40ee93c7190847284e12",
          "2ac355c8d8ff4028960cf48e9fec97ad",
          "f6a7e5d705a94899aaced7ee9c39bedf",
          "4c4a8645ebe54e379752280e3961e9e9",
          "f5fd3fca1d8e49f6802293ad0f362cfa",
          "3fa0d74d876e499a999e107780b83e7d",
          "f64a2129538540e0be6602b5708e2f91",
          "061eafacd7434118b99778d6428e99d9",
          "8d6766be39fa475f9ddc809421ab7866",
          "cb2a4b236eaf43a9b868e61fdd1bb002",
          "64ff351967d34ff2ba5d11b14952072d",
          "f14832f1c2474e7197d1a063e48ee398",
          "edd7c83fa3b94b5499c365e875e22cce",
          "3ab8f15d0cd346b08944fe242aef7d71",
          "7c8ba4f1930c411eb1098be06e786222",
          "53f0cf61c62d402caf05bf7dd29c59dc",
          "ea3de33b637343d98e2150c79e17e88f",
          "a77fc09f8b784c5cad81303ee6f178f9",
          "0bb424621ad1451c8938efc00d9bdd86",
          "69c225f4e76b4113a23d94fa030448a3",
          "6599cf262f354ff399771a0ed69ebefb",
          "039f446258fd4e10be7392a06eb57e99",
          "a9199462a0c142ca9e5b639841ddc6fd",
          "f6f0867ea29949d28dea9013aec98cb3",
          "05472bfdd6804097ae4f3d92759aeac8",
          "1321b8aa73f2470391a79a134a85d229",
          "2ab851c8b5194d36963ee82f71448f07",
          "64ba8ca6d2c246c6b11ae0394d9c4955",
          "0d712f8d7ea946739920af46c8d64f6c",
          "06c4275b367547249b70b8381b68c7ea",
          "6fa67fc27b14449d8855fb0542d8e318",
          "346265cb06024658a3d84adf3c541757",
          "c43df2c23bb940edb20635e64dd5ab13",
          "4c611f9fbff440abb8e234c15bd6bfe5",
          "4b77c86da8a0450ba7a959e89ccbdf1f",
          "444400ccc4504896a37d83141854a038",
          "cc2b61fb17964e33aa1fc89a6789d5d0",
          "05cdc67247f746828cb03fb7e7cfbaf5",
          "72834b0590194cdfbb3bc9f8692de523",
          "96f3ad48d0aa4e2ba0bcb801794c20b2",
          "510bb4c0d2b740d4b981375f302d99ba",
          "77847df9e67e438991bf4079b4e3d812",
          "8231212ce1c3457d8e28b9b235690942",
          "d05489c3689745a49cc92884a8b9467f",
          "ec471c982d4c487182d5c7330b8e0260",
          "bce23ea975c0481d88feb5cdb2a2ec8d",
          "56271b7db8bf4a3ca6823b9e9b171ae4",
          "cd9037eaecf447d09888716b576d4425",
          "4841a8ea7ba34cc2b9936f85428c322d",
          "f79fb0ac28284f3ca6a5ab89e3815919",
          "e28fec4fd58846358c3e91fa0598b25f",
          "e0aee7e71f35429785f9c6a0ff0c54cb",
          "461e5661f36a48eab278dccac80ffc1e",
          "aa58c164b440492093fe41f79866576a",
          "510d044f40c946f48434be43a89bfcde",
          "25496c8dee5647c49a6fb6f001d67fb0",
          "980c90cde9384d5498383e7fb94c56e3",
          "af2da4b3c1814b4c83456de0559c22a0",
          "41bdb1b6b61a40e69c6241c662ec4ce6",
          "552ffbae176c4f479e67ca2cf294b46e",
          "60057ff1400347be8da995cd57a02f2d",
          "1ca676feaf2944f8ba6aa4253511aa08",
          "02b9118d849446f7b7841874f8e30d3d",
          "57983bc95cb6459c84ae11e69e70a5ad",
          "42321a8afa374812bc229582b848271c",
          "150eb04ee724423ca8d5e3bc1c8bb349",
          "05fff04bf80e42e6825df302b2fe49e0",
          "9b9415c92c6d421ea2c3d935ed4a7d7e",
          "1df51a0a08294d0d92796d3e4dd2599e",
          "f8bfe4f6139742529d67c350d2ada456",
          "1534781173484fa6b937ef126003808a",
          "ce1c4c98c3454368892816b5236b1bd8",
          "82bd1b455be44c98b27a530b3fe28edb",
          "d8df060b92ec4fddb48e5bef52096c99",
          "9c64cc6e0e25468eb5acca627404edb6",
          "bbc3aada4e3340bf98021d9da40e1069",
          "d2f883fca4004b31977c1556a2795d7f",
          "6b0633cdec294b53aeedc83628173b74",
          "dab2cdee2c2d43d0ac450db2ca4f3a78",
          "9661baf203d54f468c8834d1f9554556",
          "d6556b0795454668a764bdd8e7e13467",
          "9d1926a5abde4fd5966bceab45e52762",
          "46715e1ef6a042879cc75f0f3f2f6222",
          "cf315551ce7a4da2b8b991b4b853a85f",
          "1f41d2c41a324b129122786ccc50dc6a",
          "36bebed2bd1c415db91ce84d35556341",
          "9ef9138ecbe44ac5a0143b1b058c7e7e",
          "5ceba41b485f4ac5ba9b6173663fa70b",
          "de9d55e9b68f40499e0b23763779a010",
          "2d77c57a7c81465d9e5a8b81118d9ab7",
          "eec85c66b8064c0e8a757aad744ff9c1",
          "787e6b4fdab5480bac231f1f0cd20ae4",
          "d4125daf3390484394f2a9e403a325cd",
          "9132726271924e7c99b846663e15464f",
          "b6646e3548654bb7a429c7b5639362e4",
          "8904456623e2435f868ad97fcd6197f2",
          "6a384ab14f1c428aae73d4e03545ad5c",
          "1802c5d635054ec2ab7a26569453abd5"
        ],
        "HasNestedGroups": false,
        "Left": 27574.349150860202,
        "Top": 1801.6747515764264,
        "Width": 4833.476278771479,
        "Height": 7140.91628890013,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1874.6747515764264,
        "InitialHeight": 7080.91628890013,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aeeaa4a875fb45b98b9253671e465181",
        "Title": "Mensagem",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3f3ee99372964bf390d0281dabe15968",
          "baf2c601d59647e28834f1f5e53c9b6d",
          "eae3f274e0f746f29f5b07a2219340fc",
          "c141ec9d85f24934b88c33204e34483e",
          "926f58999966422289946380770ba2dd",
          "8628760ccb024e07b61a20b041d1a119",
          "87786a888dd94d6c8d0bf3c204024ffa",
          "620e60b4d46c4fcb9e768926703d10e3",
          "e1a1b5a6f0df46e5a5a5ef4b306ba4a2"
        ],
        "HasNestedGroups": false,
        "Left": 34855.920227869618,
        "Top": 956.15490643595376,
        "Width": 1899.4526585038402,
        "Height": 558.83488048683466,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1029.1549064359538,
        "InitialHeight": 498.83488048683466,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0dea9cb11e38448d804e14003b3dffa7",
        "Title": "Selecionar familia genérica para atribuir parâmetros ARRED.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f85c98e080e04eb6acb0bb729e54a532",
          "6eb60b2767484b308780d18f538379f7",
          "31f7f59bc7b84cf7ac2dc47d45f40996",
          "b052cf6cb65b42d68e5f0975a6c08dfd",
          "4df1efa47b5a4b0f8a619da254951fde",
          "0541bce4ea9b4837b82d361040d8fbab"
        ],
        "HasNestedGroups": false,
        "Left": 2344.870347293439,
        "Top": -2222.171775923237,
        "Width": 1453.1156417924476,
        "Height": 529.20921444492114,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -2149.171775923237,
        "InitialHeight": 469.20921444492114,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "62e7741a23c74177ba111b73e364017a",
        "Title": "Fase A - Vermelha",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7da0e4ef66f34bdfbb0ecb8334f07421",
          "0de2679396a3463b8da032e22bf12dbf",
          "6416c23d4f43465ebd6a2477c937ccc6",
          "7828976f8dab4de8bde775d339ecf4ad",
          "0aafe501db724b49850281c6dc437ec3",
          "ae80c1740d534f11bf24cdc15252434b",
          "73e352e2385b4c2483ce2da4564c0e5e",
          "36759a63fcb7498d9551bf9e45e3974d",
          "5e53abc7a3e14c27ae7d9b4b59ba6a1f",
          "48f187d81d7646f0b02a497b1986f38f"
        ],
        "HasNestedGroups": false,
        "Left": 8725.5954985135977,
        "Top": 924.91486140883785,
        "Width": 2120.4588428298266,
        "Height": 676.12484025719255,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 997.91486140883785,
        "InitialHeight": 586.12484025719255,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3ff27a226fab4f089e32ce7c6110dec8",
        "Title": "Fase B - Branca",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a6fcbcf105048fe808d5fd280e0ae9c",
          "bb308284f1964061a67517f5fd342675",
          "444f427b7d564c7dace894f73d257e6a",
          "e7fd1be7a17a46789ddc555110353039",
          "e243161d0c4a4db8893b65e0d8bc3b1a",
          "228e43690ac64d19b070695c40767251",
          "a29a6c0c5790476caefe7b676412b1c3",
          "0bb29da86b7c433bb5e35a9de9c79ce3",
          "b7aeaf390b5d44c5b4e8aa0fdc593b04",
          "5a14d0f677f3441f99ad4917a609e09f"
        ],
        "HasNestedGroups": false,
        "Left": 14915.771908992214,
        "Top": 867.32960778974143,
        "Width": 2158.7556612395747,
        "Height": 769.8129095309655,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 940.32960778974143,
        "InitialHeight": 699.8129095309655,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7fbfc1b8cee34a618c5e9d1b5df90dc4",
        "Title": "Retorno - Amarelo",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c92bbfa85c23479c8f551d5d41b582a1",
          "2efbc059d4d84d96855e370f4e74eda4",
          "6bef753e97914db796d33c4ae92b6ae1",
          "3e04103da0504259b30d0dfc813deae8",
          "178c23889e8a40bba2d4b75e7c908b44",
          "72376e4c19424467b5fb8f8412a6b16c",
          "8e4dbeeb8dd64e959fa6937163548227"
        ],
        "HasNestedGroups": false,
        "Left": 4451.3628340380865,
        "Top": -374.49791606965084,
        "Width": 1246.6535547880194,
        "Height": 687.84451736374945,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -301.49791606965084,
        "InitialHeight": 588.536999180944,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6b84124c95434b2e91d4ce31f2a5ea8c",
        "Title": "Cabos dentro de caixas e modelados como conduite",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "181369cda88a4633bcf5114fb963b0fd",
          "9959a6c46cf342bc8d69862b339d4714",
          "290b6f6b543d4946b8fecdf38ff3597d",
          "ba9669c97aa640c488a7a5eb43873b42",
          "aa3a5a557dca4855881d46f9fb1f195f",
          "87b0cfc7199d480ab3a4c580d0c5c32d",
          "49fe56255ad74e3e8cd3206e15cbefaf",
          "52497759c05c458794d03edc59350863",
          "0ccc11d2279b4947ba33f20c3306981c",
          "0bae5ab006794afda72fe2bdfb9b4652",
          "382bdfc529d34ee987a1eb9f5b7e9e9b",
          "ea6611d5d17b43dbaabbc15473fb465c",
          "8be4d17ac9bf4e248d08ace31575fa62",
          "4f9c9e6cc93c437ca57a56856ff4772e",
          "6152103476df4277bc976ff7ad0a1b70",
          "9f55ed52562e43eab8ef833fa4dd3894",
          "146c221586ac4c15817e94ac48fca76d",
          "72b1611c08e44e71986d95d059668809",
          "2b4bd961c48b4a658d736db00c4430dd",
          "5ff5df3ff2d9447f8390946c1a9b1451",
          "b0e33373a0db48d19abfde653f03f0a5",
          "87c430fee56d4ec58d6146b2dca60ea5",
          "63ceeb75530c4fa2ab840b650196c95a",
          "4cc71ccf45ec4868a7deb5d502b31515",
          "a32e60543f324a5692eeef7a956d8d41",
          "712b2783065046deb2e7fc9a9229d37e",
          "8e880c2c6c8b46cea6d1c3b5d2069bed",
          "18abb32be01644929407f325ea226b00",
          "0d499ab65140490caaec907c2a39e0a9",
          "30e743fc0fce444d84fc555b8c4263ba",
          "890e7bcdcde8463bb49331e490f5ec84",
          "6faf1347282a4643a00ab15850f8f1aa",
          "37992c7d54dc42fa918724f948b6f0f0",
          "aea842712f1b468298fcdee4f355e32d",
          "449ed22e123e450f9e598a989385179a",
          "10d3947aa73a4b67adc9f2ef1428be46",
          "d18dcb785d784881bab444274520e92e",
          "9c717b77a21a49d390c97368b45506fe",
          "37292105a0bb487aa811285f0cf2fa06",
          "ab9c4700132b41e6afbda4145b31e7ef",
          "6739e27d3f144ef3a372376dbcd10173",
          "d0e7cd6bfbf54fbbb515f3d81367efbb",
          "db27e671624e4bcf91fbe531cf74cb8c",
          "525bedb3ea614dc7b7dfb8d8b8d09aea",
          "c7d40f3e7af14d82a9c8b9cde719e22b",
          "2ad28911d19a4a08b35ecb1de941faff",
          "ab52b82b13294320aa49567b58227b4a",
          "efa05a4bedfd4834ab336603a7ff9382",
          "d5cee9f6b6f94985ad5007711ae39ff1",
          "f9faa705fcb94000b603f561dd7825ec",
          "96a5c4bc73e3427ebe49aca47d686e6a",
          "41a723f2c38f48cfb22d61184257c34e",
          "76f89a4feea24c819f096975c95171b4",
          "b849fd29fbc24ca093009503efb897e1",
          "0102f7d5aa254519b627526c7fb1f910",
          "e226e843fd514efa8180ab86564ddb55",
          "8faf16ae28a544cb95bee95d044e4d36",
          "6c24183f68fb438f882eb6266bd47ae6",
          "2b6a1ded3d1d486394f26b7f90b00cf9",
          "39c4fc2d7eef4ae893f47881de224102",
          "88dfae41d6ec4ef19e226846f9d61676",
          "33171fa64f6c45e5934fd76605da9b9d",
          "5fa71349f43640ca92b65e50bf39bf49",
          "a397d4d457e749a4886a5094eaa3ab77",
          "ea6191e821974d56824f82b6c36b52db",
          "dcbd7f17bee74c53a75895567d8a9e58",
          "cceb1af15ed14f8d892830b3d98d4c53",
          "d2407c4f48e34585ab0a68038de6aea6",
          "d9fe947479184119acf62dcadd3f4d5f",
          "eef6523938cb406191f89a4f34fea320",
          "4d6479c8c7754602a2f3f679783d429c",
          "7b6345c3ebe04545b1fc39cf7b13f17a",
          "477451dfe57e405d9c504daa2b0886d5",
          "a09409745cd342b9a83666a2f052de15",
          "b513aa22cc5142efb8a310be8d659d63",
          "c8c7ca4fe73a4ccf951ab98e82a784be",
          "33c6da5867b742e0aa84574df33cc6cf",
          "a827c4034987412eaa46b30aa1408627",
          "69c193e2ff6f4565902c3b26e1479caf",
          "3185b823cb6c4773843ee154dc5ce91b",
          "78c6e4dd654f4f85a50ae494c992c43c",
          "0011e67a0e904284a98accef6ea27f27",
          "ede529dcb4db4eec9667a787a6b9fdc6",
          "7ddabd6f56fa4a58a24f48a43823615e",
          "df45b906be284ce5b2f9e1197cd1a990",
          "2f6b22df2cd547a48319772eaf3736d8",
          "55115438ca9f411dafa68773bd6c7067",
          "c2bb592db3d34cf19a2a911a28964849",
          "d0d6befbee4242a28ef2a3c7476e9788",
          "8af19821ce3148b48587b813c3dcc9d6",
          "b6248543fce344849712bda1ff2a0a28",
          "631365ba09554bd68cb3d91bc62ae75a",
          "1a8ecf974aff4e81855ac53636c4c189",
          "279d104e1ccd4d82a082c3d77d5cef51",
          "84a6dc62d2db4570af5864973e69c0f8",
          "3928ddfb19274340abc0b145ca9d2b34",
          "3064eea963894ffdbe6b18972133a127",
          "6f1333843d58488a9b644373608e4871",
          "86e10e15552d4e5ea8697589f0ad5c6c",
          "ce345dcec6264d1facd20dd8becb5240",
          "d2905e3de0d84e109c2514e1ad3f6799",
          "e413eecb34214235abe8aab8fb7f7127",
          "34a0658784754cfc92ec3e41ca0d28ec",
          "c0ca7828c7a448df9ae45879fb95bee1",
          "cb8100a7bd014a6eb4923fd9a745b35e",
          "a1da207eb8f44f0d9cabbeff39b70351",
          "cd0b8b5bc1774316a4f7a4f62cdd744b",
          "eab43113a59b485f97edb60e57fdde31"
        ],
        "HasNestedGroups": false,
        "Left": 9742.8750390118385,
        "Top": 1910.5212805208034,
        "Width": 4833.4762787713989,
        "Height": 7189.8478618986446,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1983.5212805208034,
        "InitialHeight": 7129.8478618986446,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dd7d77f04d784a01b271049fb1c7e508",
        "Title": "Cabos dentro de caixas e modelados como conduite",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d13ae072cc66457ab230022586af6b21",
          "f1afd69662fc4f119759958327665019",
          "c4d8030b01654676baa6582fd05194a9",
          "6f5d1bbc448f488cb6cc5e1b524b05dc",
          "33e36c2736f543968ac0fbbee296b5e7",
          "d6f108d306be431a9ebbf218043e72fb",
          "b6c3c72dcdde456f99f6fd930b98da51",
          "956bc08b084d417ab2005504a5ca44ad",
          "30ae15f0768c4a959da90b686e239e1e",
          "9bcd266d5ae042ff813ca5ea36b36223",
          "374ab5fce2554a15a140b5f2e560f688",
          "13a758763c854819b84d116f6bc66bb8",
          "8125e8096d3548b8b6f6b3afb8bf0a2f",
          "f0bfa716e34e44d5b62874b56d0a0cf5",
          "911e929ec1a3481388412ab2cf5d873d",
          "485d4218f7564eeeafffb9af7a207021",
          "75272b6446cf437ab1330abaf787d1ea",
          "1afaf54f01774b0c8a772039d278d30c",
          "8eaee89718304f5f854f12ad2f3b5557",
          "58c7a401d0b94e379801ec21d1bf9537",
          "428182e59f3c4e09b3f2b16cc9aadaaa",
          "fe69cc850f294ff5876bd75f2eb294e3",
          "efed447ffd5c4aa7b3bd10418f172d0c",
          "7eafc263b432493e9e718eda7bafa133",
          "5f9e8f3237e04f919277cfeb917bb0f6",
          "484d90d74dd644c8be8f27e2a052de4f",
          "7bd858ce7c2044ccb8f140fb5b03be3f",
          "6f56172e7ac14e0092cc505811b23a22",
          "5dc17fe0d0ad45f1a54798e8acf29dae",
          "5b3c1a4d854a40f09c291f41e2f91b38",
          "d1b745cae55c460087b06a9c6644d641",
          "2d93b62612454a078ab9c9994c6bc4c5",
          "3f71a59286fc43b98763fce8d9d994c8",
          "f6f39fa1cbe646a18bd979ec6016a6f5",
          "407ea768fe5040a3ab7a0a89d9cc96af",
          "c37035ac68874480a9163879ff17c521",
          "68b06123c46e411a9af645bf388f0228",
          "8ecc9ee1c81f4df7bf2e9cd83ea5054f",
          "02e2e53cd93541ee99dca751ff14a249",
          "afccea2a75a84bddb3361909263bd507",
          "22f66d35fd6e4538b25b43cb46334a95",
          "973917c1a24540e18b4172013e745045",
          "b4f0fbe87910417aab2b4a4c79424d41",
          "01a1b5b190944e2db3b2e523d06c9deb",
          "f63fe9d20053423b8abd4d5ab4a94e30",
          "181a4ffac98e4c74a5649d19a8de6d8f",
          "9e8dc28c4a594277b5485440fe45a025",
          "12183dbbf1614fb7924f695c772b9048",
          "dc19bdbf4f234a7eac4202e890fc6284",
          "f3c9cb64d2164e1093189e1ec4a56679",
          "29380587365345cb9bdbe8b045bee1b7",
          "44259427ec1c42658dc1c9f52043d731",
          "71e98b1afb2544cab2b33294f3535c02",
          "1d6929f8765b4dfbbf9b93fbd2710ea2",
          "a8c961b7d5134415ac773cd542a47868",
          "6482b5562d6248178ac8d9a1eb644c2d",
          "989bd4d1bff141aa8d3331097a3b3763",
          "abdb452b481547a8918fcdfba8286efd",
          "5cc6e2dce1bb4948881da567b45eb902",
          "88359e1673c4416ba4c81edbfe61f92b",
          "e8372dff27e2403190c0c616bfc5d66c",
          "03c672b88de641bfa0a4dafdcc663ef8",
          "d9c8ee542fad454e91ec8f3220f12d0b",
          "cee39260fc2e44b2ab6703154202ab83",
          "5ced960df3184252a2eb63c9cfbc469f",
          "fe827ec266504d15affc452c98c703af",
          "6a87274b2dfe43948d383e9a3cbd5d9c",
          "e6ac43a1b18a4379875e17a08876c44a",
          "2518b8084a194ee7bfb7784d2d28b314",
          "7d7a59df588e4d15a061c2dc61d744b9",
          "41828dd6bf4b43bdbae2a4073d068311",
          "2936967180c3492e8fef9b8f65d6528a",
          "711464e4a2a24b9eb61fc47883dc4da6",
          "ef782749ff3c4de9951a8baf749db9d2",
          "773cad87852c433f8e713caf7f84133b",
          "dc2615d21e2f4ef286c1a67cf5cd1222",
          "7fa5bdc4eb6846bab4ec9243a5a2f733",
          "9d7ee6b1a3c2434da5f929ba964353d7",
          "cbcb86359fee4cd898bc07c74dd93d59",
          "d9b69177c07848f7b5e511121e584be2",
          "a381be4ee8cd43bb9d34018ca2ea24cd",
          "76c0dc46264f4d35803c4d91374f73c6",
          "85630154f4564545977c0de1cc3a2545",
          "b13f42397bd44df7a5c9e5d63cf60aef",
          "e08be1c7938d4953849452d0f6ae0cf6",
          "08b86f7fd34d4f46bd0359c35f7d0c5d",
          "a62015cc4f1c44609b7d6c7ebb5765b6",
          "5737890b854147bfb5df1f7cc176b106",
          "2acef0b300d1414aa8cc55e4dbc02073",
          "50eb6ce2f9fa4b2fa02cf5899c81d5f8",
          "db1d6ce5c3454ca3a84a219a252b561e",
          "ffcdecfa8b734629a75dceeea3e1bcc8",
          "54f4524c03f547c9a1abf044d0c82563",
          "46ae68e70cc04fbda1a5929142306f42",
          "33ec27a25db04e51addf29197b7150f0",
          "24e4ea5060394b07ba0b9ee1d34ec11b",
          "2375facdf9ad41d1a4583e180c0cd234",
          "05e741562714489893030c8b15aa5c99",
          "3e0886061fe14a6f8197416d4fac43f7",
          "a7372bd8f33647bb845ed7b62f9e7d9a",
          "c38fa0d41f6b48ca91e3d5108c23cbb8",
          "425fdda0ec22448f8d5bced8c062f48d",
          "a97d8a37e95f436fb88b7ae8bad946ff",
          "a6487acd2b1a43c398468f63056f93c9",
          "f52daf04263e4002bfc65bf023002bc7",
          "979fe2e5a818413b98cba1c2a5a03d98",
          "6134fa194833455a926dc1a507cc4d20"
        ],
        "HasNestedGroups": false,
        "Left": 3791.88636870238,
        "Top": 1765.51958862062,
        "Width": 4833.47627877137,
        "Height": 7130.9836634651492,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1838.51958862062,
        "InitialHeight": 7070.9836634651492,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "95ae93772af748b7a24b1b27a876eb31",
        "Title": "Comprimento Real e Calculado",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0447a064e4e444aaac9a41bb66481fde",
          "baf870a672c544e3846ff0b7e1f33bc0",
          "54b0a666fe754721956ea37754ba11a1",
          "2f9d882577814669978cc75eb222a0a2",
          "bb361da01f944ecab2435bb80dc5d3f5",
          "7b42ddd6b25141fd9358e870c7984cd1",
          "67b48e8456cd4db8ac18e8332e8f469b"
        ],
        "HasNestedGroups": false,
        "Left": 3549.1029245886984,
        "Top": 954.29675589354588,
        "Width": 1260.4924306557105,
        "Height": 727.38416270000653,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1027.2967558935459,
        "InitialHeight": 628.07664451720075,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 46.461764843945161,
    "Y": 217.24838184901898,
    "Zoom": 0.029771346632537304
  }
}