{
  "Uuid": "4c528b33-468c-4746-a69b-ce2289ee43ea",
  "IsCustomNode": false,
  "Description": "Soma os cabos das Bandeja de Cabos, Consuiítes e das conexões",
  "Name": "ok 2021_16-1_BIMACON_Somar Tabelas de Cabos por DIAM. ELE-R04_script",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 149,
      "SelectedString": "Cabos PVC ELE em Bandeja de Cabos (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "4d030244cdff41108dce6d340db3deaf",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b964da8495414e5893199d4cd72186f8",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 150,
      "SelectedString": "Cabos PVC ELE em Conduítes (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "152484bc5ea345878a4bbe2d5dd0715a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9aeaaa6b87ae402f89a2fac24e2ca724",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "27d9a802f570423f8e26ba473110c061",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0280b89f100948bebe59a02a90a14e1d",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a385565fc3484141a4b6867aac35eaaf",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bf98b0269a347379824b28bc24f818b",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d9123f7a7a3477f91d5821a01016038",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f642baf536e34a3e8cb74808c1787f24",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64b8d7f069974f2f929228c089227448",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "349991248b904436bcea734462ed6d1f",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1db743c165bc4013afd177f6c932f0e9",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite a seleção entre True e False",
      "InputValue": true
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "974fecacb61649d08cad877ce085a399",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9615bdb888f247eebf0a56083937a7e7",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "1e1e2cb79b8b4302949f2e1372ade33f",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d84cca4813e74e018fd2d60e080351d0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite a seleção entre True e False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "acc59ab50eda4eb7804aa29818ca8972",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7af47773c7714e1285d8dc063c08c0a5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f7590613b1d5476d8c044b3ba03aa953",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c676b252c07443f18c605199dbae45ec",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f49a7f4d8ae4d7cacf763846cdb5a97",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "123959e42a3143618e3651440112b68f",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f349fb856ee44366af274238fab73b62",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "CrossProduct",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bf6f9c335b3c43e98b2207d1b01fe2c2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7c03bfc52a624418a86abdd65319c475",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d5f81b980474294b1ac1951210d4c56",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f2c1107d9c949a18e0f4ebc709c3a8c",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71ca807867fa4fb0afeedede13ec043a",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "CrossProduct",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 503,
      "SelectedString": "OST_GenericModel",
      "Id": "3f2930e639524104884d2098b4448567",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99dde69457cf4d6d9578f13315df1d2c",
          "Name": "Category",
          "Description": "A categoria selecionada.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as categorias incorporadas."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "7fddc8fb8c954860a2df0d7a22c43634",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "4310073426d541e1ba4d3cb4e2c1df06",
          "Name": "Category",
          "Description": "Categoria",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4254dbf8caae4208b2cb1632a30e9f85",
          "Name": "Elements",
          "Description": "Uma classe de elemento.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obter todos os elementos da categoria especificada no modelo."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 246,
      "SelectedString": "SOMA Cabos PVC ELE TOTAL POR DIAM.  (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "ea09c0976ad449e499c255b466f80f4a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a4d03f9a0054993aed644599865d1fc",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c65c8786303e45679e5762b80df825e1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "710f57515e1b470eb7dfa10f79939378",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3c5a5a7886dc4a6f94bdc074e697a522",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e32bd3deece14fbbbe08ea07ea17165a",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ef67c1dc0aa41cf8807cffa9f6c8993",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c2a2583bda0475c9dc3666e18fe6498",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a8c6ff89b2245dd8e89fee40ac9c1f6",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "589f1535671948f69786e5c447c7e823",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cec90f6d25b847d9a64d46bf7b116760",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab6f0961925f4354a85092a43242de11",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bad56f8affbe42d2a2d4386ef26e63e4",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7bb2d5f04804907a0d2880ef734242c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "646793082fa8468ab827f25bff06cbe1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c7fc6a50d6d24f738f960d1f064807f0",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60e3d584c24849589c8d74d4e3080cfb",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "778f0cf039b24a0da7b1635791273928",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e6f7abf4031e4f1498ce0a45e4d831fe",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3daf71dcf2674254958fd3c265ee0374",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "789ca845e5544854a7f5d3a10c4606e7",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9164da786ae41c89e2e1d2130c70729",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "5d2a6a7bfb00464fb109ff277e8bf406",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "dac3fdc0217d48f79e512267bbb24030",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0109ec60655f4226bbd95051c4d6f391",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6ebb6ba3b425490b9390ad6c2f5fb898",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9bec8ff7c1e54fe7acf55631e336575d",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "342b83b8fe48473cbf2f3846241417ed",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fe17bc5026094e789a58a880a4ab68b7",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc264755528f474c9bb63531d4db5460",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[0];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7c31af35b5f840efb52c4f9e7a5f75ec",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "be2873a901224098b0ec12c143b75cdb",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f6982aa3e964f35879b05cce4658261",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "929145cc667e4268b7f32a959381df8e",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7eb278cd7c3149c385199991fd4aac4b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7ea2347f4a474ed3a504f0e54b744de8",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33d53b568aa44adc8cf6d40e9ad91d41",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c84a3d91c8d41139d171f87c1056152",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0338c31116ec4d7babc68b8ed62068aa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3a50aa7a50af4745985b5da5c4035ee9",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5d16889ee804e8087c84083f124f852",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b8cd702a4aa9464b8dd2caaf07dd020c",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59710382505447d9b3be9ba5d79f60e8",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[1];"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "d60f8b9b3d764e58be0c9cf3e002de11",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "22e246f7b42d4d5b9ebba4de6b9c552c",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f3ab4b4297c4bccb5d1ba3ea93a77fd",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b90cf32ff1ff46e694aac9f123b63ec5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "63170ff369ff43d786de961c6542a7bc",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2edc8bb56604182a3b0a03b618e5318",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24229602a73d4bc3baf200679497547b",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "492608896bdf4a468ddf812eb6855ea4",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ba50a1a784fe457fa8a9c5d20f1cc6d1",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f43488fd5012466186b228b6d44de619",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "699f450a25284801b63add4bdb6f8e56",
          "Name": "item2",
          "Description": "Índice do Item nº 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b855d572dc5641ac9978d1644d3c7659",
          "Name": "item3",
          "Description": "Índice do Item nº 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61c046a0fa08478f9c376bd86e39e713",
          "Name": "item4",
          "Description": "Índice do Item nº 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fed6147d0fd04b65a71bb91bd195b30c",
          "Name": "item5",
          "Description": "Índice do Item nº 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e691623d349443784ff70cf5e262c89",
          "Name": "item6",
          "Description": "Índice do Item nº 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c7ca71a499e4ae6bf0e11ef674476fd",
          "Name": "item7",
          "Description": "Índice do Item nº 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b407ab39044d428c97a0b014d0325a8e",
          "Name": "item8",
          "Description": "Índice do Item nº 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e68208a86cfe485881ac649103593a4a",
          "Name": "item9",
          "Description": "Índice do Item nº 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57e0aa69ff61420082866e8d8478f30f",
          "Name": "item10",
          "Description": "Índice do Item nº 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5354ed87cb9a4909a4032ccc3c6f516c",
          "Name": "item11",
          "Description": "Índice do Item nº 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b00816c3edb04c4bb70c280fc474411a",
          "Name": "item12",
          "Description": "Índice do Item nº 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "418c2fa32f4f4d11974aa4a8a54f1df0",
          "Name": "item13",
          "Description": "Índice do Item nº 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c33be0c9041244bfb99cd1a221796f96",
          "Name": "item14",
          "Description": "Índice do Item nº 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e0a3ddebca440fe8f0fe38dd13c19a1",
          "Name": "item15",
          "Description": "Índice do Item nº 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5618f5a2eda4b0e8cc217744f28d9c1",
          "Name": "item16",
          "Description": "Índice do Item nº 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a5497b2d7ee4fe5b24e8c9387ebf98e",
          "Name": "item17",
          "Description": "Índice do Item nº 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8319007a96244329967214f56c2b3ae6",
          "Name": "item18",
          "Description": "Índice do Item nº 18",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "548d60dff3d84c678f4824524a5ff654",
          "Name": "item19",
          "Description": "Índice do Item nº 19",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a27ea1449d44bd183df8cbcb06cf2b7",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "182a08405ec04e80bfe05224e7cfcb83",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "583a0d560df24f9cb1d42a38027dcbbd",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "83b3f79627ee4d4282318ff907d2f95d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45faf06ad02c4bea893ffa5b99bb0bfd",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "adf5c5b9174f412b85ce6287a8297519",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7ef591391136411d8f588e9fa7ada95a",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1454187acb64f17a8fbbc1efba2b8b1",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a4f7998ad28499b82359e57a23d3abb",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c787ba6c2aba46a89ddfd212a1048167",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c9e9cced3a7c4727ad423ac28810fc22",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[2,20,38,56,74,92];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7fe7f089a33e4ab69ce46bceadbda1a0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c124e35200444ae3b81902f345de31ce",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a10b3a1ae7f340dbb2f06457f9a4f1cd",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "8acab328dc574907968e7c3e65a9d162",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6a6a36e7cdc04ff499cab52a141338b5",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cb315f75e7a4bc1a730c2dcbb2fa58f",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "48976dad3dfc4520b6a0df6f860ba525",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3229594956eb4766ba9238e191168e75",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acdb12a3577546de826c111d89df51ac",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec20d4a221e14e82b3ba608799f32169",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c1c47d2f89db447dba98986c3b5877a1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "022ece9ac51b4098a7c2b98c545ea011",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75d3e026912e48ea997107698dab08b1",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e15883e807746fc8eaaebf0c18f86cf",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6979fbddf7fc463680495914d8ad25ec",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5d719a64c7f4e2c9b5ff501ac40f83b",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[3,21,39,57,75,93];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4631c63b0f9743d5aadbc2f0ea23dedd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5e25e1ba8fcc4e64858a150710dcbbe2",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5daaa114280440285b359c65b6c34ee",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "8d6097ba17794b8097d293d1d47c1875",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1a4362fc702546ce84880d9f6ab28ce8",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "484667445f774282aab9b87757ff7bfb",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a98de3e60e5b478e981fa1b088e9339d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "885af98f4e9845a5aefb967731a39526",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "208cf8afa87943f09e7cef6b8f82e4ad",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b76fba057d50477a8764629994c123ac",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dd06706c788c4fb098d21d4532d9f40a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2865ba7fb810481a89988a16f32836a8",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e01dcfe7afef4447965191ffb5a9644d",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03654336aaf04113bc00d0f3fe72ca6e",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f0a5faaf90204cc8b0ec750ab7ab4c2b",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a99d71b3f4a4eb4adfca2f9c7a69fad",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[4,22,40,58,76,94];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "18a529a9dd274527a888e30174163c44",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "830e137de38f4f9a96276c720cd2f005",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef3282ca9b5847fbad6fa7baa26c31b4",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "657274e29b4a4ecdb6406dded01d924b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c4a61c13c25c46289d5ed3f52e10d3fb",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5784265bf8c4e848034682ef05af174",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2acb5f845fb24994aa5c2a7e2ccb89a8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a2b1b42688974b17917612f5de0d7a14",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "166db460ab674676894d3c150abc3964",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0ba6f9a34784ac4add9861ff61a2960",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "89f5b5e061d640cb8281f8f9666d5b20",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a79e1ccf19604dd495ea17751de093b0",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5dbfcaf8583454391c8be1224d2c6a3",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "203a6d0b0a0148a1a285fb76bf115374",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "54e4073f58424a468841b178e9b9fc15",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9662cb845e134b01bed401f4a4b169ca",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[5,23,41,59,77];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f462fe3c60294ff098cd32383059c02f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "56c386968847487c8cb4ec2552222db7",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8425c08adb404435ab773c9ed6a5d451",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "32a5fb78700a4895a6c1763cc5f1c46b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "cb5c3f6669404238bc52f970b7590c80",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e8021730b24455baffeb49ad0f0eeb2",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "734fa0052a7c4077a9bc1f88567dfa1b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ef2652024a6148a7b69efdf4cd3c2b0c",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "319aacf1f6ab4e27bee0e543362b94d1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e95f300ccf144bb889e8d2b42247f85",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8bd3dc8019444266877cb35855b82f9d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1b57077d126b45b4b4311433350b2f35",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19c6ce64ac214e738ac7e820223fb92d",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c543a8b730b449cbbe09477072f1ecfa",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "61447a770a494a29ad6bbe18f35c6a83",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e10d8ddf2c440da90509d501aeec7d6",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[6,24,42,60,78];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "94551aee3d4942a7bdf34e7b7eb76d57",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "630d448cb62842ad8177cee833bc5c4b",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6e65bbcc7784f70883cf93697c96a9b",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "14837c99ac0d41fc8dcca999249dab8c",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6e62e60e20fe45a58b8e34050bd41f08",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a964ff8d6a4a4aa88837c118064f6e20",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0db53f73beb146f1affd7c2e6710bd93",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ca4ac37e79140b5bc3156a55afe7770",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2eba5e3fd59474fa9f3685bc2be42a3",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "184fb62ac84c46e98603ec6af55d1456",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dcfda8e74410417ba7e370e3717d8179",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "929e10c933134ee88b82a83fd1ddb2f6",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acb36ca5d9c04c5d96579d39b591b840",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aeb3ba7c567647b0b1b62f3f80d12f6d",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "d0ee3683b8da488b835e7f7e8a9b25a8",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cfa11f52ab6b494b8240157dd324d8ad",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[7,25,43,61,79];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ceb30ca6d13245baad2bbbcd09694a5c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ce885fe437774199985b54d9a98cba99",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "349ee0e4c4364ca5bab237d671cb3374",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "39d931774bda4ef0908525f8bbfff700",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "24aaf3caef624afd98ec9867ccf2b56b",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c77fade217b4b91ae1bdc1a6f52a01e",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2cb15a242a654550813598fb6d36fafe",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d99230e465fd4d30a320cd97041f2434",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "136b645e383444dc9d02cc7233e6f52f",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84e37faaccb14e9fbeecc52e4755411f",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05de688ee2b64c768ccef72465027b67",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c9be1162005447749d0829671b74a782",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "822995a276c34a3ba81b6ad8b3949ead",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a94bb16d343c425099adccda9da30564",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "93bae9984d7a43d3bb76f9323faea2eb",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab00bbfcf82946b28829ad76cfa89181",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[8,26,44,62,80];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "590a3ce05eab4321aa00675dc7807ccf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c8835901059d47fcb679e983e3ef6826",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24a0d505eaac462f9dc05229eaaae890",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "80eba717806d490995610c71301409a4",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "47fff88923c149f6b28e09a87e846145",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74a65365f7b74afba16eab590fda2869",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e252505550b94deb9844f97f0c826a03",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "98017bb5a1ab47f9894e828e94ac8d23",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4df27ec8ae994af888d501f6693ba555",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34e39f57c8da464db4a3549597d65603",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ad6dd2bd3f304a8fa7704b6f0510dc8b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0f375b87efbc437491eaba3a0d8ca26b",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10d2ae3120be40ab892a32b5c340c5f0",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31be075839ce495086fb7ab944b12446",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7631d4f23578494ab1369d0054fd2ec1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "43f299f46aea46ba98ef40a03b78c7f5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[9,27,45,63,81];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a81d221b839e49c48d782cca0bc9f7b7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a951f9912f3c47d5bf3a613650f46a07",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "226cb166cf08495da3f75adc51554c65",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "f8766cfe750a4f04bccc312d4d8562a5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "19e6609c14c04f97b4ea0f5db075efa0",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65f882d445a644529c273959b8079176",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c3b963f18556461691954f2718f1fc63",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0108458399db42a68c4e48db7da2cce7",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0f65537adf34062b92eab22e9d437ec",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "794b1647ab9b4638bd177130a55ec17a",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "910651aebec944819729367110fc59a8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "10b9429240214190a130d8e699f7e091",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "300934c8ce664364862cd256e7640f6b",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b320e3ccdcc64f5997b1e44be899af46",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a83dfffec3a24648b951a353dcafd910",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e91d036a41ae4864825bcd872dffeda3",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[10,28,46,64,82];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8d3fed2ee4714eb0bf66a815e2d2c67f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "76ac4cf991dd4c99ac67ab332472d0e7",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2b640c4d25b455facb55a07a9af4180",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "f52757252e684d97908684544803299d",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "5b03855696454bde80ec717cc8f259b6",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b34044b4cb8d4e69aeebf5d4e7996e96",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f9f72c3d12104551b31301eb03e31cdc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da51a2396963403f8eb949afee70692d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a58ede01a3314fa39c146469b916d9e2",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "048b251bbdbf410a9a7517f068826a43",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "370c3c44f1104d54a98a0a6f577e29e0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "164d12720dc146a9a22960747b519204",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf6dc8c565044dca9031cd3e51601f1f",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48163d15f5a94f3894eefc23c3084319",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "274745e3c4634172bb68650b5520855d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f62a5243f31b43af80edf36cf7636609",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "040ea174ce094e76980cb481c818ca4d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "db4afc4e367346f1a679caf6b84614c6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "8d6750c7d94e42409e6dfdf71ecbcff0",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f3498af67294ba183c826ae541b726c",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7dd5fb25c7b84d40b54fb4aa9bfc3b37",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e437dfe7cfde46f4a8312a551774b72e",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7fd773bc12b4b0fb38946aa4b3a138d",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a472205314d4daa85a71341cc0b4abe",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "89c92af4066f44afb186b038226251bc",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "db333f3fdc4a4b17af6a5d41d89dcfb7",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[11,29,47,65,83];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f317a41c0a1a441f90e91b077ac50e52",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3be4f94fc1324edca7f522c4ef0db971",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d49ecd1b983940e591aa542d4baae9e6",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e65478659c244a088e9645127aedc2a3",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cdc591700b634527842ecdee45ef4ae5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2111121f0ae946b3ad7c77f88a3fe63b",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8c74fa4b1944bb08dfde3e593718ca5",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a04531bee02341949c3fc9aa4b7c7643",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b8a823f8fac140cb82859d1ac2fc892b",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[12,30,48,66,84];"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "54c6f803b4b54d469d75a7cd75b88341",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "7bb4792d00994bcf9aa0b6e36694aead",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c58ecacd31d743d687e6fda4c2a31479",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fa8544495de24efc97bdd9d054f6f9bf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a22e1b3b6f0243328c6447d8769a3566",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "958b840d568946b593dfaf84b78c5189",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6eef45b59c7d42688bb5c8c98fa5f80e",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1c83afea2e0d4fd2834c99e6d7f72d62",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6df4af5b27b24c5db63a8e5d23b20848",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0b5a12322e649ecace24d79e2a23098",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1028ac5ee2f4004a93341d6fa279ada",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "02ab3e8164eb49919a88151f5452ec8e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "635d202082f64268b13c66daf9eba751",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15f68e0dbd4d4da2b02cf944c5cddd83",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fa01bd353924491c8f5220a4590588f1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b63551273604a66847d6b1e10312256",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[13,31,49,67,85];"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "e6d764a6d841477aaffb631f8b5dbf72",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "657dd867999a4c9b9e0a7169fa707cd6",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03421cb133784845b0248fc5231e0ecf",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d0a071c048f741398d872b3854316ec8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "987e830b7c4d4c6a9d83e4414206de05",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf0304a094a84e528825ba430ac27272",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f01d2d2fe344db89858a849bc6b9acb",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c0fd8c481d1a464f969b9d23f63d054c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a075f2a40834558ba1fcc71a65d16fc",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6381d6bf82e4ae4aee674910854f921",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da0b42207da64aadbdee431e98d321a0",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "74f34413d21f4ff4a3da989c871176bf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "59e118d4c8494e27a6ce2f32ea3fc9bf",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "925a5b5b7af9463884cffce115cce99a",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3cd4eedadf1b45288f89f1361dc05738",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e4b714121b84bce9faf1b037e091bc5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[14,32,50,68,86];"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "321cb4b2ec5d47ee8f394107dd1dba37",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "caf1605e38564e1ca420110ffe6db791",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "735ad905faf546a8ae731cf278d374c7",
          "Name": "list",
          "Description": "Uma lista (tipo: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5a1b20a75b9547f391703cc74d801e9a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "64267c495a5749878df336a0d0650441",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd9af792c8de42acaa754b3e8af390eb",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ebbb22c44c54ff0ba6f55515383adff",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "33a7bc11b2a444e3802c7c5d2e4fc52b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "59ac523d8e88498bb9ae912d988f4e3c",
          "Name": "object",
          "Description": "O objeto a ser serializado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97213008797f4410a0e794bdfffb9127",
          "Name": "string",
          "Description": "Representação da sequência de caracteres do objeto",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converta um objeto em uma representação de sequência de caracteres."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7bf2b5eafbad4faeabbfc7584be7ba14",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e0d9b5fa8df24fbe8da0374e4e97b933",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d243543d632c4d68ad7b0d3cdc320bc3",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b41432edfa34ada9f0cefdae4a3080e",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "44340526a5b344abb9b3ca86918e837f",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "92727865dde24bfd88dda3d1217bf211",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"Somatória Cabos\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c1efda31f3e84611a77d59b2d1aeca27",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d1b0ad2d3eb4ee8becd611a249add84",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79cf4d2d9949471d959ef160795e1d6d",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03bb301654be4be9b0ab374baaf70a28",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e996f8db77e4ef8adeb5c64c398e49e",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "ab27601c3cb140c68b13c05bb0e860ae",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2c320f26e21c4f20b73809b68921493d",
          "Name": "",
          "Description": "Nó para avaliar.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8211589b4ed74553bfa86c876574cc6f",
          "Name": "",
          "Description": "Observar conteúdo.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizar a saída do nó"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "89703e4a5b9246e3bdea83fbc2a06057",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e667de43a594af4865b6ead750b5d76",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5f1ce0004cef400db75e51a9d10d3ea6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "aeabe37359ab40cfbfe3f52642f5ef6a",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c68ab2f35864d278f8f646860d78047",
          "Name": "rowIndexes",
          "Description": "Input the index or indexes of the required rows. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45056102a82147fa8e2e2b9f63689272",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b4e1fd9c5fa4767a6ea585f7765b6c4",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataRows@Revit.Elements.Element,int[],bool",
      "Replication": "CrossProduct",
      "Description": "Gets all the table data from a given schedule as strings. Row indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataRows (scheduleView: Element, rowIndexes: int[], refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 151,
      "SelectedString": "Cabos PVC ELE em Conexões (Cobre/Un/Isol. PVC/750V/70°C)",
      "Id": "9da28366193e400a8ccc983fc5c20c0d",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6cfcd6e6b1f4f169813262a1d8c0beb",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4d7e08b6e37f478e924a9cf2ea262994",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "fd9735cb4a354a2281e518fa950d7a30",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45b36a1b0d954ea98818cb5ed99a33c8",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5ec18d8720e447daaa275c98d0b30b8",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6af2e25020a14ccba637128df9a11024",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "a+b+c;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "542acc065bd448b7857b499466cdfd37",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8d31f0f96a14a0eb52a41f21632dd84",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[15,33,51,69,87];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4d0897b2c41c44539cee11d3a1022524",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a2b85bb0545b475d97b5e86fc293e5d6",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b74a748e4cb45f0b84b5a25eb0fe935",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b06708c39f04b7fb63273983a038e1e",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "50676d8f8aab4755b118e11d15e5fefa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "14ea523d635e494db320e7725d2665bc",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b43aba6e98949df9cf82902738b1ee7",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b65372c1d954737976813299abb7d07",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d069de2d3964841881194a797b2ca6d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a365ba39f1f94ea086327823eb85fbdc",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e26814c57b8e4bb9a604f22ea10b81d1",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "407df3375c294af89547b58255cd44f7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ef8cdbe2ed40484db30798cd425955b5",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "556125ac85234c8f8140f189504ab393",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2a147e4c5bbc464ebacd62d6c3bfe4ee",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19ce6e7b00874bedad03dc9386e8364b",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[16,34,52,70,88];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a6113ddabe28440daaec77bf1bea70a3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "86ac15f3b5f14db6afc60ca5ea4261ea",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b771bcf635b147b09e653a20fec800c8",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "417c6d23b6d640fbb300f035186b8cd4",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e3af05613a3a4e8c9465653ea0124d12",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9bfbd03f57a7466489e8640131fb7a66",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "68cc82f823754528b4933d2c10d2431c",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d89ea65619149ab8e7d6df79b18e126",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "46526557e45b4d9b858e0624fc48434e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "45d97960ddbf42b58756f9092b5db048",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a4cc32a62134d0fb3a9e05bde9b58b9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "88b368db61c54de1ae89e4c23b0a44e3",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e179466b644449368ee0a0a424c7bed2",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee01cceadfcb4e73aa7ccc1d31d04ab4",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "38fecd2e5ffe43caa1e2a9ef52d5d0aa",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "360057512af7448491d6faaf7b752527",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[17,35,53,71,89];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f084529d56494ceaa07d4721964e76b9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2d0d260eb6ff40fb8fbda95ea9d590c4",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec95c502fdee45ceaf3f40548552324a",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9034545b645424f8f928f9e5e1410a9",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c58349b185f4adeb48ac4c6e915220a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a0bb4ff0e9e4167ae1b47411d7b6fd4",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14934cd264e145dcb58bc599d0aafa8f",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8baf566354e14798b5c6e9da137faf84",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0f90f16e866f4aa8b4e7c937bec4381d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3eb70e922b414f0b9e6231e339085f94",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91185ee6b31049158c19630003e2bf14",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "c2ff548248aa4b3c8bc84b003862cfa2",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1c025bff9ca94f56b303c5296c0e13e7",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca0f4a7e470f4360899fe45902117fcc",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1ba026ffa54647af9a3e58ff2b0dc348",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3c4b2c24070e451ba3f23c728095bf5c",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d97b3f343f742759b9bd48bce139a63",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f68c79fdc814b858eade551d98f04af",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cf231dfecf324a9f8a65c089cc981c73",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0c09d68271064b349bf65cbb43d86229",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "489567425b764b04abbf977a4903d14f",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e94cf1448f74c35a0de43cb9142d6d4",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2d7a3282dc984fd192277e0104cfcdf7",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a299ad41cd6a4031bbbe83177e1c57a6",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[18,36,54,72,90];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "76f7f6fe6350491fa406710faff1edce",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e8d5d9524cf7471fae9774539e13afc4",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "539e7ae321314048bb489a6370ae565e",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "ab0861eafb69421dab984b86de12df39",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6f7a9a675ef141d1a5a407067fb39fef",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "063cb62d9a574b80b40ff3e449daf4e9",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "10c31fe924b24b99a07aef36fd6b1eec",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "318cc47969a84527912e99bca569fade",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[19,37,55,73,91];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a5a5d086db344e9da963479de57fd60b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3c9e564caf6f4c0aaa97966224bdc9a8",
          "Name": "list",
          "Description": "Lista da qual obter um item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d3dd7c83da44bd6804d9361800cf5b2",
          "Name": "index",
          "Description": "Índice do item a ser extraído.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90bd570d20014cd2bc0ea644d7b8d624",
          "Name": "item",
          "Description": "Item na lista no determinado índice.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Retorna um item de uma determinada lista que está localizada no índice especificado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "91292b8274fd48568683df122fd030e9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2172c19487eb497880e4db565a0c4ed0",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "615b1659d0db4457a025484b2b12c405",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0351c14127c493db0ec08f1aa4cae28",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d9133d00a35a428c8eba79cd14fc814c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "acd15ca7635341ce8f32d65b6ec9e9bb",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b064949ffe3c43fbb7a8ec46fb612efa",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "fa467b2075194120a198175aac20b56f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "96d0d5dc5d4f441bb78c4b58d4d375ab",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d16ae9f8a9db4ffaa50467760aad15a5",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "52ed74ba85864f22bccbc187aa7fbfe5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f5a332bfcba745528eca67edbb80a04f",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29b96ef7b3034ef19123f7b6ce815258",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9d765134eb641b698ff932512bf8305",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b43f909ee54e4aa0b2ee18489ea66ee2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bb6f47afefa74f449879df6e4864f827",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b1b26874ade464988aabc948d0ab6ba",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7477592868d0470098c83b1e43845f71",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2c4b093156014a9d84ad021f1a1ba705",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6d67e31ccad648d59da14702d3f161e0",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "924d6fc4f5b14d7bbe29ff44d3ce0632",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d8b867cc1ca4c5aa392c83425930658",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "8455e815aca34f409fc90db98e58b978",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "a5a84770ac534c55b449fd586db5b759",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f77e17d316354202ac9db1df98558a6b",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9601e38e3f94530952a29d127d54be3",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d53b8ec1c7534dce8953c5b3a87c887e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1414fc4967cd43bdae5e85235a6dcdc8",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "289845c2b77844fcbf9ab15545c08cf7",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6685372ed8e4ae984721ef2ba9d9996",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "168b6664ee0741639ece699ad53cd3b5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3470c9611fb6413780ae5fc6ebed4a5e",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b2aceb6509e4bbba85f4f8afeea558f",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a893964df914c3eb40dfedf8b993a9c",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "289b20c0a8d441748dfbda0dd0127a54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "19eb6911574c4173a86595265ad856f3",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeeeec7625e94169a18ba3951b929cd1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d5674e863204c99ad3f9cf50f995099",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "003213457ef34e429d201b14c5be8b52",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "53e436ff2311479d8bc6587db7369eb9",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e12baa69c8244f6985151cca68b167fd",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c0a254fa4654b94bb59e15bdee05c84",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "667679e450fd4ae48a73c8e2340b45ff",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0b14f6b5c4ad4fbeb2479c7babbda15b",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04f083710f1e4e50bb93768b84b23aaa",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c267baed6924c7485029a729693c593",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "694f88c5165141d8ab070addca5f1fc5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "29925475087f47e9823d14619ad1d600",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c8526b7ff8c4b069a076fc2d51ed101",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9ba40dc55ac4330b4d726cb7d765bf3",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "46f4a016a935449e9eb3be99224c545d",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "fc77cef6106d47019643c83fb1efe9f1",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6de712a5339c4ce49ee9c3801c5bf0af",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1cc267ae8b841fe8949f5f3ea8e7a8c",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ba511b4eba8149f1a4f49c110f595d9b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "04fa5b0fa879422783a3e961baf496ac",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab9bfbe484f04b5cb5a3c2ae73861c5f",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6cc8049bb4c24b32b9612b26562333df",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "41fc1a5b7f4d4ffd8fd25b8c0be7f983",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f0baf5be04b246bea11c14b24427ec15",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "add43dbec1294751b29d919b91b75484",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c816844f3d54bf1ba42c91cd8d124ff",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "ff60d58ff6b548adb4731c0a343cde20",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "20ff201bb63843c0b8f434a53918fecf",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61f93d2d9a1845f2963d03fd089f7d78",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "991f5817f51c4eadb89a6f02207123ab",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "111acb9d5438418aa55772dda35067d4",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "872108ea303c4a96a4c68ba4b03b23ce",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4369230faa34ae983c4be93b36a1412",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b5b8c5b35804a70a8f193368a729136",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "66043f6559f44e1eb314eb3a21932905",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ec508e77feb8400fa6eadbe5eee72c37",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34aafb90a74f4bbd88e617726e7e111a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1bde3b7c0eb94b0d8a1adec9d234cfeb",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "09454d0602cd4341ac76b3d3f7a274eb",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "bb5c7d50737842dda921d839d9b22c91",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a684c1a2be994480979fcc94a151e389",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc40f15c23fe43f19e60e9a819c13fa8",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "306c59ce3fcb4c79a1743af36949dd8e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3e2a38c818ef406bbe2413b3f5e2f59c",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36eb20898978407d808d83ef4434b75b",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7d1a4118dbd4fafb14e886f0f5d7b40",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "0c689a25bbd141e48d1caf234638ba37",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2ff1ce9b29c94efeb962c4252d30b451",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ca5cd0cd20a43aab216fb3f569f5a88",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a02a2bf128f4cdebf8485a80c3cc109",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c4ec726888f74e5aa2fce3f54b9e372b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "08a546c925d842479a5d42774f253da4",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8998123ea33400cbeedc07a82f69083",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25b4e6238c714047a5b170b8fff339d8",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "b2a86b74b2ce4f4480704a3a44a8af0e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e9a526d57d7c494382bb5e6474a09b48",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c2629d3c9fc424da9d23f690cc84886",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42cbacb623a2441eaa25bf2e06dcc70d",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f27373752dbb4f4fa60d2eae7739f793",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "847e3cde095f4d2086f390af210484fa",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09a78cf8c9834ecc9d35ca7971933d31",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6edaffe4155f4e6ab929f89119bb0cf4",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1ffd015e2582424a816c2d4b63a6f18b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f0644936e7b6405f96cbb300cf9f1f28",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0e72b9b21194aa0bb220b48cd4e3276",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ce1a367aed04e288c92e1d5697da4fc",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "414a50541199454fba59f92f751861a2",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "afd954409ce24c7a97f402fa2cd08b8c",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ae5f26612fc4e60ba500751a1a863e4",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcd6b32aca5b41a08716d13a544fbd72",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f5efa8ea2b8c4173aa1536a43267f128",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "57090f65703e4681b949c9ae54e79f8e",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d3cb55e98e5490f9859f14b25598b66",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62d8ed56000e4f1ebbd1886270ba2e1a",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "7abed2e917e646a58cb20dfaf6590e10",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2cb76a1e0f8947aca776b1bb71ef19ac",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82847afa41b14b6c89bb14c5aacc2a16",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "333c8d46b1544950b1a19aad22a94ab1",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b78a981bd80648c9824c610a00a53bc9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "23cd25265feb472baec8333905d2a7a7",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16113034ae7445f880db6c7feaeae083",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6d32cad04fa42a4bd14584b440604bf",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "ae695efd430b446b9d1123e541902711",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "648faa29bdcb4410974ba7b6bd6b1321",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbdbfbfae8c248708643ba040ec976b3",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5674fda11c32463c9134a731f2592af5",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9b6ee560f6fb496887ea15d5f33be59f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "732cb58ee05a46359da2c5f2d4bb6a29",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c41e4ef926a4ea38670a536248dd95b",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e104103c667e42d1b8f54911a930c1be",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "d30f71b4713345efbde7caac94c62734",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "42103a3ab5524ff9b97fdaddcc353581",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5189391f33043af8ac7a5fe6273c70d",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a997e1438d9445ea13b65bdd118dbe5",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d6051556292a42cdbce3c8741a5b2fe0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6a7e2e1481ef4083b0336030f8c2384c",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9616d16238844c19f96cfc8bcb95e61",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26d014c5dfeb41d5a5cc00c55b3dcaf2",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "ddade035f50046f2b83c95fde6259607",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "64872bef8ac842448454608b991ba8d3",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b9c184d25104c87aea62756bdb9e3b3",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26f8d1dbd44e43368d7f5e5c78455a7b",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "319f3b8b8fb143bd8952b7b8bf20a152",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1675518cfbe8413ab5ee7e0346e45d44",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7c3a3770e734498abad4ac8bc2e7f0f",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77fd3f0e34f54fe0ae4b6acba11defc9",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5890b0ec0fe047a796930e1796033270",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0fe981498cc24e78bd9fca444a2b520d",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9566e4d9f10439d8ad111c723a966e1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25b30291143d47d6be39e42fae57fae7",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9229bf11142d4d70bd751e1fed72e663",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "43deaae865f84bfd81bb100ffb3acec7",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bfbd23a423c4c6c9b363ac0d319b3ef",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e9e203a657e469191f94ed4197e1b6d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "a38a47ab29484ddcb0c0b3c03fb63dc6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9cc6baa20a584e9bb46b00985db9d0cc",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62c3e89af06941f1b4639d95d43171c8",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4044bcaac3fc44eda612ae0ca6ed9fe6",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "aa6ef12860d242f0939ffb603a061e2f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0b1a76b1f604c0dab70ab798e671d1e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "50,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "02981f9ee4a048de84baf08464859dfc",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b6a57601ca44d39a7b4caa1cd8f5c6d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "70,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "2d2b468417e34fd4b4777907c6399142",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da842d2c1f7a4dc39fe7c38b2ce436e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "25,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "8e7caa20323a4f23ac000b2d4e02e4c0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f127a33646fd40039edfe06c4185a354",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "35,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4f4086765c6c43a098a03c8187ec1a47",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c1e72d9a22c142e9a72a2de25d99f7a6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "16,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "16edc0e56cc3422492c984e6a5638e1c",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fecf05342be243f1a2da6477a90fd305",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "10,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "c8d561afcf2b4c4f9f4cf8accd4fe4f0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d337c38b2b647999b1a5c91ee6a36a3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " 6,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "ae49e6f9176d418abdb02005950386c8",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3bc6c0de8c24c378fa3839267ff4282",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " 4,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "7f2a405451a949bf8b85a75a17509ba7",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9ea6aef39e94b0984ec4c17393259e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " 2,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "86f95e21967b44f6840f114ff82db6e6",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84688aff25d14032aa02918d20cde7ac",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": " 1,5mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "49e2437559aa4642a8baf41496fc88b7",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ecd2ca57fae4eebb22483756745dafe",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "500,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "a2ab0fa4c8424438a9a540d86047c966",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2a518f3eeee437691bf8dc4e99dbabc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "185,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "9205e0cba15b450ebd0d35247fc7fc9b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b059473a184f4e2c803786938ce41a21",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "240,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "64ea98d9aa1f4679861101fa59de8a57",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa55e9b189634b69860cff01e46a4d09",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "300,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3bafd02f665c4523a74aeb1063bbd106",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5b698fbbcd247eca6be58b930205fff",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "400,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "dcb538c40bf74a0b99095dc59fce0d5e",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74d144062fe542b4b7fcb8839684f9d4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "95,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "06c6bfb1d9a74db4bf8cffbaf35648b3",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea970840b745427285298ec3c0d1122b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "120,0mm²"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "a40ee3719a6d487db8adc55d5479c1ec",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d91d84c8961441aab0d449c987b57e4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria uma sequência de caracteres.",
      "InputValue": "150,0mm²"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3e638692d2d244d092f54dfe2032a5d8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8349a21adad7453499711f6f7f757f07",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f5366c3022d4a98a69cafefe4ce0b24",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e5942f90c25a4ab29051de52f3824b42",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cc3076543b174ee3b549b7d355382256",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "736145fc9456498fa4c1d3422c8a7288",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b35e3f2b443c4fb094f44610ceed667b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dce662591ce840cb929bb640e555a308",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30510dd8916f4be58cf09216ef1209d8",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "089366555c9e49b4ba88b5465da59103",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8a29cdd05e35489eb82bb91c1069457a",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57cf7bdd11e2453f816a1ff7c95d7e87",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cca032bad4f24dedb1cf78fef5e43523",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3cfdbdbd70c54be4aa0225d4db6f57fe",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27290b6199834347a7dbdcaa2503c990",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1719bf191b63450c8e0ade9f7f5ba0b2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "436f139e1b424ca9b28bf5aa61b9cbe1",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adca9e4e4116453c9a706d209ef99058",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36c3e6de3b37493382138ed9e8cda74a",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "10552edc79ac48fc94c3b1a38ce28261",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "66f2f71cc2404df096a9fc0181b7e6a7",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86623b05ea69471d839734eb4b91ac80",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2be052449a447f2b807a2cec947b023",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3f6f3ad477e24317bc2cd6b5baeafd1a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "313295cd93f14215ac0726305754cbb0",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "770c32dcfaac4f17833872e5b75c0e95",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f5ac408a5344ead82b38545f2b408bf",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "58f6891a72b0497db9b75f896ed87531",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6a964e9edb45437bb86dbd803b698d31",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "765c4757ce9e42a1a5e40f0e5fbadcc1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d7a387ad817476a8bda9366bdce284d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3f46753ee98b464a87ab4ba91df991c0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f4eec8e946c8444ca60e6d1297cbd996",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd4c6564027944c9bd574d7cd5944ca0",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f57e62020184228bd2f9f3a1d0f639a",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "315ef149172a4f67bfdd695d0945efbf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2637ca751d184c3a8a433657559a1cad",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd7e070c0a524610aefe3dee872ffd56",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93a3da888c634397b4447b821705204b",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ee7d9d6977fe4b6b80544077750a5cd4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2b87cdaffa9a41ae99509b1608976656",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a56f46caa48b43f0b6cc049d662ac992",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "44a02eff908a41a7b927dce4239f4ae0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1d746d31eb2e478b89e26ad590f235f1",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95a02ed725ec4fdbb4cf4417acc0b9fd",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86ca0d6a655544eea6e01c6ba56b7716",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ca7ace82abe4793a0e81aa83ca158f4",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7532e3a51ead48a086e09a1d658b203c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b7ca6cf4683e43e68863ef93b1e1b090",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eba9b0b153134485b963ff455a8882c3",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d07a7c4a943846a39e7ce7939178175a",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2836b5126c2d49cd99d808db41a6c9ab",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ae3ebbc6a4e045d2a9a2d420ab035508",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "af4713cbe3f54b51b7a8020b60685889",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6d9b6f2bc5a41c49bae1d1fc1f6e62a",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "903a56ae91544cefbd1090cc47ca74fb",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9cc4a9b429894dc2982a177edfaac6b9",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7ed8d2e4b2ab4290afd8d10f467e38a8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4127d8f23b134fa4a9835e1bfefa21b5",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2095e224d53c44b8a8175dabd12337b6",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ae400117f6242f3b1743631a60e5bca",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d28e9790f7244c2bb24b85b55b3a6a5",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "04add623e9ce4d06902b1cf4d5465a04",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f397270c5b9b4fc8b8e241ab34ff28d6",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08c6db3182a240d590fa0ddfd14c72af",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c23274b7f93f41778971199a1f68bc09",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96770d58b71e4719bcea4587cac4a8d4",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dc95168ee4434a5da1de0b561b5b6dc5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "572c2e3bddf94bd3b62b976f68006a09",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62ebd62345d043229de142ed37afde3b",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ba06fc9b5744da193503ce01f350724",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a90a69ab2d94b93a92008650a43c538",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "773e92987b6e46b28951260859dbaeef",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7a6ff8f802e4449d8ff8c6000dacd645",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24f8ac5d0eaa4d1f9b2d0df17362d79e",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97ea68bfe7304f1694796e8c025c433f",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8072f8d7cd10461ab7beedbb36429a0a",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9606857ccf314936836088ca366843e3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c0e85ea6a9cf4d1a81397ff9439baf25",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d28e2126cedf4bcd99182b033e4d0380",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25c49da5bca04dbba8234cfd6cb98e1c",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "652ec32f9a714c22af505a71e2c92568",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ea85048b72e34cb0a93c6606f4c1bd5a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5021441410e840dfa8aa25c9bbb1e791",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d7d449120b840459480c96709bd643a",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cd23e3c53484c30bbb7a483bda642f9",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "181c08b1031b43809f897d637459ed45",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6ac3ad143064a599677eae673b91c5e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2253957f782e49b4a01d7268f0cc319a",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34517b2799694e81afa5d7611369cb50",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e71dd08dabde4e1591c939a631cb4ae7",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ffd113fe85144a79f79bfab35d1c837",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "352ddd796c58464a83680931f1c53479",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "65e413de4628419e85d1920665eaf621",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ced4a2edae94180a739f96f6a0c47ec",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc20073ef7264f5c92d2ffb85e463134",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7ee694c30cac43828899da5760560d3e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bd0f8dcbf2104b9987a3733ee625ddc8",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c7e343a09ec43e09dd8b0903281d605",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3027030cc99845898a9c10965b2b8bd4",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a152b80eb88e46188097abdd777b8ffc",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ae6c4085edf4406a80682b1c0d681375",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "68716bcac1024ac08a1bd4117e91cfe9",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cac313bed6ce48b9acd0b933fe3abcf1",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c2889f84b9f4cf68520252988f99c36",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3df5786b18a34fa797e40a64edec29c0",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e04d7d0a62aa488496a99f3f6a71901f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e6f636754afa45f0896d9a736299ab03",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "055ef1f408d54eff8062650fd72c73d1",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ea7cb780b1a4d23944242eb1884a716",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "11f053bc9f3848bb8a37e57862f2fb09",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2b3b9769bf494380b5b140cb13b9dbcc",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8d45f6074a14898918e3d463ad82510",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a14f4051bf1b49a5af3601626be39ab2",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf6c8bd5eae8484ca215ed35bf3e68f9",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d2c03db2f81c4f458ab7209e38610aef",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b1c667ef4e3c4e3394faefac1f676aa5",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28d088f43ff744eeb245f3147a493bc8",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11ef79095d094228a3bb5ae5b3b6d382",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2162ba361ae8411593719a0a307b2190",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "59afcf2dc749424aa94779ca8dd22f81",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e3bd218765bd4740b3d54bb82648d4b1",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba6c9f1c4d7546c2960803050b672eea",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcc086f6c6e24d94a04eb7857eb33088",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6177c5aa3934d68b9a74cf7f6ffbca3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f693cd49e853492fab5df687717c735a",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6755cbd2ed38457bbf28327240c3b17f",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa9f5fdaf29648e4a1f2693f946f39cd",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebd81c84e9b040cf9d5dac3a665a01d6",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7cacaff703fa41df8ecd25e41fa7e8e2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f2fe51495aa24c7c90f1979f0a505379",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfcdc99daa254568a55a7647dc125e4a",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a50682c388d49be89fbdca019d01d9c",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abe1c8d5c73c4a938f756a33d2ae209e",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f6d751d3096846a3b11d0bb06705fe1e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9b63d5c937384185844516e7c2355c47",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29fd5fb2c4354469991ec29bca9824d4",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7679ecc1784d4ee3a571ba83f71977eb",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "21429be278b140a58896555e8be80e9d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "076991925f694a6a90916792445b96c7",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c76a0b9276d74488b5f61ae970be7ac1",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f27583fab2a44e80be3fe9507c228fd8",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c86c50981674fa497411e4d613d672c",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5b815bb7bfcf4489a6e9a06afd283161",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a01c8a72d9774453b9bdbeb58d100803",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb95567b627d4b058dafa9e861df102f",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ada09209a22e476ba96b8d23e562ec36",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "977f00f70ae34fc69b30ced4fb217ead",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a2fb975b395a490ba42bc0db2ef04bc0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "24558ff4dd4145ea9e100258fa14921b",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd0ae66da0bb4e769f275e97ef9dcdd9",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebec70a6b97247619a7fcd9862402023",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33f9b543dbf44d5094a5460ff7a3bc17",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a3f04601f3dc4d9bbc1c991185e84898",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "240bc6f55765422ea16933f2af93ee51",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af747bdabc6f4d5bae632842a0d80d3d",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c268dbea5bf84d90aab16728d9c8a8bd",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f230e63e2a44e10876c73bb6424f0ea",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "09e46aa95c5145c7bbe67d453cae92d5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0bb662dd20684a4a98af614fdb7ce40a",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d72c77856fe84e67a104bbfcb5237334",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f492daf40f64c779b112729f347a1a8",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad9d6d1a600e424588d81161add668a9",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7f3f86f8e6fb4607b896f65978fa0d40",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1b3021e1e3974ea1acec6106c5f917de",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfc83f8d10814c9ebdd81a8f92af7818",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d48079ae05a440bdb632bf6bcb041fbe",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "941efd637f6d4d89a080e1353915c9b7",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "03bf4093e96d4c4385ff920d9ba0f581",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0eb4e80f1c204fdca2739522b5a17510",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e818e7547a3144b7b3865fc4b3db15d3",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a2465589eed4ff181b0a9ccdf50dbd3",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5677462bc87d4f75a3cb776c730ae65d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6d207bffc4374f169aba9fa3236a9f62",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22e7b863c58e4936b7159159ca11dcdd",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "163a37f29ae04bd2a731015db8ff1ce2",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b9b1522baf643518e2262304e90d05d",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c89d17c0dc1240b3a1c320e314d80cc7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "febd9029256b4335a6fb2d25a56d4c57",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc1c3ab06811403d866d10088907f387",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "414168c7b07a45c0851b2ae0db14f224",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a903f393e834c018473a457afb501f6",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a352c40f45cc4b99bc2fbb1293b17b33",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "30a990add0cc490fb9cafebf0f619cde",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "885b585c50c64a61a2ec0902463a49e9",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23c2a06d702946f4b92c677ef717d837",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ebf85da8bf5c48b3b7bba28706c5e872",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0207fef2f56d42539cc9ae6d71be09ab",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b594db7c03c470383385c453babcf04",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b153f1e062fc4e3f9a70b5ae18553f4d",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50014f980c4d4d03b66c9f0794a68543",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "143648bea6264002a34de88f44edd18e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "277e3e28b48e4785968f3e6ce1d5f004",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0223286685047438f8e68b980106726",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34b77a04a3af4421b2213fed60c90cf1",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0036fbd7caef42cb98d1e27296d01754",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d2c7894fdee84cf4b0172e2091738a95",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6dbc942c0401446d851e5c6679408701",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a79cba1312f4e1ab1694ee674b29e64",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be54ca4d933a46b98167bfb4c68f53ab",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cd63af312aba40a3baa0dafe90766556",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "252262c79f5843c7a464cc547fb150a4",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "030e0483cd28443c9609cc7b26b3c69d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "370208630d2d4ab892bd28788e149191",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fe0b4551838248c2b939fbaeca4ec426",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b61dfed4341447499c212b2232a5c69",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "342509900a834ae7946bd02a674bdac2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58afe9bc33b94c37abda228838be8d77",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "faf12b3da1a64be788cdbc694d3e3b22",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "142ac7b7697246b09dafaa78ee2e2c16",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7bd6cdbcf1b94bb2bea3bb702efae2d4",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35c9861844be46e9a983700ae3dad1c4",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4e1461f46320466abd3a15706ed63ff6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a28a971e6be940c788783af58687aa73",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3bdaf89e3bb14310993d453cf164040d",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "499f3473cd9f4431aae12a3d61f87d89",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7c39e97e19a84389bb35359019188a29",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bac740e12ee44cab9b847980625cccd9",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5ec03d76532746a99e9597d5f243120e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ecfd9dbc909945f1a61df6ac795d543b",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcad28566b344267a31f947e46414039",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c3ecdd4fd2b4e8b9da2c496def2e543",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f5e43e8df8af4728839ade10d99b5fe8",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e44609636ed441d8fcd9f67fb810f18",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3abddbf7ee74f6eb3667b5df179d08b",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5ecd7da79c14d638376fe741c90f41b",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "924490aa8eae480495331aca3350a21b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d696229c849c4235ba68db5778572fc2",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca974d4109044f6daf30b42eb1c39578",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af6738e712ae48eb858acb9b93927298",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1857f713a7da4578b0b05a813c241128",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33228b55256c41fb86ca2b8a260600be",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "daf348974afb4cde809013f162671152",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43364d572c264dd7940ea89c52071d9a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6faf4464bd44419d8bb79d4c51a4748d",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "64903abd8daf4bf9b01b2f2f2a84a04e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "4fcc82d2bbde43ecbe54d7ee366151b7",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17737be37182430dada0d4841e92f770",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cd7e35bea994221b120e99fdc8cd7e3",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9c5fab5992d04f1d9af8bdb9d8e6a23b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b39aa3a383224b8d85b86325e8256244",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21df2bea03a643cea87d752eb6d0d9de",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9937c236bea543a5a597447a99da1ae3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7d0b0a9ce97741289052fe1d297f03b8",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa2ada424796453e979842ad57dbf4ca",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f48f691e3c1478fb80be06fef795764",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "936b3194666a434f8317209ee5a69693",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "30690338bcbf4b5f947c901fdff57e22",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f385def916e34960a0497856843335e7",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "069871e000bf48bda7f378e83858dfd3",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9440397e77144b6e9590a4236a4c1560",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5c1934c0afa4c41924f2693ecd085c8",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "392a5744808d4599b83c60f3ef8bacbf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "530ae5ee996645cb94b9eb4eb33135cd",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0111dc13b7b4e8797811916fbce2dfb",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33f8d4744d364dbe9674bcad5348f8f3",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b246e88a8ace45e29bffc04d4d82f153",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "975d6951354a4605943a4bd362b9fc76",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36936403b73649c5a25331c2f4a00a93",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8694ba3806243a6adacc179b24aa8c0",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60687c4362ba44508d134371a0fc4138",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6ac6ae83c744bcaa137ede72d62c759",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9c921839f394489cb07109a7d31a5414",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7948508eee5d48eaa40c36a2d5de6d35",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "794a717a535446aba3a05add73debd9a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "138496c6390848e7a93515133d641add",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5826f67fb2274c28bcd4e71e455b5f14",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79f93eb87cb94509a02049dcb682692b",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97d75073821e440abd098acc932ecedc",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9b81cd9e46334684b380035a0b2b16e7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b8bf0e005d884d038a008411bc476963",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f008bda39f24719a008eac0ea044676",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee890fb688584e48a323ed4c815054e3",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db7bd1d5348b488b9822088017906f74",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1eef73fc7bfa434da9aeb2cc4f1f3877",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f401462d4627463dadfbf0f679d56747",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcd66ec07be44bab994fc7b7ca788114",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05047931c9434129a7d41e1154c49ba5",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5281fba102ca4b20bda7b28504419d19",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1c1895885c484acd999c7be306be003c",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "eeb834e377c2449fbc25ae0c44c4eed8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "aff9b41c0460448f9881a9f0143f208d",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38060b697827477db8e00f22668511ed",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc5759fff5d842fea24e78b84dd91108",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f46b940b12224dcf8142afaa8738e1ec",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b243b96d023d41478d652bed5d1f764d",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 66,
      "SelectedString": "03 - Qtd. Cabos Entrada e Dentro das Caixas CEMIG",
      "Id": "2d0ce12d88a74369bd9b64b21c63ff22",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e4096e84bcc467bac048c3f321fb5b1",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2bb09eef1d9c4507b99f4bc1efd7f132",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d766bb99b1d548e39fd8106a34b9fb86",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6b9792891374a369be9c349f737c6a2",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab00dc18cecc49f888be9229fa8cde03",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f57c81274539467f8d7457e5f3f4e243",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f76b068e7b147f2b44b90ba04af768f",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "666770f2e8d744119d749dfaaa459f4b",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6966f58b7e9c4e83980a91869e12e3c6",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "82be08e69f154a88806b60c60a3a21e5",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "78a79ddad3354c129a010a33a8e6e123",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5e8fa3b5726a4822b198db6ee4eccf1d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "28197e7da09842d1b1eb71a3b2794cb6",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "913d4df8ec9b40a583ee1c197c0fe2be",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30dce31822ca4884a6f262d6acb8b9c3",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed526e16c5434dfd8446023fb686b5e9",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2e40ba27b614b01a13283439904d67a",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "53a45f5ab10c4b9180105efd9b3a6a79",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "91ce1124619942dc8fffea12662366d6",
          "Name": "scheduleView",
          "Description": "Input the Revit schedule view.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea17b80597394f17982e5b7d0c2fd9cb",
          "Name": "columnIndexes",
          "Description": "Input the index or indexes of the required columns. Indexes start from 0.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e989b46f68d426d83a41171606468c5",
          "Name": "removeHeading",
          "Description": "Set to True to remove the headings from the schedule data. Has no effect on Electric Panel Schedules or if schedule headings are not visible.\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17c45122293545f3a4b6d8465a4b0bae",
          "Name": "refresh",
          "Description": "Input a bool and switch states to refresh the data or set Dynamo to periodic updating.\n\nbool\nValor padrão : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74eb6536e300427b8aa1e7084df8dd06",
          "Name": "string[][]",
          "Description": "String[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Schedule.GetDataColumns@Revit.Elements.Element,int[],bool,bool",
      "Replication": "Auto",
      "Description": "Gets all the table data from a given schedule as strings. Column indexes start at 0. Supports Periodic updating.\r\rVisit bimorph.com/bimorph-nodes for support\n\nSchedule.GetDataColumns (scheduleView: Element, columnIndexes: int[], removeHeading: bool = false, refresh: bool = true): string[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "eca71a4f27bb4f17bfe2079ddc838781",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "416d9bcb6b474a0db914f510b5cfaae6",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "23b8b356a5fb499ea2659d09de43ecdd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c19f9e33a6a1428798184e72b3fc925f",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be32bc8cda5146daa3bfde1bc4bf30af",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3a49697e17e433aa893c2f9a8fc1507",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8b562e0b4fc54696ade31071e11f6224",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1c7d00b9f2d44489a3435420eb72b407",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\" \";"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "888145cb0af345ac89d9998f6e6d5d2c",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3a3359078ccf4bed8891375f7e332104",
          "Name": "item0",
          "Description": "Índice do item nº 0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3858261034ba4d1a916590e35493c8c7",
          "Name": "item1",
          "Description": "Índice do Item nº 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19761d95cb174d31bf3428d6342ff6e7",
          "Name": "list",
          "Description": "Uma lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Faz uma nova lista com base nas entradas fornecidas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bc0d6f9f637c4ca99c57f52bf39e3d7d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d2ded0e1f2c942139d7bc6f91b1991b9",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ed33cad1e51490989add8392f434e48",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "79e408b02429421dba0a2275cc2638f7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a9181edcd74d4a06a85de1d180a81525",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58807f1ea8d944dbae76fc2a24052033",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4f4065bcdbc24f74b720e2c02f538dc8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2c36204b318a444a90d36ab3a47f86fc",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1a73ba9aeac45e2988c432fe83497dc",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf538ccdddb84926bd5842179fb04433",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd6c4a15b3dc4617b0c82cac4dd046d0",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a0cc95471b164a68a928064ffe2521d4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "15dca42f3e5c470e95e73a6514626d1f",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8be90e3421a6455eb6ad20483c5aa9e5",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a471b698d8614a8fac345f15445276cd",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a20014c342a0428fa22c7c48fa38a5be",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a42d2160473e4c43a833c728538f7a33",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "828003e28319470abeccf14ddaa8106c",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d6e584131644df085dc2e69851e775a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "babf140da89344b7a45f5908059db7d5",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "32591eb12d09411fbbf1a9cc612438d5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab398b0033894bad9ce123597555cc58",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "795124b97a084625a87b02ab585dc522",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 82,
      "SelectedString": "04 - Qtd. Cabos Flexíveis (conduítes)",
      "Id": "2b1264ca383f49a8813e18aae3e69602",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cec659a19fc14d1581f7f7d220aa025d",
          "Name": "Views",
          "Description": "O Views selecionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as vistas disponíveis no documento atual."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6d7ca80137fc479aa8a4caed6296489e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ef0c605c4a9b49ddbcaf183e032f3915",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24a5886276e6481dad326377c64df7b9",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "884069602e6d485698c7aeb458fdb54b",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fe3706465cd45a993e5f31342b70dcb",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8de2a484086a4b8d876f0ec11b48706d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d9597d908af54ddc8847dade4567ee77",
          "Name": "string",
          "Description": "Sequência de caracteres na qual pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f2f434b806f4c5dab40addacfc6dcf8",
          "Name": "searchFor",
          "Description": "Subsequência de caracteres que desejar pesquisar\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59d7beebd51e4a6dab7d748e62c4bd1f",
          "Name": "ignoreCase",
          "Description": "Se a comparação leva em conta as maiúsculas e minúsculas\n\nbool\nValor padrão : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e16831972cdd44c89b15867c4390fbd9",
          "Name": "bool",
          "Description": "Se a sequência de caracteres contém a subsequência de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determina se a determinada sequência de caracteres contém a determinada subsequência de caracteres.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "44222ff9af984c1a914763be063958c0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "03478a8a91304e08a7cea728dc80ccf4",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c93fe60f400435790d292404e03c81a",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40f5a81b1ec847aca4df53fa37ad8646",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f577a28958154c8cb9e72476d462410f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8691a70667e34f2a9a487d75d37af6d9",
          "Name": "values",
          "Description": "Números para acrescentar à soma\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51fe4927638f4bf7b7e1501337f5f3fc",
          "Name": "double",
          "Description": "A soma dos valores",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Localizar a soma de uma série de números\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "Id": "d33d44aa237e4a2993d987169508abaf",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9a2c2b67d7e54c059a8426abe529a76b",
          "Name": "test",
          "Description": "Testar bloco",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b98f89061b94314aca6dcfbc01c432a",
          "Name": "true",
          "Description": "Bloco verdadeiro",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9ea64d6181444efb9b0a1b482769665",
          "Name": "false",
          "Description": "Bloco falso",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b83dd3ff2aa485a9f6dfd75b318046c",
          "Name": "result",
          "Description": "resultado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Declaração condicional"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "68aa7764812644d8bded67c4c5b3e982",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6da6faf08e4a40bf8f96d1cf6179afd1",
          "Name": "x",
          "Description": "Valor inteiro ou duplo\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f63e4f0f7394bad88e196aed6a9eda5",
          "Name": "y",
          "Description": "Valor inteiro ou duplo\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0c48d57f8054da0b623c9e7fb85a805",
          "Name": "bool",
          "Description": "Verdadeiro se x for maior do que y; falso se não for",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x é maior do que y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "aea8042acb6249b99f5aca736649ccf4",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "435ad4e9895d43cd860162ae01083eba",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[\"Nenhum cabo foi somado\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "717bc759cc9743db8cb6d36a9c2d7e9e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48b332cf7e24455fa490400bd55a6cd5",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "[\"Feito! Todos Cabos Foram Somados na Tab. TOTAL POR DIAM.\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1d76159d34fe4bcf8cb8d3833651d8e0",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "706b058e7e9946f1b06476c4a6552690",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "0;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importar as bibliotecas necessárias do Revit\r\nimport clr\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import TaskDialog\r\n\r\n# Pegar a entrada do Dynamo\r\nmensagem = IN[0]\r\n\r\n# Criar a TaskDialog\r\ntask_dialog = TaskDialog(\"Ok\")\r\ntask_dialog.MainInstruction = mensagem\r\n\r\n# Exibir a TaskDialog\r\ntask_dialog.Show()\r\n\r\n# Saída do script\r\nOUT = \"Sucesso!\"\r\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c88ae387e3f0420c9164793d16fd70f8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "55f5f8d68f824cb79ee57984fd1eeb2d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ceef20bc48b94d668c74bfd69aa12816",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "03642a0538184edb98225f2a600a62b5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8145b33f460e448887d0c91ac48b5b81",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3616570834b4b2abba0847bffbd0d77",
          "Name": "amount",
          "Description": "Camadas de aninhamento de listas a serem removidas (-1 removerá todos os aninhamentos de listas)\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7510a9454f764e3faeecb71a922ba2f4",
          "Name": "list",
          "Description": "Lista nivelada por quantidade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f797ddab6c9e45f48c5f6a4a15b6d952",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b356bf870be94a42a530be487e9a1546",
          "Name": "list",
          "Description": "Lista da qual para obter a contagem de itens.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2c35ebcff1c4b8a915d750a2f58ca1f",
          "Name": "int",
          "Description": "Comprimento da lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna o número de itens armazenados na determinada lista.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 503,
      "SelectedString": "OST_GenericModel",
      "Id": "01f97593c9ef494685b84e836f3e6d40",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b6ba93f15f494ba98d026fef5ab7aa19",
          "Name": "Category",
          "Description": "A categoria selecionada.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as categorias incorporadas."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "e909195620a74049be16c0d86b1ab742",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "19ee3b30b5294966b511f9f703678879",
          "Name": "Category",
          "Description": "Categoria",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac8e9621968c49cfb543affce0e1091a",
          "Name": "Elements",
          "Description": "Um tipo de elemento.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obter todos os elementos da categoria especificada no modelo."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "5c5c6dbb743a447aa22e1a9d5cba89e3",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "7dd5514bea0c4b74b4ead148370c885e",
          "Name": "obj",
          "Description": "O objeto a ser serializado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d71a8ce64b145f2b97e95679067b7db",
          "Name": "str",
          "Description": "Resultado do cálculo matemático",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converta um objeto em uma representação de sequência de caracteres."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0acc4c2e6ef14d608fcc7a3e6e0d30f0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab8afe53438644f59ed99d8c680a845b",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08c0bfbd039f4a13916a0acfe5e8afc3",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42864030e8854a22bb0f60d812df12ba",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "142b9cde8e1648e48dc369656a5859f2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3636d273c565406fa76c388cf36a9ae4",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"Soma Arredondamento Cabos\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8961d4fa827b4d9789eabbff1e245042",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "41234527e02a42ee9cdd33fe2242594f",
          "Name": "list",
          "Description": "Lista a filtrar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "758ce19acfeb4bfda937bb5461855ead",
          "Name": "mask",
          "Description": "Lista de booleanos representando uma máscara.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afc2e97956204b7196232fe4c49c03b6",
          "Name": "in",
          "Description": "Os itens cujo índice de máscara é verdadeiro.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2aba13a1d109453ab0bde031a7ddc67d",
          "Name": "out",
          "Description": "Os itens cujo índice de máscara é falso.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filtra uma sequência examinando os índices correspondentes em lista separada de booleanos.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c1ecd28cb2445f8b6557c01a41d5de1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bd442c2d850f4675acef5475ee0eca00",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bd214f966e04d19baf273ff6e0c3179",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "350c067038bc4345bd777c5a0f6d0c0d",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b6c5c497e51418e9807d00116a551de",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "5610d24d-04fc-4ef0-ba86-cd8215d14e9b",
      "FunctionType": "Graph",
      "Id": "7a68df7a039643f793b771c974bb7150",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "412bdafb37404988b13bfd9d9ad841f1",
          "Name": "numbers",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d092e7f8b4c4de0b5b2c394e2849ef0",
          "Name": "multiple",
          "Description": "double\nValor padrão : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b822bb59f7854ecf8da1ae929880a21f",
          "Name": "number",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node returns a rounded number to the ceiling of a specified multiple."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Carregar as bibliotecas DesignScript e padrão do Python\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Função para concatenar os valores de uma lista em uma única string com múltiplas linhas\r\ndef concatenate_list_to_string(input_list, delimiter=\"\\n\"):\r\n    # Verifica se a entrada é uma lista\r\n    if not isinstance(input_list, list):\r\n        return \"A entrada deve ser uma lista.\"\r\n    \r\n    # Converte todos os elementos para string e junta com o delimitador especificado\r\n    result = delimiter.join(str(item) for item in input_list)\r\n    return result\r\n\r\n# Entrada pelo nó do Dynamo\r\nlista = IN[0]  # Lista de valores a serem concatenados\r\ndelimitador = IN[1] if len(IN) > 1 else \"\\n\"  # Delimitador opcional, padrão é nova linha\r\n\r\n# Saída para o Dynamo\r\nOUT = concatenate_list_to_string(lista, delimitador)",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "7a57176cc00d4d9eac76b4c693e32bc3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6feddb7f1705481b80aad545681f9804",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ae07abff61840f698ed27add83f5ee2",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0100d7faa2734d19a50b0862b96d31ce",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "317515641f9a4206ba70fb5125e8b538",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e883abecf5264bfd831e87ace7ebd555",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "b4e6f28c70a2454aa7f24227773a21c2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "277de11a3ad94c7dbb79f96b6934bcb9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75643494c14f41ce845b2eef737f6f54",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d5dab189acb8461493310c19d332665a",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6466373831674ccc92f0d402defbf93b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cbaca590b7a470ba1b3785b8acbecb1",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0199736090ac4b68ab948e3e0923b538",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c8e9dca738f546378b08a33afdd12327",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "474fde897e834dd4b7fcc0aeab5d0e8b",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5eabb59222c243f4b5aea5df20812229",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e09af0bee50b4ebb9986ab2dd06433bf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "defbfad4dff044caa343869f191fc8e8",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d7adaea0a148442caa986ff5a3ee1668",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2f03915ecdab44b7a7092ac4ad87ac3d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "beae07102e2b4137bb2301ecfe99de20",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "fa55411e977a4fcdaac9c83670ef0386",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "be8e8fa04d6440be92ff54e18478dfbb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58c0cd51130646c4b5ae3cb0d9013d3a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "6ca924a7e6ff4214a47b8f048d729880",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1ef7b516042a4329aeb0e57552fbb11c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf9efb524f684407b4ce929636e5ace2",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2993ddccd571460b9ac57790f53e9e8b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a7d91057762646799e5a0f3c9701a673",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81a7f7acd3404acc83ed5a4935bdbf4f",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "92280a9983d64eeb8e00181bf1461cd5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6618a8a14d4141ed85c9893f6390b8e0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92a64e8f66904476ac61b9b72d5bc945",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "70f0c25d8d9442b9a2f7799066416ecb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "96b1f51211db44d88b85c3d9d55bb53e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3244cadf6c8942e595e5dc68f571347a",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4931421454ee492aadef02bc113c6e1f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "70a3d68a8fab455bb47d8b1a625fa491",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72501bb7b7cb41bbb9c30a091b3582dc",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "3cfbb954326b4fb3bad3233e41ef6328",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "411be18c0f674106b8629cfccfa80015",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "302b736afe7d401a96307598a92f2f09",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c14f0fc96c784a119e9d0b6c4da8bfda",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "669fc8f33f5441afa8852e53a8c5fed2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc6cb351b4a84c96ab5662d9df087ef9",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2e194aaad5cd4aad86c8c7ba786a5717",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "43c32e908c174199938588574a42b197",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d3f5e1b73524bd28c3c2503ff0ac5a3",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5be44d6c4da9435a9ceae8351bcd6b2c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "99c7ab213f92411b8fffea37be727bb1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88b392c8d7684f0288542958612344a1",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1daa2b65fe9e41dfa0f004b29c486137",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "817c857f16794107b898da813fe88196",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d672dfea8fe40b8bf481f4cda2d97eb",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "960087f05b194db6a9e29bff912f26ba",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "534b9f2e9e114361b4a4898606a4b825",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cf422922b6643cfbe39d6ac45bad3cc",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "6b9cb3c2fc5a40cd9316aba45a148627",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4eb28854d46c46689e5fe7c9359017d2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed98e42c2fde4398851e29d882e428e8",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "aeeb9f46fa5b4c1aabf2052c18a34b5a",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ce81ce700eec4731a993e132bffe2309",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c0a6af44c6540958fdff9a47cb44d98",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Importa as bibliotecas necessárias\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Define a função para converter a lista de strings em decimais, mantendo a estrutura\r\ndef converter_para_decimal(entrada):\r\n  \"\"\"\r\n  Converte uma entrada (que pode ser uma lista aninhada) em uma nova lista com a mesma estrutura,\r\n  onde as strings numéricas são substituídas por números decimais.\r\n\r\n  Args:\r\n    entrada: Uma lista ou string representando números decimais.\r\n\r\n  Returns:\r\n    Uma lista com a mesma estrutura da entrada, com os valores numéricos convertidos.\r\n  \"\"\"\r\n\r\n  if isinstance(entrada, list):\r\n    nova_lista = []\r\n    for item in entrada:\r\n      nova_lista.append(converter_para_decimal(item)) # Chamada recursiva para manter a estrutura\r\n    return nova_lista\r\n  elif isinstance(entrada, str):\r\n    entrada = entrada.replace(\",\", \".\")\r\n    try:\r\n      decimal = float(entrada)\r\n      return decimal # Retorna o decimal diretamente\r\n    except ValueError:\r\n      print(\"Erro: Não foi possível converter '{}' para um número decimal.\".format(entrada))\r\n      return entrada # Retorna a string original em caso de erro\r\n  else:\r\n    print(\"Erro: A entrada '{}' não é uma string ou lista.\".format(entrada))\r\n    return entrada # Retorna o valor original em caso de erro\r\n\r\n# Obtém a lista de strings da entrada do Dynamo\r\nentrada = IN[0]\r\n\r\n# Converte a lista de strings em decimais, mantendo a estrutura\r\nlista_convertida = converter_para_decimal(entrada)\r\n\r\n# Define a lista de decimais como saída do Dynamo\r\nOUT = lista_convertida",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "6de375783d8a4c1a9a3b8601a9c468f1",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d379302c897c407199fabd315f85c37c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81cadb40f67f452e8942df2e2d3d4a4b",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script Python incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "67b208dfa628489ba5fbba8eb846ed7f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7a4bb0fdede1470ab14bde2e1a4ab37d",
          "Name": "x",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28afce8731a5479f937f284d43ced79d",
          "Name": "y",
          "Description": "Valor inteiro, valor duplo ou sequência de caracteres\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c66b41ac5d6647a9a1090b70547890b7",
          "Name": "var",
          "Description": "A soma de dois números de entrada ou a concatenação de duas sequências de caracteres",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Retorna a adição de x e y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "Id": "6d062c6478eb4b5dbed75c157a7dcc8a",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "745d8308cfee4020b348c6bf446b41d9",
          "Name": "item",
          "Description": "Item a ser potencialmente substituído",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ffba980fde0466f931a2969b6ef47a5",
          "Name": "replaceWith",
          "Description": "O objeto pelo qual substituir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc7c0cea84f04fd588fa4eb807d1293f",
          "Name": "condition",
          "Description": "Predicado utilizado para determinar se ele deve ser substituído.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99c500b31e5447ab811cfa5758da0a87",
          "Name": "var",
          "Description": "Se condition(item) = Verdadeiro, então \"replaceWith\" é retornado. Caso contrário, \"item\" é retornado inalterado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1e657687e09a4887a748346d4685d956",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "23e3cf6baaab4267abfe069804e180fd",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2e63bd36fe348abb702e47a3339803b",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a45cc39f3b3444349cf5886dadab2f4c",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ad052bdd1ad54bc7ba11bf7ebb316189",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3d0916d8d2c644da8d04617a93da0674",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4785c3abfaaf4846ae1825e059db960e",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"0,0\";\n\"0,01\";"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "Id": "da2a4d6b7ea44f6b9806ed7e4317896b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3f5379e9c0ce4809b579deae3e6cfc78",
          "Name": "item",
          "Description": "Item a ser potencialmente substituído",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b0befe3a3854c589ad2144ab87996d4",
          "Name": "replaceWith",
          "Description": "O objeto pelo qual substituir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "376a7e04b1f44ad89aaa05a2932fc9e0",
          "Name": "condition",
          "Description": "Predicado utilizado para determinar se ele deve ser substituído.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc70a95a4288498f836ad97c1370de1c",
          "Name": "var",
          "Description": "Se condition(item) = Verdadeiro, então \"replaceWith\" é retornado. Caso contrário, \"item\" é retornado inalterado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "Id": "9b9da2fb9956450e908a6afd1dbb82a2",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "5d9ce283ccdf4c0ba3e68aad3be5aa81",
          "Name": "item",
          "Description": "Item a ser potencialmente substituído",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7113a3e9ec6f4d07aa8a8b5e65ed7f4e",
          "Name": "replaceWith",
          "Description": "O objeto pelo qual substituir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aaf1dac375374203ad3b6b7a4cbd5189",
          "Name": "condition",
          "Description": "Predicado utilizado para determinar se ele deve ser substituído.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47909c7deefb418bbef7d00d6e1ed287",
          "Name": "var",
          "Description": "Se condition(item) = Verdadeiro, então \"replaceWith\" é retornado. Caso contrário, \"item\" é retornado inalterado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Substituirá um item pelo substituto fornecido se o item original satisfizer a condição fornecida"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "789c5d037b5a46a2bfcd38a891c52a81",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8b0a706ad9884f4aad6cebb02b98e61e",
          "Name": "x",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "744b7d69dd394fd3b4954a5dae835591",
          "Name": "y",
          "Description": "Objeto de tipo básico para comparar (por exemplo, booleano, inteiro, duplo, sequência de caracteres etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "770516fea8f04038a55fb824ce456339",
          "Name": "bool",
          "Description": "Resultado da verificação de igualdade",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compara se x e y são iguais\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5e394dd2f26b48caa598b3978b769578",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "154a95421fdf4cbc8893d7975cb4922d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0b36358f7884db39c346d855dbba6cf",
          "Name": "",
          "Description": "Valor da expressão na linha 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente",
      "Code": "\"0,0\";\n\"0,02\";"
    }
  ],
  "Connectors": [
    {
      "Start": "b964da8495414e5893199d4cd72186f8",
      "End": "0280b89f100948bebe59a02a90a14e1d",
      "Id": "a7dc4782a34b4f4a972f32c5670ad098",
      "IsHidden": "False"
    },
    {
      "Start": "b964da8495414e5893199d4cd72186f8",
      "End": "7c03bfc52a624418a86abdd65319c475",
      "Id": "0d25764506c7432ebc82aeedb01b0a9c",
      "IsHidden": "False"
    },
    {
      "Start": "9aeaaa6b87ae402f89a2fac24e2ca724",
      "End": "c676b252c07443f18c605199dbae45ec",
      "Id": "df555bead4c24c7d90c643dc83aebc44",
      "IsHidden": "False"
    },
    {
      "Start": "64b8d7f069974f2f929228c089227448",
      "End": "a385565fc3484141a4b6867aac35eaaf",
      "Id": "75ef8ce3ddd4455c9b35337c72d85cc1",
      "IsHidden": "False"
    },
    {
      "Start": "1db743c165bc4013afd177f6c932f0e9",
      "End": "4bf98b0269a347379824b28bc24f818b",
      "Id": "267b7c98563f4af38d08a0a87e097675",
      "IsHidden": "False"
    },
    {
      "Start": "9615bdb888f247eebf0a56083937a7e7",
      "End": "0d5f81b980474294b1ac1951210d4c56",
      "Id": "aa1bd567f35a4e27ac08281a9c44b648",
      "IsHidden": "False"
    },
    {
      "Start": "7af47773c7714e1285d8dc063c08c0a5",
      "End": "8f49a7f4d8ae4d7cacf763846cdb5a97",
      "Id": "e6ef2646464f4d66945361e1b598b6a2",
      "IsHidden": "False"
    },
    {
      "Start": "f349fb856ee44366af274238fab73b62",
      "End": "3f5379e9c0ce4809b579deae3e6cfc78",
      "Id": "0023cb8353e34076a78b45ac763c2482",
      "IsHidden": "False"
    },
    {
      "Start": "71ca807867fa4fb0afeedede13ec043a",
      "End": "745d8308cfee4020b348c6bf446b41d9",
      "Id": "396c1398554e4823b24e1180fa017086",
      "IsHidden": "False"
    },
    {
      "Start": "99dde69457cf4d6d9578f13315df1d2c",
      "End": "4310073426d541e1ba4d3cb4e2c1df06",
      "Id": "a2ea7a65527940a9ac357e8dca4bc97e",
      "IsHidden": "False"
    },
    {
      "Start": "4254dbf8caae4208b2cb1632a30e9f85",
      "End": "59ac523d8e88498bb9ae912d988f4e3c",
      "Id": "e4672f15d1294b279b0de9ef95728cfc",
      "IsHidden": "False"
    },
    {
      "Start": "4254dbf8caae4208b2cb1632a30e9f85",
      "End": "9d1b0ad2d3eb4ee8becd611a249add84",
      "Id": "fc33a0bdf387492f9b9b91411c09a75a",
      "IsHidden": "False"
    },
    {
      "Start": "0a4d03f9a0054993aed644599865d1fc",
      "End": "e32bd3deece14fbbbe08ea07ea17165a",
      "Id": "ffb96ce14a7c406288a705e4decb15cd",
      "IsHidden": "False"
    },
    {
      "Start": "710f57515e1b470eb7dfa10f79939378",
      "End": "8ef67c1dc0aa41cf8807cffa9f6c8993",
      "Id": "7dc169a780a7477ca364ecde88bcca9e",
      "IsHidden": "False"
    },
    {
      "Start": "4a8c6ff89b2245dd8e89fee40ac9c1f6",
      "End": "ab6f0961925f4354a85092a43242de11",
      "Id": "954d70e547f84985814c842f912b1e80",
      "IsHidden": "False"
    },
    {
      "Start": "4a8c6ff89b2245dd8e89fee40ac9c1f6",
      "End": "3bd214f966e04d19baf273ff6e0c3179",
      "Id": "366b4385eb9b4b1ebe326c0095f5ea1b",
      "IsHidden": "False"
    },
    {
      "Start": "e7bb2d5f04804907a0d2880ef734242c",
      "End": "b356bf870be94a42a530be487e9a1546",
      "Id": "d63dc5692e444b45b0d67d864e3471ae",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "be2873a901224098b0ec12c143b75cdb",
      "Id": "8a36434bdda84fe3970764addced114b",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "7ea2347f4a474ed3a504f0e54b744de8",
      "Id": "e387f6ecfe6042d29810e8859e1b6345",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "022ece9ac51b4098a7c2b98c545ea011",
      "Id": "2581f41b4fbb4b0db4885c9a978e9bfb",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "2865ba7fb810481a89988a16f32836a8",
      "Id": "e127e5d77c1543b99054a4d7489b037d",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "a79e1ccf19604dd495ea17751de093b0",
      "Id": "0af46a81a44d4a44bba31e3ed9153284",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "1b57077d126b45b4b4311433350b2f35",
      "Id": "242599d6ee934a2bbeb414ea28569b95",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "929e10c933134ee88b82a83fd1ddb2f6",
      "Id": "af659ce99ff548f4a932216cc58bccf7",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "c9be1162005447749d0829671b74a782",
      "Id": "366e6a3c0a6946dba4ff8c6940732467",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "0f375b87efbc437491eaba3a0d8ca26b",
      "Id": "3fbb5786a4c4450897d7d711c8441a7c",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "10b9429240214190a130d8e699f7e091",
      "Id": "fc397330a9aa4de29ce06e8987218e5b",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "164d12720dc146a9a22960747b519204",
      "Id": "716ededd09424de084ddd4d156c64fa2",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "3be4f94fc1324edca7f522c4ef0db971",
      "Id": "a5c425b39ed14d90be709bc91e484e5c",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "6df4af5b27b24c5db63a8e5d23b20848",
      "Id": "d188c19e4b3e4b14a677eb9214df1c8f",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "0a075f2a40834558ba1fcc71a65d16fc",
      "Id": "38b6fda4137c48bd833171f9fb16468a",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "a2b85bb0545b475d97b5e86fc293e5d6",
      "Id": "8431f5a5dd924374b1ef57e980ef0dff",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "86ac15f3b5f14db6afc60ca5ea4261ea",
      "Id": "42e7eb4dce0840d282c75a71a063b65d",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "2d0d260eb6ff40fb8fbda95ea9d590c4",
      "Id": "cf450fb3381242378775bd492fa5f10f",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "3c4b2c24070e451ba3f23c728095bf5c",
      "Id": "71ee061a9fd54abca5fd2e475dde6471",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "3c9e564caf6f4c0aaa97966224bdc9a8",
      "Id": "38a96b34f2264c92bc316a7aceee8cb7",
      "IsHidden": "False"
    },
    {
      "Start": "778f0cf039b24a0da7b1635791273928",
      "End": "7ef591391136411d8f588e9fa7ada95a",
      "Id": "5a96b01e418f40b08e6f1988a7486c73",
      "IsHidden": "False"
    },
    {
      "Start": "0109ec60655f4226bbd95051c4d6f391",
      "End": "3daf71dcf2674254958fd3c265ee0374",
      "Id": "67675f79fe8d46ad88f9f0f54a271aeb",
      "IsHidden": "False"
    },
    {
      "Start": "0109ec60655f4226bbd95051c4d6f391",
      "End": "ba50a1a784fe457fa8a9c5d20f1cc6d1",
      "Id": "1117ba58c9f344558fb9bc5c72e65e39",
      "IsHidden": "False"
    },
    {
      "Start": "342b83b8fe48473cbf2f3846241417ed",
      "End": "dac3fdc0217d48f79e512267bbb24030",
      "Id": "d1ae7caaad7744dc852530e9d4e64923",
      "IsHidden": "False"
    },
    {
      "Start": "dc264755528f474c9bb63531d4db5460",
      "End": "5f6982aa3e964f35879b05cce4658261",
      "Id": "de8b8102e8f84533a18e6a7c358457db",
      "IsHidden": "False"
    },
    {
      "Start": "929145cc667e4268b7f32a959381df8e",
      "End": "9bec8ff7c1e54fe7acf55631e336575d",
      "Id": "8ab1b19cc4734b7381d45325884f45fa",
      "IsHidden": "False"
    },
    {
      "Start": "3c84a3d91c8d41139d171f87c1056152",
      "End": "3a50aa7a50af4745985b5da5c4035ee9",
      "Id": "82fa29d138534086b07a89fb8476fc1f",
      "IsHidden": "False"
    },
    {
      "Start": "b5d16889ee804e8087c84083f124f852",
      "End": "22e246f7b42d4d5b9ebba4de6b9c552c",
      "Id": "6b882661e06a4bc69c43d84a69d2755e",
      "IsHidden": "False"
    },
    {
      "Start": "59710382505447d9b3be9ba5d79f60e8",
      "End": "33d53b568aa44adc8cf6d40e9ad91d41",
      "Id": "615411f3af724fd1a7c90174a163582f",
      "IsHidden": "False"
    },
    {
      "Start": "3f3ab4b4297c4bccb5d1ba3ea93a77fd",
      "End": "63170ff369ff43d786de961c6542a7bc",
      "Id": "6cb5ea43e3f445faafde005bdd249f27",
      "IsHidden": "False"
    },
    {
      "Start": "3f3ab4b4297c4bccb5d1ba3ea93a77fd",
      "End": "f43488fd5012466186b228b6d44de619",
      "Id": "c5bb1d153ebd49e082acf1e02f5b7e85",
      "IsHidden": "False"
    },
    {
      "Start": "9a27ea1449d44bd183df8cbcb06cf2b7",
      "End": "583a0d560df24f9cb1d42a38027dcbbd",
      "Id": "7b5fdcb18841434fb077f3787493b9a2",
      "IsHidden": "False"
    },
    {
      "Start": "45faf06ad02c4bea893ffa5b99bb0bfd",
      "End": "bad56f8affbe42d2a2d4386ef26e63e4",
      "Id": "a1cd8d7e5da2455bb0d555b8bd296816",
      "IsHidden": "False"
    },
    {
      "Start": "45faf06ad02c4bea893ffa5b99bb0bfd",
      "End": "412bdafb37404988b13bfd9d9ad841f1",
      "Id": "819d09c3619e43428220cf805afd6a1b",
      "IsHidden": "False"
    },
    {
      "Start": "6a4f7998ad28499b82359e57a23d3abb",
      "End": "f5a332bfcba745528eca67edbb80a04f",
      "Id": "0b9d3cd5e0014fd48aa91be32753d8f0",
      "IsHidden": "False"
    },
    {
      "Start": "c9e9cced3a7c4727ad423ac28810fc22",
      "End": "f1454187acb64f17a8fbbc1efba2b8b1",
      "Id": "c9480bc7d50642e9a234bc0ace2e0a8e",
      "IsHidden": "False"
    },
    {
      "Start": "a10b3a1ae7f340dbb2f06457f9a4f1cd",
      "End": "6a6a36e7cdc04ff499cab52a141338b5",
      "Id": "be9e4f519ce24cdda1bcef33b05c2c6e",
      "IsHidden": "False"
    },
    {
      "Start": "0cb315f75e7a4bc1a730c2dcbb2fa58f",
      "End": "3229594956eb4766ba9238e191168e75",
      "Id": "72a08cfead67463eab744fd31ec23bc7",
      "IsHidden": "False"
    },
    {
      "Start": "ec20d4a221e14e82b3ba608799f32169",
      "End": "699f450a25284801b63add4bdb6f8e56",
      "Id": "abe54f59041a453b809e29586c96674b",
      "IsHidden": "False"
    },
    {
      "Start": "4e15883e807746fc8eaaebf0c18f86cf",
      "End": "a5a84770ac534c55b449fd586db5b759",
      "Id": "829c77d22de044bfb42d2d3226d09d76",
      "IsHidden": "False"
    },
    {
      "Start": "e5d719a64c7f4e2c9b5ff501ac40f83b",
      "End": "75d3e026912e48ea997107698dab08b1",
      "Id": "5ec26fa6c98d4a30823fdd8aea5453bc",
      "IsHidden": "False"
    },
    {
      "Start": "d5daaa114280440285b359c65b6c34ee",
      "End": "1a4362fc702546ce84880d9f6ab28ce8",
      "Id": "a2a15d18a19b460b9d10f182a9e27784",
      "IsHidden": "False"
    },
    {
      "Start": "484667445f774282aab9b87757ff7bfb",
      "End": "885af98f4e9845a5aefb967731a39526",
      "Id": "5541cac95c944e2c97eda4b63cd7ac4a",
      "IsHidden": "False"
    },
    {
      "Start": "b76fba057d50477a8764629994c123ac",
      "End": "b855d572dc5641ac9978d1644d3c7659",
      "Id": "3159a016864a4553b1aa7ddc6105f008",
      "IsHidden": "False"
    },
    {
      "Start": "03654336aaf04113bc00d0f3fe72ca6e",
      "End": "3470c9611fb6413780ae5fc6ebed4a5e",
      "Id": "7b23281129ec4343af7dc70118fb480d",
      "IsHidden": "False"
    },
    {
      "Start": "1a99d71b3f4a4eb4adfca2f9c7a69fad",
      "End": "e01dcfe7afef4447965191ffb5a9644d",
      "Id": "a5245ca9ab954b0ea1985d017a4a4b46",
      "IsHidden": "False"
    },
    {
      "Start": "ef3282ca9b5847fbad6fa7baa26c31b4",
      "End": "c4a61c13c25c46289d5ed3f52e10d3fb",
      "Id": "31852f9c11b64f5f94b1d5877d3b69df",
      "IsHidden": "False"
    },
    {
      "Start": "b5784265bf8c4e848034682ef05af174",
      "End": "a2b1b42688974b17917612f5de0d7a14",
      "Id": "8e2b5be1dddd4bd983f2268d7844db4f",
      "IsHidden": "False"
    },
    {
      "Start": "f0ba6f9a34784ac4add9861ff61a2960",
      "End": "61c046a0fa08478f9c376bd86e39e713",
      "Id": "82b1d498d4434990a09816dc52b13f23",
      "IsHidden": "False"
    },
    {
      "Start": "203a6d0b0a0148a1a285fb76bf115374",
      "End": "53e436ff2311479d8bc6587db7369eb9",
      "Id": "8cbe818b92ab4bdb8ec5cbd25ca3c7d9",
      "IsHidden": "False"
    },
    {
      "Start": "9662cb845e134b01bed401f4a4b169ca",
      "End": "c5dbfcaf8583454391c8be1224d2c6a3",
      "Id": "740bf8cb2c354f43b5d26bcc74786909",
      "IsHidden": "False"
    },
    {
      "Start": "8425c08adb404435ab773c9ed6a5d451",
      "End": "cb5c3f6669404238bc52f970b7590c80",
      "Id": "b345b8f025e5473ebffa7f11c33b81e2",
      "IsHidden": "False"
    },
    {
      "Start": "0e8021730b24455baffeb49ad0f0eeb2",
      "End": "ef2652024a6148a7b69efdf4cd3c2b0c",
      "Id": "d22f36c5c4c7418391b7f52bb82fe552",
      "IsHidden": "False"
    },
    {
      "Start": "3e95f300ccf144bb889e8d2b42247f85",
      "End": "fed6147d0fd04b65a71bb91bd195b30c",
      "Id": "bc57596e7d584ae59be628ec57f9b87c",
      "IsHidden": "False"
    },
    {
      "Start": "c543a8b730b449cbbe09477072f1ecfa",
      "End": "29925475087f47e9823d14619ad1d600",
      "Id": "063a2396e0c542ef83918833315aa909",
      "IsHidden": "False"
    },
    {
      "Start": "6e10d8ddf2c440da90509d501aeec7d6",
      "End": "19c6ce64ac214e738ac7e820223fb92d",
      "Id": "6f877977444b42c28cd1d708102e7ed1",
      "IsHidden": "False"
    },
    {
      "Start": "b6e65bbcc7784f70883cf93697c96a9b",
      "End": "6e62e60e20fe45a58b8e34050bd41f08",
      "Id": "75b27ddf2d7946a298b1bc6068897639",
      "IsHidden": "False"
    },
    {
      "Start": "a964ff8d6a4a4aa88837c118064f6e20",
      "End": "3ca4ac37e79140b5bc3156a55afe7770",
      "Id": "9b9ff2e67f084ebfa4df101a5d817c00",
      "IsHidden": "False"
    },
    {
      "Start": "184fb62ac84c46e98603ec6af55d1456",
      "End": "9e691623d349443784ff70cf5e262c89",
      "Id": "7a5e3a96655340b48d0714dccabd07f0",
      "IsHidden": "False"
    },
    {
      "Start": "aeb3ba7c567647b0b1b62f3f80d12f6d",
      "End": "fc77cef6106d47019643c83fb1efe9f1",
      "Id": "0c4b26699c6a4b80a55fb6e17f961902",
      "IsHidden": "False"
    },
    {
      "Start": "cfa11f52ab6b494b8240157dd324d8ad",
      "End": "acb36ca5d9c04c5d96579d39b591b840",
      "Id": "aa9c1dfde94149499428db47d27cac96",
      "IsHidden": "False"
    },
    {
      "Start": "349ee0e4c4364ca5bab237d671cb3374",
      "End": "24aaf3caef624afd98ec9867ccf2b56b",
      "Id": "81df07d4f4c44946b7942fd6c11854ed",
      "IsHidden": "False"
    },
    {
      "Start": "2c77fade217b4b91ae1bdc1a6f52a01e",
      "End": "d99230e465fd4d30a320cd97041f2434",
      "Id": "7ec11ced38f148df8e2bd5a395d97236",
      "IsHidden": "False"
    },
    {
      "Start": "84e37faaccb14e9fbeecc52e4755411f",
      "End": "4c7ca71a499e4ae6bf0e11ef674476fd",
      "Id": "fcf9b6b768c741c0a17c0fc2bcd4e920",
      "IsHidden": "False"
    },
    {
      "Start": "a94bb16d343c425099adccda9da30564",
      "End": "20ff201bb63843c0b8f434a53918fecf",
      "Id": "4aaebd12d28746bdbe4aa6ada33b45c9",
      "IsHidden": "False"
    },
    {
      "Start": "ab00bbfcf82946b28829ad76cfa89181",
      "End": "822995a276c34a3ba81b6ad8b3949ead",
      "Id": "bea14a022bf446409b14e5a6bbff9723",
      "IsHidden": "False"
    },
    {
      "Start": "24a0d505eaac462f9dc05229eaaae890",
      "End": "47fff88923c149f6b28e09a87e846145",
      "Id": "3cbcfbffb9554b4f8ad94cefc7731506",
      "IsHidden": "False"
    },
    {
      "Start": "74a65365f7b74afba16eab590fda2869",
      "End": "98017bb5a1ab47f9894e828e94ac8d23",
      "Id": "f8c6e585b7634396b635b5fb22456d9b",
      "IsHidden": "False"
    },
    {
      "Start": "34e39f57c8da464db4a3549597d65603",
      "End": "b407ab39044d428c97a0b014d0325a8e",
      "Id": "073506e631b043d980e8439688c41f3d",
      "IsHidden": "False"
    },
    {
      "Start": "31be075839ce495086fb7ab944b12446",
      "End": "872108ea303c4a96a4c68ba4b03b23ce",
      "Id": "0f2c89fed06d4ec4b117bdc5adcf4fdd",
      "IsHidden": "False"
    },
    {
      "Start": "43f299f46aea46ba98ef40a03b78c7f5",
      "End": "10d2ae3120be40ab892a32b5c340c5f0",
      "Id": "3c711ba4769d44fcb9a9a3eb314c11a9",
      "IsHidden": "False"
    },
    {
      "Start": "226cb166cf08495da3f75adc51554c65",
      "End": "19e6609c14c04f97b4ea0f5db075efa0",
      "Id": "eea481e8b4f74990ba9644c68ae00dcc",
      "IsHidden": "False"
    },
    {
      "Start": "65f882d445a644529c273959b8079176",
      "End": "0108458399db42a68c4e48db7da2cce7",
      "Id": "b8039b97a0814b90beb0ccfba6e1dce0",
      "IsHidden": "False"
    },
    {
      "Start": "794b1647ab9b4638bd177130a55ec17a",
      "End": "e68208a86cfe485881ac649103593a4a",
      "Id": "34aad2d0495948a4b61a29f9a4a08480",
      "IsHidden": "False"
    },
    {
      "Start": "b320e3ccdcc64f5997b1e44be899af46",
      "End": "bb5c7d50737842dda921d839d9b22c91",
      "Id": "8e253926f7384b15a19a0d377a713ae5",
      "IsHidden": "False"
    },
    {
      "Start": "e91d036a41ae4864825bcd872dffeda3",
      "End": "300934c8ce664364862cd256e7640f6b",
      "Id": "d2bc5c4b8438461baf95487592317cfd",
      "IsHidden": "False"
    },
    {
      "Start": "f2b640c4d25b455facb55a07a9af4180",
      "End": "5b03855696454bde80ec717cc8f259b6",
      "Id": "794498563a4541cb89b3018a783bbfdd",
      "IsHidden": "False"
    },
    {
      "Start": "b34044b4cb8d4e69aeebf5d4e7996e96",
      "End": "da51a2396963403f8eb949afee70692d",
      "Id": "4582ab171a9e4a03bcb33f09a052e9f5",
      "IsHidden": "False"
    },
    {
      "Start": "048b251bbdbf410a9a7517f068826a43",
      "End": "57e0aa69ff61420082866e8d8478f30f",
      "Id": "fac09200e64b427b8e8ce6e342c2fe80",
      "IsHidden": "False"
    },
    {
      "Start": "48163d15f5a94f3894eefc23c3084319",
      "End": "2ff1ce9b29c94efeb962c4252d30b451",
      "Id": "00862f52b60e46f994ce78d0f98705da",
      "IsHidden": "False"
    },
    {
      "Start": "040ea174ce094e76980cb481c818ca4d",
      "End": "8d6750c7d94e42409e6dfdf71ecbcff0",
      "Id": "51ea6a6e1c4f44d0ae598883121f8f26",
      "IsHidden": "False"
    },
    {
      "Start": "1f3498af67294ba183c826ae541b726c",
      "End": "e437dfe7cfde46f4a8312a551774b72e",
      "Id": "6b119ed0ba1b46f88ec140241b1128a2",
      "IsHidden": "False"
    },
    {
      "Start": "5a472205314d4daa85a71341cc0b4abe",
      "End": "5354ed87cb9a4909a4032ccc3c6f516c",
      "Id": "74c23972eecf41ab949c27334f649874",
      "IsHidden": "False"
    },
    {
      "Start": "db333f3fdc4a4b17af6a5d41d89dcfb7",
      "End": "cf6dc8c565044dca9031cd3e51601f1f",
      "Id": "2d4824658b3e44bf82b1726ba5d1e191",
      "IsHidden": "False"
    },
    {
      "Start": "e65478659c244a088e9645127aedc2a3",
      "End": "e9a526d57d7c494382bb5e6474a09b48",
      "Id": "216f19dfde4e43d3abcc092de4f1a433",
      "IsHidden": "False"
    },
    {
      "Start": "a8c74fa4b1944bb08dfde3e593718ca5",
      "End": "7bb4792d00994bcf9aa0b6e36694aead",
      "Id": "8ea6af6a47324148abb17435ef6efd2d",
      "IsHidden": "False"
    },
    {
      "Start": "b8a823f8fac140cb82859d1ac2fc892b",
      "End": "d49ecd1b983940e591aa542d4baae9e6",
      "Id": "5c7d573bf5a34832bcb1c9d45fd7e05d",
      "IsHidden": "False"
    },
    {
      "Start": "c58ecacd31d743d687e6fda4c2a31479",
      "End": "a22e1b3b6f0243328c6447d8769a3566",
      "Id": "e93092a9ba114f74843dfe5e5134ea6e",
      "IsHidden": "False"
    },
    {
      "Start": "6eef45b59c7d42688bb5c8c98fa5f80e",
      "End": "b00816c3edb04c4bb70c280fc474411a",
      "Id": "7ab1e0fdc5f84063bf7e333847aca13e",
      "IsHidden": "False"
    },
    {
      "Start": "a1028ac5ee2f4004a93341d6fa279ada",
      "End": "afd954409ce24c7a97f402fa2cd08b8c",
      "Id": "fe62101955cb487cac55d44784627496",
      "IsHidden": "False"
    },
    {
      "Start": "15f68e0dbd4d4da2b02cf944c5cddd83",
      "End": "657dd867999a4c9b9e0a7169fa707cd6",
      "Id": "d9a2c55be6374926bd7367209396f1da",
      "IsHidden": "False"
    },
    {
      "Start": "9b63551273604a66847d6b1e10312256",
      "End": "c0b5a12322e649ecace24d79e2a23098",
      "Id": "68918246faa34bf396323283b3abd2a9",
      "IsHidden": "False"
    },
    {
      "Start": "03421cb133784845b0248fc5231e0ecf",
      "End": "987e830b7c4d4c6a9d83e4414206de05",
      "Id": "deb3686139b64474a6050f1edd54d12b",
      "IsHidden": "False"
    },
    {
      "Start": "8f01d2d2fe344db89858a849bc6b9acb",
      "End": "418c2fa32f4f4d11974aa4a8a54f1df0",
      "Id": "9c3889658d8549e89d7a3595e16e8fe0",
      "IsHidden": "False"
    },
    {
      "Start": "da0b42207da64aadbdee431e98d321a0",
      "End": "2cb76a1e0f8947aca776b1bb71ef19ac",
      "Id": "4da0cf47ec694f60830174693f9f3b4f",
      "IsHidden": "False"
    },
    {
      "Start": "925a5b5b7af9463884cffce115cce99a",
      "End": "caf1605e38564e1ca420110ffe6db791",
      "Id": "a4ff9aa96d014362acb32eae14744088",
      "IsHidden": "False"
    },
    {
      "Start": "3e4b714121b84bce9faf1b037e091bc5",
      "End": "f6381d6bf82e4ae4aee674910854f921",
      "Id": "f33dc806da69493bb2da511d81d2ca5e",
      "IsHidden": "False"
    },
    {
      "Start": "735ad905faf546a8ae731cf278d374c7",
      "End": "64267c495a5749878df336a0d0650441",
      "Id": "6f1c3caa81224886a867d904e22fbf8e",
      "IsHidden": "False"
    },
    {
      "Start": "2ebbb22c44c54ff0ba6f55515383adff",
      "End": "c33be0c9041244bfb99cd1a221796f96",
      "Id": "eb7a206d995145c6aa97a67f025a13d6",
      "IsHidden": "False"
    },
    {
      "Start": "97213008797f4410a0e794bdfffb9127",
      "End": "e0d9b5fa8df24fbe8da0374e4e97b933",
      "Id": "9cfb8f14056a456890f903fa57b8f761",
      "IsHidden": "False"
    },
    {
      "Start": "1b41432edfa34ada9f0cefdae4a3080e",
      "End": "79cf4d2d9949471d959ef160795e1d6d",
      "Id": "5a57090467c74653a2492590523da650",
      "IsHidden": "False"
    },
    {
      "Start": "92727865dde24bfd88dda3d1217bf211",
      "End": "d243543d632c4d68ad7b0d3cdc320bc3",
      "Id": "5104e3f7c8874dfcb45875e9dc80dbe6",
      "IsHidden": "False"
    },
    {
      "Start": "03bb301654be4be9b0ab374baaf70a28",
      "End": "cec90f6d25b847d9a64d46bf7b116760",
      "Id": "9355cf85fb0d492ab19861601199290f",
      "IsHidden": "False"
    },
    {
      "Start": "6e667de43a594af4865b6ead750b5d76",
      "End": "1c68ab2f35864d278f8f646860d78047",
      "Id": "a4b686a65c614a78b76bb0bc1f17e414",
      "IsHidden": "False"
    },
    {
      "Start": "6b4e1fd9c5fa4767a6ea585f7765b6c4",
      "End": "5d9ce283ccdf4c0ba3e68aad3be5aa81",
      "Id": "b402236c5ee44961bad33c308e01309e",
      "IsHidden": "False"
    },
    {
      "Start": "c6cfcd6e6b1f4f169813262a1d8c0beb",
      "End": "aeabe37359ab40cfbfe3f52642f5ef6a",
      "Id": "ca40bd22c4064715a04e1729960169b0",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "2c320f26e21c4f20b73809b68921493d",
      "Id": "2243778f48d3484d973e8b2c33b5992b",
      "IsHidden": "False"
    },
    {
      "Start": "6af2e25020a14ccba637128df9a11024",
      "End": "c7fc6a50d6d24f738f960d1f064807f0",
      "Id": "d78ff04b7e5741409d1a733952fe6ae2",
      "IsHidden": "False"
    },
    {
      "Start": "e8d31f0f96a14a0eb52a41f21632dd84",
      "End": "0b74a748e4cb45f0b84b5a25eb0fe935",
      "Id": "36fe346514af4482bbc213ba11ba29f3",
      "IsHidden": "False"
    },
    {
      "Start": "0b06708c39f04b7fb63273983a038e1e",
      "End": "648faa29bdcb4410974ba7b6bd6b1321",
      "Id": "98421e95eb48412aadb890aba43a8a8d",
      "IsHidden": "False"
    },
    {
      "Start": "3b65372c1d954737976813299abb7d07",
      "End": "3e0a3ddebca440fe8f0fe38dd13c19a1",
      "Id": "3702144cc9b949239bd556813281e484",
      "IsHidden": "False"
    },
    {
      "Start": "e26814c57b8e4bb9a604f22ea10b81d1",
      "End": "ef8cdbe2ed40484db30798cd425955b5",
      "Id": "9a1a6bfcd3174ff9884397f2db3049b0",
      "IsHidden": "False"
    },
    {
      "Start": "556125ac85234c8f8140f189504ab393",
      "End": "14ea523d635e494db320e7725d2665bc",
      "Id": "dc738ba6eb3c461d981afecc29c764d8",
      "IsHidden": "False"
    },
    {
      "Start": "19ce6e7b00874bedad03dc9386e8364b",
      "End": "b771bcf635b147b09e653a20fec800c8",
      "Id": "b911cceaa31d435d851de586aa3fb148",
      "IsHidden": "False"
    },
    {
      "Start": "417c6d23b6d640fbb300f035186b8cd4",
      "End": "42103a3ab5524ff9b97fdaddcc353581",
      "Id": "3098bb694a82487d9c09d18728cb3241",
      "IsHidden": "False"
    },
    {
      "Start": "9d89ea65619149ab8e7d6df79b18e126",
      "End": "a5618f5a2eda4b0e8cc217744f28d9c1",
      "Id": "17d73a7508594b5d85eddadc6f63cf29",
      "IsHidden": "False"
    },
    {
      "Start": "3a4cc32a62134d0fb3a9e05bde9b58b9",
      "End": "e179466b644449368ee0a0a424c7bed2",
      "Id": "d0d3b673396b4465961093b7474b617e",
      "IsHidden": "False"
    },
    {
      "Start": "ee01cceadfcb4e73aa7ccc1d31d04ab4",
      "End": "9bfbd03f57a7466489e8640131fb7a66",
      "Id": "d6ec4199df0842a8b449bdbb1ee0cd8b",
      "IsHidden": "False"
    },
    {
      "Start": "360057512af7448491d6faaf7b752527",
      "End": "ec95c502fdee45ceaf3f40548552324a",
      "Id": "f210cf67b31e4b409a7595c6b0831fe0",
      "IsHidden": "False"
    },
    {
      "Start": "a9034545b645424f8f928f9e5e1410a9",
      "End": "64872bef8ac842448454608b991ba8d3",
      "Id": "5a741ba7de0c404c9756595c54c62c07",
      "IsHidden": "False"
    },
    {
      "Start": "8baf566354e14798b5c6e9da137faf84",
      "End": "6a5497b2d7ee4fe5b24e8c9387ebf98e",
      "Id": "9b0453164ef647f3bbe0649d8616c8b8",
      "IsHidden": "False"
    },
    {
      "Start": "91185ee6b31049158c19630003e2bf14",
      "End": "1c025bff9ca94f56b303c5296c0e13e7",
      "Id": "845b60fa32cf46f4b85eb1af8b01020d",
      "IsHidden": "False"
    },
    {
      "Start": "ca0f4a7e470f4360899fe45902117fcc",
      "End": "0a0bb4ff0e9e4167ae1b47411d7b6fd4",
      "Id": "c53385f7573d4dca803b89399608e5ef",
      "IsHidden": "False"
    },
    {
      "Start": "6f68c79fdc814b858eade551d98f04af",
      "End": "1675518cfbe8413ab5ee7e0346e45d44",
      "Id": "ac81d18ceeee4e138007fe4bcc2c020b",
      "IsHidden": "False"
    },
    {
      "Start": "9e94cf1448f74c35a0de43cb9142d6d4",
      "End": "8319007a96244329967214f56c2b3ae6",
      "Id": "435b62edca494ee79733a9d526854c64",
      "IsHidden": "False"
    },
    {
      "Start": "a299ad41cd6a4031bbbe83177e1c57a6",
      "End": "1d97b3f343f742759b9bd48bce139a63",
      "Id": "c7309a0d7a834670b55d568aa112a856",
      "IsHidden": "False"
    },
    {
      "Start": "539e7ae321314048bb489a6370ae565e",
      "End": "6f7a9a675ef141d1a5a407067fb39fef",
      "Id": "f642c8b6fbd249ea935faf2f3b81e1e2",
      "IsHidden": "False"
    },
    {
      "Start": "063cb62d9a574b80b40ff3e449daf4e9",
      "End": "0c09d68271064b349bf65cbb43d86229",
      "Id": "57357c5249d74070aebc3f06c592b100",
      "IsHidden": "False"
    },
    {
      "Start": "318cc47969a84527912e99bca569fade",
      "End": "2d3dd7c83da44bd6804d9361800cf5b2",
      "Id": "c6aacc65a1994dfba2a1ecde39052d68",
      "IsHidden": "False"
    },
    {
      "Start": "90bd570d20014cd2bc0ea644d7b8d624",
      "End": "9cc6baa20a584e9bb46b00985db9d0cc",
      "Id": "37419ca1cccc4e8e8b4433e9be849e29",
      "IsHidden": "False"
    },
    {
      "Start": "d0351c14127c493db0ec08f1aa4cae28",
      "End": "548d60dff3d84c678f4824524a5ff654",
      "Id": "15da3c891c8e4b5491eaae4b0fbe6906",
      "IsHidden": "False"
    },
    {
      "Start": "b064949ffe3c43fbb7a8ec46fb612efa",
      "End": "96d0d5dc5d4f441bb78c4b58d4d375ab",
      "Id": "6d09afb84e9540d189af69a6e3519777",
      "IsHidden": "False"
    },
    {
      "Start": "d16ae9f8a9db4ffaa50467760aad15a5",
      "End": "2172c19487eb497880e4db565a0c4ed0",
      "Id": "3dcb114155464890ba65756f1d0487b9",
      "IsHidden": "False"
    },
    {
      "Start": "f9d765134eb641b698ff932512bf8305",
      "End": "bb6f47afefa74f449879df6e4864f827",
      "Id": "8876e88b190c4a64975edee50aae25d4",
      "IsHidden": "False"
    },
    {
      "Start": "7477592868d0470098c83b1e43845f71",
      "End": "c124e35200444ae3b81902f345de31ce",
      "Id": "6bda80a6130a46e185ade437ada3430b",
      "IsHidden": "False"
    },
    {
      "Start": "4d8b867cc1ca4c5aa392c83425930658",
      "End": "5e25e1ba8fcc4e64858a150710dcbbe2",
      "Id": "a72b91556ac8410db2a507c8d3c95624",
      "IsHidden": "False"
    },
    {
      "Start": "c9601e38e3f94530952a29d127d54be3",
      "End": "6d67e31ccad648d59da14702d3f161e0",
      "Id": "a6a57d76de4b4e2bb20dee9d9c556cdf",
      "IsHidden": "False"
    },
    {
      "Start": "d6685372ed8e4ae984721ef2ba9d9996",
      "End": "830e137de38f4f9a96276c720cd2f005",
      "Id": "c925258de9a44616821ed0dc5a1450eb",
      "IsHidden": "False"
    },
    {
      "Start": "1a893964df914c3eb40dfedf8b993a9c",
      "End": "1414fc4967cd43bdae5e85235a6dcdc8",
      "Id": "507c6013c3bc4837913914e8cf6f2cfe",
      "IsHidden": "False"
    },
    {
      "Start": "1d5674e863204c99ad3f9cf50f995099",
      "End": "56c386968847487c8cb4ec2552222db7",
      "Id": "c06fa7c0b71a4a35bdacf6bb8b2f3bb9",
      "IsHidden": "False"
    },
    {
      "Start": "5c0a254fa4654b94bb59e15bdee05c84",
      "End": "19eb6911574c4173a86595265ad856f3",
      "Id": "ea477910c9094980965062a0f90a4351",
      "IsHidden": "False"
    },
    {
      "Start": "5c267baed6924c7485029a729693c593",
      "End": "630d448cb62842ad8177cee833bc5c4b",
      "Id": "0101061c38004126b45bfc9b271621b6",
      "IsHidden": "False"
    },
    {
      "Start": "e9ba40dc55ac4330b4d726cb7d765bf3",
      "End": "0b14f6b5c4ad4fbeb2479c7babbda15b",
      "Id": "2d574459cfac41398d0c71d0a1b49324",
      "IsHidden": "False"
    },
    {
      "Start": "f1cc267ae8b841fe8949f5f3ea8e7a8c",
      "End": "04fa5b0fa879422783a3e961baf496ac",
      "Id": "cf9e8f8aaf644562b226330ed9500f3f",
      "IsHidden": "False"
    },
    {
      "Start": "6cc8049bb4c24b32b9612b26562333df",
      "End": "ce885fe437774199985b54d9a98cba99",
      "Id": "4459d9427d5e4b3c939f136f778ec855",
      "IsHidden": "False"
    },
    {
      "Start": "9c816844f3d54bf1ba42c91cd8d124ff",
      "End": "c8835901059d47fcb679e983e3ef6826",
      "Id": "1633bd80820e4c7eb6a83a908074b494",
      "IsHidden": "False"
    },
    {
      "Start": "991f5817f51c4eadb89a6f02207123ab",
      "End": "f0baf5be04b246bea11c14b24427ec15",
      "Id": "3b626ea577d34a80bd39ba66e4cc3260",
      "IsHidden": "False"
    },
    {
      "Start": "4b5b8c5b35804a70a8f193368a729136",
      "End": "ec508e77feb8400fa6eadbe5eee72c37",
      "Id": "d43c739d05934ce4915432ab8a0d06b4",
      "IsHidden": "False"
    },
    {
      "Start": "1bde3b7c0eb94b0d8a1adec9d234cfeb",
      "End": "a951f9912f3c47d5bf3a613650f46a07",
      "Id": "68102d4bb8324e3a8b88d7ed50f3dddc",
      "IsHidden": "False"
    },
    {
      "Start": "fc40f15c23fe43f19e60e9a819c13fa8",
      "End": "3e2a38c818ef406bbe2413b3f5e2f59c",
      "Id": "3de4f232b59c49d781c5ac684e55a50a",
      "IsHidden": "False"
    },
    {
      "Start": "e7d1a4118dbd4fafb14e886f0f5d7b40",
      "End": "76ac4cf991dd4c99ac67ab332472d0e7",
      "Id": "c262e39460f54cb1ad4b40207f4a1046",
      "IsHidden": "False"
    },
    {
      "Start": "4a02a2bf128f4cdebf8485a80c3cc109",
      "End": "08a546c925d842479a5d42774f253da4",
      "Id": "586ea96aa27f4f28b44941a5497c5f58",
      "IsHidden": "False"
    },
    {
      "Start": "25b4e6238c714047a5b170b8fff339d8",
      "End": "f62a5243f31b43af80edf36cf7636609",
      "Id": "2865828c43414274914189ee0cd409f0",
      "IsHidden": "False"
    },
    {
      "Start": "42cbacb623a2441eaa25bf2e06dcc70d",
      "End": "847e3cde095f4d2086f390af210484fa",
      "Id": "13646c2902624edcadf2e482c863e8fd",
      "IsHidden": "False"
    },
    {
      "Start": "6edaffe4155f4e6ab929f89119bb0cf4",
      "End": "2111121f0ae946b3ad7c77f88a3fe63b",
      "Id": "dbc5bd890ba845028e108e269994f337",
      "IsHidden": "False"
    },
    {
      "Start": "3ce1a367aed04e288c92e1d5697da4fc",
      "End": "635d202082f64268b13c66daf9eba751",
      "Id": "40e9d05e3b8a4341a79eb55933ea81cf",
      "IsHidden": "False"
    },
    {
      "Start": "bcd6b32aca5b41a08716d13a544fbd72",
      "End": "f0644936e7b6405f96cbb300cf9f1f28",
      "Id": "cc6c4ffff8744f8e8a213ec5d4f2c0d3",
      "IsHidden": "False"
    },
    {
      "Start": "62d8ed56000e4f1ebbd1886270ba2e1a",
      "End": "59e118d4c8494e27a6ce2f32ea3fc9bf",
      "Id": "9fdf6097795b48809be86844b447d520",
      "IsHidden": "False"
    },
    {
      "Start": "333c8d46b1544950b1a19aad22a94ab1",
      "End": "57090f65703e4681b949c9ae54e79f8e",
      "Id": "0b7c8a9f24d04f5aafdd78a34b83676c",
      "IsHidden": "False"
    },
    {
      "Start": "f6d32cad04fa42a4bd14584b440604bf",
      "End": "a365ba39f1f94ea086327823eb85fbdc",
      "Id": "7d0cc8a3e7fc4894a566b4101b61ce25",
      "IsHidden": "False"
    },
    {
      "Start": "5674fda11c32463c9134a731f2592af5",
      "End": "23cd25265feb472baec8333905d2a7a7",
      "Id": "1ed2eb9697954964b1d5c5e4611eea75",
      "IsHidden": "False"
    },
    {
      "Start": "e104103c667e42d1b8f54911a930c1be",
      "End": "45d97960ddbf42b58756f9092b5db048",
      "Id": "ed61544fa4344268914cce4068a539a9",
      "IsHidden": "False"
    },
    {
      "Start": "4a997e1438d9445ea13b65bdd118dbe5",
      "End": "732cb58ee05a46359da2c5f2d4bb6a29",
      "Id": "b037f34974b04aa3a90e57a399be3f45",
      "IsHidden": "False"
    },
    {
      "Start": "26d014c5dfeb41d5a5cc00c55b3dcaf2",
      "End": "3eb70e922b414f0b9e6231e339085f94",
      "Id": "f4d7e1304cfd4ba6b682f3ac2370003c",
      "IsHidden": "False"
    },
    {
      "Start": "26f8d1dbd44e43368d7f5e5c78455a7b",
      "End": "6a7e2e1481ef4083b0336030f8c2384c",
      "Id": "08b5e5f0354e478fb12c5dfbe3039186",
      "IsHidden": "False"
    },
    {
      "Start": "77fd3f0e34f54fe0ae4b6acba11defc9",
      "End": "0fe981498cc24e78bd9fca444a2b520d",
      "Id": "66fff7ef138f442a95420522e28f0071",
      "IsHidden": "False"
    },
    {
      "Start": "25b30291143d47d6be39e42fae57fae7",
      "End": "e8d5d9524cf7471fae9774539e13afc4",
      "Id": "94697fe42d1f4fdcb9d6bd809dd01dd2",
      "IsHidden": "False"
    },
    {
      "Start": "9e9e203a657e469191f94ed4197e1b6d",
      "End": "acd15ca7635341ce8f32d65b6ec9e9bb",
      "Id": "f462afbd0e8d4240a04bf70948f40292",
      "IsHidden": "False"
    },
    {
      "Start": "4044bcaac3fc44eda612ae0ca6ed9fe6",
      "End": "43deaae865f84bfd81bb100ffb3acec7",
      "Id": "8f8baa7900ff4b0a8f9f096c49d46e6a",
      "IsHidden": "False"
    },
    {
      "Start": "d0b1a76b1f604c0dab70ab798e671d1e",
      "End": "34517b2799694e81afa5d7611369cb50",
      "Id": "0e25c404ca6f41f99bd6431adc6723c8",
      "IsHidden": "False"
    },
    {
      "Start": "9b6a57601ca44d39a7b4caa1cd8f5c6d",
      "End": "cac313bed6ce48b9acd0b933fe3abcf1",
      "Id": "4bbff70893a5437e92ec350ec1478dec",
      "IsHidden": "False"
    },
    {
      "Start": "da842d2c1f7a4dc39fe7c38b2ce436e1",
      "End": "bfc83f8d10814c9ebdd81a8f92af7818",
      "Id": "d20d1ead894446a6bab2794a4ba671ed",
      "IsHidden": "False"
    },
    {
      "Start": "f127a33646fd40039edfe06c4185a354",
      "End": "bc1c3ab06811403d866d10088907f387",
      "Id": "3ad81e2a8c0544a08383adeb378ee68d",
      "IsHidden": "False"
    },
    {
      "Start": "c1e72d9a22c142e9a72a2de25d99f7a6",
      "End": "c0223286685047438f8e68b980106726",
      "Id": "c2c432d32bf84e1e8e1d511b16e452aa",
      "IsHidden": "False"
    },
    {
      "Start": "fecf05342be243f1a2da6477a90fd305",
      "End": "1e44609636ed441d8fcd9f67fb810f18",
      "Id": "802cc2b683a843178fde15a585d14c76",
      "IsHidden": "False"
    },
    {
      "Start": "9d337c38b2b647999b1a5c91ee6a36a3",
      "End": "fa2ada424796453e979842ad57dbf4ca",
      "Id": "febc0410dd274c69a272b043e4fcc75c",
      "IsHidden": "False"
    },
    {
      "Start": "d3bc6c0de8c24c378fa3839267ff4282",
      "End": "5826f67fb2274c28bcd4e71e455b5f14",
      "Id": "63e1200aedb34830a0863b6e2ca8531f",
      "IsHidden": "False"
    },
    {
      "Start": "e9ea6aef39e94b0984ec4c17393259e1",
      "End": "8be90e3421a6455eb6ad20483c5aa9e5",
      "Id": "abb86968b5854a75897632e453f935d9",
      "IsHidden": "False"
    },
    {
      "Start": "84688aff25d14032aa02918d20cde7ac",
      "End": "7f2f434b806f4c5dab40addacfc6dcf8",
      "Id": "e01ec56283e644609b4d853d7aeab342",
      "IsHidden": "False"
    },
    {
      "Start": "9ecd2ca57fae4eebb22483756745dafe",
      "End": "eba9b0b153134485b963ff455a8882c3",
      "Id": "4f5c7072fc8941a895a10ac6fb215778",
      "IsHidden": "False"
    },
    {
      "Start": "e2a518f3eeee437691bf8dc4e99dbabc",
      "End": "af747bdabc6f4d5bae632842a0d80d3d",
      "Id": "77a54665280c479baf4afdd80b681d8d",
      "IsHidden": "False"
    },
    {
      "Start": "b059473a184f4e2c803786938ce41a21",
      "End": "2095e224d53c44b8a8175dabd12337b6",
      "Id": "66176cd219c44ef4bd42c23e573cc84e",
      "IsHidden": "False"
    },
    {
      "Start": "aa55e9b189634b69860cff01e46a4d09",
      "End": "62ebd62345d043229de142ed37afde3b",
      "Id": "6f54130203624d9397e7fa56d908a842",
      "IsHidden": "False"
    },
    {
      "Start": "b5b698fbbcd247eca6be58b930205fff",
      "End": "d28e2126cedf4bcd99182b033e4d0380",
      "Id": "5679191919e3414aad05ac650052429f",
      "IsHidden": "False"
    },
    {
      "Start": "74d144062fe542b4b7fcb8839684f9d4",
      "End": "28d088f43ff744eeb245f3147a493bc8",
      "Id": "6026054318fb472f8d19b12d32723469",
      "IsHidden": "False"
    },
    {
      "Start": "ea970840b745427285298ec3c0d1122b",
      "End": "cfcdc99daa254568a55a7647dc125e4a",
      "Id": "014abd85fe5b4ac097ede60be6e32d87",
      "IsHidden": "False"
    },
    {
      "Start": "2d91d84c8961441aab0d449c987b57e4",
      "End": "fb95567b627d4b058dafa9e861df102f",
      "Id": "e5aea879f4894a8591b6fb84337a702b",
      "IsHidden": "False"
    },
    {
      "Start": "6f5366c3022d4a98a69cafefe4ce0b24",
      "End": "8b9c184d25104c87aea62756bdb9e3b3",
      "Id": "5da624a833f04fea870242a7fac9c849",
      "IsHidden": "False"
    },
    {
      "Start": "736145fc9456498fa4c1d3422c8a7288",
      "End": "c7c3a3770e734498abad4ac8bc2e7f0f",
      "Id": "004e3f3c53144a8cad478413901355fb",
      "IsHidden": "False"
    },
    {
      "Start": "30510dd8916f4be58cf09216ef1209d8",
      "End": "62c3e89af06941f1b4639d95d43171c8",
      "Id": "7a16c59a73a24729815cc1b957f4a316",
      "IsHidden": "False"
    },
    {
      "Start": "57cf7bdd11e2453f816a1ff7c95d7e87",
      "End": "b5189391f33043af8ac7a5fe6273c70d",
      "Id": "551c943ea6f44236831d10df01f5b5f2",
      "IsHidden": "False"
    },
    {
      "Start": "27290b6199834347a7dbdcaa2503c990",
      "End": "bbdbfbfae8c248708643ba040ec976b3",
      "Id": "cae3eb759c464964b1f652cb5151c3fc",
      "IsHidden": "False"
    },
    {
      "Start": "36c3e6de3b37493382138ed9e8cda74a",
      "End": "dce662591ce840cb929bb640e555a308",
      "Id": "888d4049ece04a7390130d99ace55f73",
      "IsHidden": "False"
    },
    {
      "Start": "b2be052449a447f2b807a2cec947b023",
      "End": "8a29cdd05e35489eb82bb91c1069457a",
      "Id": "ffa4039cf0434ecfbaa62d3dcf9fb7dd",
      "IsHidden": "False"
    },
    {
      "Start": "0f5ac408a5344ead82b38545f2b408bf",
      "End": "8349a21adad7453499711f6f7f757f07",
      "Id": "0c9569ecd78342968dff4b622b454576",
      "IsHidden": "False"
    },
    {
      "Start": "2d7a387ad817476a8bda9366bdce284d",
      "End": "cc3076543b174ee3b549b7d355382256",
      "Id": "e671c723a18c48bbbfa94b05c9472a97",
      "IsHidden": "False"
    },
    {
      "Start": "7f57e62020184228bd2f9f3a1d0f639a",
      "End": "2b87cdaffa9a41ae99509b1608976656",
      "Id": "7001e77896f24251bc791aeb9ded78e8",
      "IsHidden": "False"
    },
    {
      "Start": "93a3da888c634397b4447b821705204b",
      "End": "3cfdbdbd70c54be4aa0225d4db6f57fe",
      "Id": "3e17fb8b57284473ab242844a5f0ad3a",
      "IsHidden": "False"
    },
    {
      "Start": "a56f46caa48b43f0b6cc049d662ac992",
      "End": "82847afa41b14b6c89bb14c5aacc2a16",
      "Id": "ac579c2cd40a4b829c4ef20a84e4b1e0",
      "IsHidden": "False"
    },
    {
      "Start": "86ca0d6a655544eea6e01c6ba56b7716",
      "End": "436f139e1b424ca9b28bf5aa61b9cbe1",
      "Id": "88c31727980e42be86dfe4519d4c5044",
      "IsHidden": "False"
    },
    {
      "Start": "2836b5126c2d49cd99d808db41a6c9ab",
      "End": "95a02ed725ec4fdbb4cf4417acc0b9fd",
      "Id": "b2714cfdb85044129a3e56c90e12727b",
      "IsHidden": "False"
    },
    {
      "Start": "903a56ae91544cefbd1090cc47ca74fb",
      "End": "66f2f71cc2404df096a9fc0181b7e6a7",
      "Id": "9f217ce281784f93bbc1a5e06999f905",
      "IsHidden": "False"
    },
    {
      "Start": "9d28e9790f7244c2bb24b85b55b3a6a5",
      "End": "a6d9b6f2bc5a41c49bae1d1fc1f6e62a",
      "Id": "85e9b0f2091d438a90538b12ea40c0e6",
      "IsHidden": "False"
    },
    {
      "Start": "c23274b7f93f41778971199a1f68bc09",
      "End": "313295cd93f14215ac0726305754cbb0",
      "Id": "421751aa426c42299d85b2ba074925b9",
      "IsHidden": "False"
    },
    {
      "Start": "4a90a69ab2d94b93a92008650a43c538",
      "End": "08c6db3182a240d590fa0ddfd14c72af",
      "Id": "e02467e215364305b389956e16a21082",
      "IsHidden": "False"
    },
    {
      "Start": "97ea68bfe7304f1694796e8c025c433f",
      "End": "6a964e9edb45437bb86dbd803b698d31",
      "Id": "a1d24cb45ce44a4ea6b0af54bd094be0",
      "IsHidden": "False"
    },
    {
      "Start": "652ec32f9a714c22af505a71e2c92568",
      "End": "24f8ac5d0eaa4d1f9b2d0df17362d79e",
      "Id": "ca1e55443b924865ae63b402bcbb7b41",
      "IsHidden": "False"
    },
    {
      "Start": "7cd23e3c53484c30bbb7a483bda642f9",
      "End": "65e413de4628419e85d1920665eaf621",
      "Id": "4faffa0b9cf14eb68c6306f983a63144",
      "IsHidden": "False"
    },
    {
      "Start": "8ffd113fe85144a79f79bfab35d1c837",
      "End": "3d7d449120b840459480c96709bd643a",
      "Id": "7154b4feba12407796f3803693a029c2",
      "IsHidden": "False"
    },
    {
      "Start": "cc20073ef7264f5c92d2ffb85e463134",
      "End": "7bd6cdbcf1b94bb2bea3bb702efae2d4",
      "Id": "fa009551bb804f148c95554b629beead",
      "IsHidden": "False"
    },
    {
      "Start": "3027030cc99845898a9c10965b2b8bd4",
      "End": "e6f636754afa45f0896d9a736299ab03",
      "Id": "ac292e5251d3423c9188fb7b28b1f1b1",
      "IsHidden": "False"
    },
    {
      "Start": "3df5786b18a34fa797e40a64edec29c0",
      "End": "0c7e343a09ec43e09dd8b0903281d605",
      "Id": "c74032f699cf464db9dbfa47ae987df4",
      "IsHidden": "False"
    },
    {
      "Start": "7ea7cb780b1a4d23944242eb1884a716",
      "End": "a28a971e6be940c788783af58687aa73",
      "Id": "efea45d8e9194217bf5fc17322596b02",
      "IsHidden": "False"
    },
    {
      "Start": "a14f4051bf1b49a5af3601626be39ab2",
      "End": "e3bd218765bd4740b3d54bb82648d4b1",
      "Id": "c644eb1d38c64c91948ff7b1dbe8ef25",
      "IsHidden": "False"
    },
    {
      "Start": "2162ba361ae8411593719a0a307b2190",
      "End": "c8d45f6074a14898918e3d463ad82510",
      "Id": "c9e5ab99479f4bc1ad094236c0aab486",
      "IsHidden": "False"
    },
    {
      "Start": "dcc086f6c6e24d94a04eb7857eb33088",
      "End": "7c39e97e19a84389bb35359019188a29",
      "Id": "0a033bee9b924648a2bf054f13ccebc1",
      "IsHidden": "False"
    },
    {
      "Start": "aa9f5fdaf29648e4a1f2693f946f39cd",
      "End": "9b63d5c937384185844516e7c2355c47",
      "Id": "059496deba59466b9b5c7d79521890c4",
      "IsHidden": "False"
    },
    {
      "Start": "abe1c8d5c73c4a938f756a33d2ae209e",
      "End": "6755cbd2ed38457bbf28327240c3b17f",
      "Id": "2afb30944cd54f1ab5ff1970482c7105",
      "IsHidden": "False"
    },
    {
      "Start": "7679ecc1784d4ee3a571ba83f71977eb",
      "End": "ecfd9dbc909945f1a61df6ac795d543b",
      "Id": "f26d1e5776f64b5ca02b68d14ea2250d",
      "IsHidden": "False"
    },
    {
      "Start": "f27583fab2a44e80be3fe9507c228fd8",
      "End": "f4eec8e946c8444ca60e6d1297cbd996",
      "Id": "1906cffb366d4783a9c408e642582b44",
      "IsHidden": "False"
    },
    {
      "Start": "977f00f70ae34fc69b30ced4fb217ead",
      "End": "c76a0b9276d74488b5f61ae970be7ac1",
      "Id": "c377a4e5f58643bb8b04d06510c42d84",
      "IsHidden": "False"
    },
    {
      "Start": "ebec70a6b97247619a7fcd9862402023",
      "End": "2637ca751d184c3a8a433657559a1cad",
      "Id": "17603856bc504e288f2a5bd99de1ca58",
      "IsHidden": "False"
    },
    {
      "Start": "3f230e63e2a44e10876c73bb6424f0ea",
      "End": "fd0ae66da0bb4e769f275e97ef9dcdd9",
      "Id": "26875d04228f4c23bacb323b1a578890",
      "IsHidden": "False"
    },
    {
      "Start": "3f492daf40f64c779b112729f347a1a8",
      "End": "0eb4e80f1c204fdca2739522b5a17510",
      "Id": "3429f6ed53e048ceaa791378af8cc274",
      "IsHidden": "False"
    },
    {
      "Start": "941efd637f6d4d89a080e1353915c9b7",
      "End": "d72c77856fe84e67a104bbfcb5237334",
      "Id": "2708d0cae3ee41e694a4197c1700a4b6",
      "IsHidden": "False"
    },
    {
      "Start": "6a2465589eed4ff181b0a9ccdf50dbd3",
      "End": "fe0b4551838248c2b939fbaeca4ec426",
      "Id": "a7525405360e4e91b43a009cbe0d5f28",
      "IsHidden": "False"
    },
    {
      "Start": "163a37f29ae04bd2a731015db8ff1ce2",
      "End": "30a990add0cc490fb9cafebf0f619cde",
      "Id": "acac3940ea0e40a8915ecb737f142b2c",
      "IsHidden": "False"
    },
    {
      "Start": "4a903f393e834c018473a457afb501f6",
      "End": "22e7b863c58e4936b7159159ca11dcdd",
      "Id": "0dd543f3432d4920a34651c89ced78e9",
      "IsHidden": "False"
    },
    {
      "Start": "23c2a06d702946f4b92c677ef717d837",
      "End": "58afe9bc33b94c37abda228838be8d77",
      "Id": "07bb2cd573844d9e9f4b1556be3f621d",
      "IsHidden": "False"
    },
    {
      "Start": "b153f1e062fc4e3f9a70b5ae18553f4d",
      "End": "6dbc942c0401446d851e5c6679408701",
      "Id": "ba9d70df221f47f59c311fdf9553deb6",
      "IsHidden": "False"
    },
    {
      "Start": "0036fbd7caef42cb98d1e27296d01754",
      "End": "7b594db7c03c470383385c453babcf04",
      "Id": "5e9c516ac70f43af8c09486116f4bf70",
      "IsHidden": "False"
    },
    {
      "Start": "be54ca4d933a46b98167bfb4c68f53ab",
      "End": "252262c79f5843c7a464cc547fb150a4",
      "Id": "58e799da081e4220a636ed736b9e0c55",
      "IsHidden": "False"
    },
    {
      "Start": "030e0483cd28443c9609cc7b26b3c69d",
      "End": "6de712a5339c4ce49ee9c3801c5bf0af",
      "Id": "fb17332cbf55471b83abea21178f3c6e",
      "IsHidden": "False"
    },
    {
      "Start": "3b61dfed4341447499c212b2232a5c69",
      "End": "61f93d2d9a1845f2963d03fd089f7d78",
      "Id": "13ecbcc3f4a040eaa3a156615c651145",
      "IsHidden": "False"
    },
    {
      "Start": "faf12b3da1a64be788cdbc694d3e3b22",
      "End": "d4369230faa34ae983c4be93b36a1412",
      "Id": "8017dbe5dda14c4095a3de200d536322",
      "IsHidden": "False"
    },
    {
      "Start": "35c9861844be46e9a983700ae3dad1c4",
      "End": "a684c1a2be994480979fcc94a151e389",
      "Id": "c247edda73dd49cda12ed571cef23bba",
      "IsHidden": "False"
    },
    {
      "Start": "3bdaf89e3bb14310993d453cf164040d",
      "End": "4ca5cd0cd20a43aab216fb3f569f5a88",
      "Id": "838df9b226634cde9b0478360fc825db",
      "IsHidden": "False"
    },
    {
      "Start": "bac740e12ee44cab9b847980625cccd9",
      "End": "6c2629d3c9fc424da9d23f690cc84886",
      "Id": "d1c35205a7314ae892b4cfda0a3bb241",
      "IsHidden": "False"
    },
    {
      "Start": "bcad28566b344267a31f947e46414039",
      "End": "2ae5f26612fc4e60ba500751a1a863e4",
      "Id": "f21b2724d6e44248a548fda9ceefff16",
      "IsHidden": "False"
    },
    {
      "Start": "c5ecd7da79c14d638376fe741c90f41b",
      "End": "ca974d4109044f6daf30b42eb1c39578",
      "Id": "6fec6c41a2954b04aa22eea314b93bb2",
      "IsHidden": "False"
    },
    {
      "Start": "af6738e712ae48eb858acb9b93927298",
      "End": "daf348974afb4cde809013f162671152",
      "Id": "f224dd84e06945fd8f2d54a78af1db8e",
      "IsHidden": "False"
    },
    {
      "Start": "6faf4464bd44419d8bb79d4c51a4748d",
      "End": "b39aa3a383224b8d85b86325e8256244",
      "Id": "8be941d118a94c1eb5becbaf391de1a2",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "c8e9dca738f546378b08a33afdd12327",
      "Id": "4a49207d6bb74ddd86e776bc2f22c933",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "e09af0bee50b4ebb9986ab2dd06433bf",
      "Id": "82b1f2556cc240179c73c3bc0fae5c19",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "2f03915ecdab44b7a7092ac4ad87ac3d",
      "Id": "5fda5911950d409195970354c42ea5d5",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "be8e8fa04d6440be92ff54e18478dfbb",
      "Id": "424a5d9ebf2a4c3794f07feb0a6fe6a5",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "1ef7b516042a4329aeb0e57552fbb11c",
      "Id": "d2f2122149264e0ba52098d4e51946b9",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "a7d91057762646799e5a0f3c9701a673",
      "Id": "95149bf600114fc9a1897396158e6e03",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "6618a8a14d4141ed85c9893f6390b8e0",
      "Id": "8bda18ebe9ef4d0a9709106016a75d85",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "96b1f51211db44d88b85c3d9d55bb53e",
      "Id": "8c8d3f1b235c47e99a606a8635278100",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "70a3d68a8fab455bb47d8b1a625fa491",
      "Id": "27bc77a477034ca39bc78ed5e4db9eed",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "411be18c0f674106b8629cfccfa80015",
      "Id": "386862984a5a4e48a0a0106e311e59ef",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "669fc8f33f5441afa8852e53a8c5fed2",
      "Id": "6ece9c2c85f24a2a956697151cb76559",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "43c32e908c174199938588574a42b197",
      "Id": "bd76250dc90e40bd8fa151e938490fda",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "99c7ab213f92411b8fffea37be727bb1",
      "Id": "027b79b265f14ff99920c3dc6a387226",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "817c857f16794107b898da813fe88196",
      "Id": "de6fff9fd4cf4364819575e309348d97",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "534b9f2e9e114361b4a4898606a4b825",
      "Id": "0235328f54fd454c9c2034a1cdd9a3f5",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "4eb28854d46c46689e5fe7c9359017d2",
      "Id": "af62346efa2a402688d9f031ebb30ee3",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "ce81ce700eec4731a993e132bffe2309",
      "Id": "cfe999080ff34c2db0693f130628e8a6",
      "IsHidden": "False"
    },
    {
      "Start": "3cd7e35bea994221b120e99fdc8cd7e3",
      "End": "d379302c897c407199fabd315f85c37c",
      "Id": "0c486482e46d41aba1a349214e958893",
      "IsHidden": "False"
    },
    {
      "Start": "21df2bea03a643cea87d752eb6d0d9de",
      "End": "5c8526b7ff8c4b069a076fc2d51ed101",
      "Id": "0a671adbb3504201864008d6fe03015d",
      "IsHidden": "False"
    },
    {
      "Start": "936b3194666a434f8317209ee5a69693",
      "End": "069871e000bf48bda7f378e83858dfd3",
      "Id": "2966c56059e8488db0cc5a8fc18b8a57",
      "IsHidden": "False"
    },
    {
      "Start": "9440397e77144b6e9590a4236a4c1560",
      "End": "530ae5ee996645cb94b9eb4eb33135cd",
      "Id": "5c283fbda2da405587e63c18df549426",
      "IsHidden": "False"
    },
    {
      "Start": "33f8d4744d364dbe9674bcad5348f8f3",
      "End": "d2ded0e1f2c942139d7bc6f91b1991b9",
      "Id": "e819b68fe6a747bea72f1bdb8c932cb0",
      "IsHidden": "False"
    },
    {
      "Start": "d6ac6ae83c744bcaa137ede72d62c759",
      "End": "4fcc82d2bbde43ecbe54d7ee366151b7",
      "Id": "0d6d01ea23d149c9a33abb4d9e8b3007",
      "IsHidden": "False"
    },
    {
      "Start": "7948508eee5d48eaa40c36a2d5de6d35",
      "End": "36936403b73649c5a25331c2f4a00a93",
      "Id": "e75ed53e4c284b7eb42563f7db2fc781",
      "IsHidden": "False"
    },
    {
      "Start": "97d75073821e440abd098acc932ecedc",
      "End": "1f008bda39f24719a008eac0ea044676",
      "Id": "5c4e48ab90014d93921593acc7668b33",
      "IsHidden": "False"
    },
    {
      "Start": "ee890fb688584e48a323ed4c815054e3",
      "End": "f401462d4627463dadfbf0f679d56747",
      "Id": "7bd140d5c9234fce9ca1bf1d0da3c87c",
      "IsHidden": "False"
    },
    {
      "Start": "05047931c9434129a7d41e1154c49ba5",
      "End": "a9181edcd74d4a06a85de1d180a81525",
      "Id": "5554ae0f275742e6809d579552c4d2ff",
      "IsHidden": "False"
    },
    {
      "Start": "1c1895885c484acd999c7be306be003c",
      "End": "38060b697827477db8e00f22668511ed",
      "Id": "cdc1b94107b14fcaa7926ebb645d1fd8",
      "IsHidden": "False"
    },
    {
      "Start": "b243b96d023d41478d652bed5d1f764d",
      "End": "3a3359078ccf4bed8891375f7e332104",
      "Id": "3780069c399b4b869967ed967473fd4d",
      "IsHidden": "False"
    },
    {
      "Start": "5e4096e84bcc467bac048c3f321fb5b1",
      "End": "975d6951354a4605943a4bd362b9fc76",
      "Id": "6da13624dcf44eb39d9d45cdea61670d",
      "IsHidden": "False"
    },
    {
      "Start": "5e4096e84bcc467bac048c3f321fb5b1",
      "End": "aff9b41c0460448f9881a9f0143f208d",
      "Id": "4eaeb122346145b09fbf2cfef35f909f",
      "IsHidden": "False"
    },
    {
      "Start": "4f76b068e7b147f2b44b90ba04af768f",
      "End": "17737be37182430dada0d4841e92f770",
      "Id": "4c37aaa457a445f9951c0ba7a2a634bf",
      "IsHidden": "False"
    },
    {
      "Start": "6966f58b7e9c4e83980a91869e12e3c6",
      "End": "b6b9792891374a369be9c349f737c6a2",
      "Id": "f7d65617fb5f48a29882c1286750bfc2",
      "IsHidden": "False"
    },
    {
      "Start": "78a79ddad3354c129a010a33a8e6e123",
      "End": "913d4df8ec9b40a583ee1c197c0fe2be",
      "Id": "5fcd9122fa1d4a52a60e63abec74dca2",
      "IsHidden": "False"
    },
    {
      "Start": "e2e40ba27b614b01a13283439904d67a",
      "End": "28afce8731a5479f937f284d43ced79d",
      "Id": "4b95f24e40944950b77b20d462199f3a",
      "IsHidden": "False"
    },
    {
      "Start": "74eb6536e300427b8aa1e7084df8dd06",
      "End": "c19f9e33a6a1428798184e72b3fc925f",
      "Id": "73c3a9b82e8e4103bf8b54e2baf3c4ff",
      "IsHidden": "False"
    },
    {
      "Start": "416d9bcb6b474a0db914f510b5cfaae6",
      "End": "ea17b80597394f17982e5b7d0c2fd9cb",
      "Id": "11088c0d845c40319941a30a4f291a75",
      "IsHidden": "False"
    },
    {
      "Start": "c3a49697e17e433aa893c2f9a8fc1507",
      "End": "7a4bb0fdede1470ab14bde2e1a4ab37d",
      "Id": "8b5bf12fb8d24e0a9458b6708c3038e1",
      "IsHidden": "False"
    },
    {
      "Start": "1c7d00b9f2d44489a3435420eb72b407",
      "End": "be32bc8cda5146daa3bfde1bc4bf30af",
      "Id": "0fb4d79b38c743ddacbef75134b2adcb",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "b7ca6cf4683e43e68863ef93b1e1b090",
      "Id": "008c40cbca85459087daa3cf28d0117b",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "4127d8f23b134fa4a9835e1bfefa21b5",
      "Id": "36d7e120182f4b43b99895ffbdd85424",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "572c2e3bddf94bd3b62b976f68006a09",
      "Id": "104ed3d203364911a48f48adc127be0d",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "c0e85ea6a9cf4d1a81397ff9439baf25",
      "Id": "53095ca89b8d4b0a9e3239e3e63b77f9",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "2253957f782e49b4a01d7268f0cc319a",
      "Id": "32a85fe9ae7d4e1484bbf3f627faf42f",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "68716bcac1024ac08a1bd4117e91cfe9",
      "Id": "94c82bb245a1418aaeccc0c81adba036",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "b1c667ef4e3c4e3394faefac1f676aa5",
      "Id": "20b814d7254048fe80423170f7565cce",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "f2fe51495aa24c7c90f1979f0a505379",
      "Id": "c066f07b7366436aa129f2fae4e8be0a",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "a01c8a72d9774453b9bdbeb58d100803",
      "Id": "6b4df7bca61647b28bbbeff0fbd205cf",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "240bc6f55765422ea16933f2af93ee51",
      "Id": "7ce8aac7cea14cdabf8eb4bd696e3e27",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "1b3021e1e3974ea1acec6106c5f917de",
      "Id": "02085835bab14fe9b8f7bf96168234b8",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "febd9029256b4335a6fb2d25a56d4c57",
      "Id": "d44bb9375f1d4cda8d2f020826ff7ef6",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "277e3e28b48e4785968f3e6ce1d5f004",
      "Id": "1ee180a6f4fd45e49f891c5bc2e338d7",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "f5e43e8df8af4728839ade10d99b5fe8",
      "Id": "3bfc2d71fa6549d3a3743e184b6bb6e1",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "7d0b0a9ce97741289052fe1d297f03b8",
      "Id": "45eb64dcd2444222a0b9278d194b1e45",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "138496c6390848e7a93515133d641add",
      "Id": "612fb2a54ad0478c93cc2e2ce0001537",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "d9597d908af54ddc8847dade4567ee77",
      "Id": "c0f19a9697b44ab499ce4a1acbd1b67e",
      "IsHidden": "False"
    },
    {
      "Start": "19761d95cb174d31bf3428d6342ff6e7",
      "End": "15dca42f3e5c470e95e73a6514626d1f",
      "Id": "0ae7f9a8c08146d58f3e8df4d42a67ec",
      "IsHidden": "False"
    },
    {
      "Start": "7ed33cad1e51490989add8392f434e48",
      "End": "e12baa69c8244f6985151cca68b167fd",
      "Id": "5a8d5ebeac1d42079c0b571bba2fd81f",
      "IsHidden": "False"
    },
    {
      "Start": "58807f1ea8d944dbae76fc2a24052033",
      "End": "8b2aceb6509e4bbba85f4f8afeea558f",
      "Id": "e9107c840d114fbaa4650a2b8ff94c1f",
      "IsHidden": "False"
    },
    {
      "Start": "bf538ccdddb84926bd5842179fb04433",
      "End": "828003e28319470abeccf14ddaa8106c",
      "Id": "fafcb366283f43e382953543e33327da",
      "IsHidden": "False"
    },
    {
      "Start": "a20014c342a0428fa22c7c48fa38a5be",
      "End": "b1a73ba9aeac45e2988c432fe83497dc",
      "Id": "76b46586507247c9beb3a3417390421e",
      "IsHidden": "False"
    },
    {
      "Start": "babf140da89344b7a45f5908059db7d5",
      "End": "ab398b0033894bad9ce123597555cc58",
      "Id": "c89620fada2a4d57947c2f576fe835a2",
      "IsHidden": "False"
    },
    {
      "Start": "795124b97a084625a87b02ab585dc522",
      "End": "f77e17d316354202ac9db1df98558a6b",
      "Id": "3f3bd43791794a4f8e0f1d9b7c414612",
      "IsHidden": "False"
    },
    {
      "Start": "cec659a19fc14d1581f7f7d220aa025d",
      "End": "d766bb99b1d548e39fd8106a34b9fb86",
      "Id": "3936bd3f0b444919a78583bf224bc138",
      "IsHidden": "False"
    },
    {
      "Start": "cec659a19fc14d1581f7f7d220aa025d",
      "End": "28197e7da09842d1b1eb71a3b2794cb6",
      "Id": "f5bed49d07f6435697727604e8b72085",
      "IsHidden": "False"
    },
    {
      "Start": "cec659a19fc14d1581f7f7d220aa025d",
      "End": "91ce1124619942dc8fffea12662366d6",
      "Id": "efa98204ec5044979abd255fcbe86907",
      "IsHidden": "False"
    },
    {
      "Start": "884069602e6d485698c7aeb458fdb54b",
      "End": "03478a8a91304e08a7cea728dc80ccf4",
      "Id": "ae9990b8b0904778988729bd384461fb",
      "IsHidden": "False"
    },
    {
      "Start": "e16831972cdd44c89b15867c4390fbd9",
      "End": "24a5886276e6481dad326377c64df7b9",
      "Id": "f8aaa4ba832e4d08a89b210628fef2b7",
      "IsHidden": "False"
    },
    {
      "Start": "40f5a81b1ec847aca4df53fa37ad8646",
      "End": "8691a70667e34f2a9a487d75d37af6d9",
      "Id": "f99897cab3074661950e5b516bb2e785",
      "IsHidden": "False"
    },
    {
      "Start": "51fe4927638f4bf7b7e1501337f5f3fc",
      "End": "29b96ef7b3034ef19123f7b6ce815258",
      "Id": "ad281f190f82489c9bbbaca5f071c5af",
      "IsHidden": "False"
    },
    {
      "Start": "2b83dd3ff2aa485a9f6dfd75b318046c",
      "End": "8145b33f460e448887d0c91ac48b5b81",
      "Id": "31fa3ba505cb482cb30c141fbe4601ff",
      "IsHidden": "False"
    },
    {
      "Start": "a0c48d57f8054da0b623c9e7fb85a805",
      "End": "9a2c2b67d7e54c059a8426abe529a76b",
      "Id": "2d75465d583d4546b4e9b52acac17079",
      "IsHidden": "False"
    },
    {
      "Start": "435ad4e9895d43cd860162ae01083eba",
      "End": "a9ea64d6181444efb9b0a1b482769665",
      "Id": "c32f5eedf1f4461995e51083650abe33",
      "IsHidden": "False"
    },
    {
      "Start": "48b332cf7e24455fa490400bd55a6cd5",
      "End": "2b98f89061b94314aca6dcfbc01c432a",
      "Id": "9994d68db5494b06a415366aad709e7d",
      "IsHidden": "False"
    },
    {
      "Start": "706b058e7e9946f1b06476c4a6552690",
      "End": "8f63e4f0f7394bad88e196aed6a9eda5",
      "Id": "b8e84c91f95346a98c5f93ffa6cd08aa",
      "IsHidden": "False"
    },
    {
      "Start": "7510a9454f764e3faeecb71a922ba2f4",
      "End": "6feddb7f1705481b80aad545681f9804",
      "Id": "bd6538485a544168b313ff52b7e491a3",
      "IsHidden": "False"
    },
    {
      "Start": "a2c35ebcff1c4b8a915d750a2f58ca1f",
      "End": "6da6faf08e4a40bf8f96d1cf6179afd1",
      "Id": "633c88ceff70428ab96351d0fddc47fb",
      "IsHidden": "False"
    },
    {
      "Start": "b6ba93f15f494ba98d026fef5ab7aa19",
      "End": "19ee3b30b5294966b511f9f703678879",
      "Id": "0cd8559fab8c494bb743a5ff82560bff",
      "IsHidden": "False"
    },
    {
      "Start": "ac8e9621968c49cfb543affce0e1091a",
      "End": "7dd5514bea0c4b74b4ead148370c885e",
      "Id": "54841687bc3d49a39e1b28850b6715ae",
      "IsHidden": "False"
    },
    {
      "Start": "ac8e9621968c49cfb543affce0e1091a",
      "End": "41234527e02a42ee9cdd33fe2242594f",
      "Id": "84eab44ce6384378a8d6c0cc340b3789",
      "IsHidden": "False"
    },
    {
      "Start": "2d71a8ce64b145f2b97e95679067b7db",
      "End": "ab8afe53438644f59ed99d8c680a845b",
      "Id": "30cdf4c2e3814c4d98ad4c022020f7f0",
      "IsHidden": "False"
    },
    {
      "Start": "42864030e8854a22bb0f60d812df12ba",
      "End": "758ce19acfeb4bfda937bb5461855ead",
      "Id": "7a73b18aa41e47c995c8d8fc2f8cace4",
      "IsHidden": "False"
    },
    {
      "Start": "3636d273c565406fa76c388cf36a9ae4",
      "End": "08c0bfbd039f4a13916a0acfe5e8afc3",
      "Id": "cce9661d01224ae8ae847942fe4a6925",
      "IsHidden": "False"
    },
    {
      "Start": "afc2e97956204b7196232fe4c49c03b6",
      "End": "bd442c2d850f4675acef5475ee0eca00",
      "Id": "ff9fe9fabf80461da5c388b039ca7ff5",
      "IsHidden": "False"
    },
    {
      "Start": "b822bb59f7854ecf8da1ae929880a21f",
      "End": "350c067038bc4345bd777c5a0f6d0c0d",
      "Id": "0de0c2e3daee477c9660bd622490d7c4",
      "IsHidden": "False"
    },
    {
      "Start": "0ae07abff61840f698ed27add83f5ee2",
      "End": "55f5f8d68f824cb79ee57984fd1eeb2d",
      "Id": "d0045776acff4dc3bcc3877fc8010930",
      "IsHidden": "False"
    },
    {
      "Start": "e883abecf5264bfd831e87ace7ebd555",
      "End": "fd9735cb4a354a2281e518fa950d7a30",
      "Id": "c627cc7c6d6e4096a5629566d637e067",
      "IsHidden": "False"
    },
    {
      "Start": "75643494c14f41ce845b2eef737f6f54",
      "End": "45b36a1b0d954ea98818cb5ed99a33c8",
      "Id": "9ee909820ced437fb1254457e8fd0103",
      "IsHidden": "False"
    },
    {
      "Start": "8cbaca590b7a470ba1b3785b8acbecb1",
      "End": "c5ec18d8720e447daaa275c98d0b30b8",
      "Id": "a039e7ec0f8c4f26a4ca25b1e4dc79bc",
      "IsHidden": "False"
    },
    {
      "Start": "474fde897e834dd4b7fcc0aeab5d0e8b",
      "End": "ef0c605c4a9b49ddbcaf183e032f3915",
      "Id": "d188c81c76df404fb3fa124c98b65d46",
      "IsHidden": "False"
    },
    {
      "Start": "defbfad4dff044caa343869f191fc8e8",
      "End": "2c36204b318a444a90d36ab3a47f86fc",
      "Id": "c2cf7852a0bc4d58a5c6a428716f3357",
      "IsHidden": "False"
    },
    {
      "Start": "beae07102e2b4137bb2301ecfe99de20",
      "End": "b8bf0e005d884d038a008411bc476963",
      "Id": "c8faa754b5ed456590ba18a935cec432",
      "IsHidden": "False"
    },
    {
      "Start": "58c0cd51130646c4b5ae3cb0d9013d3a",
      "End": "f385def916e34960a0497856843335e7",
      "Id": "d702dfe16c6c493b8da27630f9a0c003",
      "IsHidden": "False"
    },
    {
      "Start": "bf9efb524f684407b4ce929636e5ace2",
      "End": "d696229c849c4235ba68db5778572fc2",
      "Id": "1731d2179c914cfc893bcec019452f2f",
      "IsHidden": "False"
    },
    {
      "Start": "81a7f7acd3404acc83ed5a4935bdbf4f",
      "End": "0207fef2f56d42539cc9ae6d71be09ab",
      "Id": "78af6ab6927e40ef9b885dc687935e9d",
      "IsHidden": "False"
    },
    {
      "Start": "92a64e8f66904476ac61b9b72d5bc945",
      "End": "0bb662dd20684a4a98af614fdb7ce40a",
      "Id": "80f0cd880efe4360a39e050e487083b8",
      "IsHidden": "False"
    },
    {
      "Start": "3244cadf6c8942e595e5dc68f571347a",
      "End": "6d207bffc4374f169aba9fa3236a9f62",
      "Id": "f3122499650f44478984a54401d5bec1",
      "IsHidden": "False"
    },
    {
      "Start": "72501bb7b7cb41bbb9c30a091b3582dc",
      "End": "5021441410e840dfa8aa25c9bbb1e791",
      "Id": "3cdf20e5146b485aab07e55aed86b960",
      "IsHidden": "False"
    },
    {
      "Start": "302b736afe7d401a96307598a92f2f09",
      "End": "bd0f8dcbf2104b9987a3733ee625ddc8",
      "Id": "019c4562564e4fcf8f3ee6131555c0b5",
      "IsHidden": "False"
    },
    {
      "Start": "bc6cb351b4a84c96ab5662d9df087ef9",
      "End": "2b3b9769bf494380b5b140cb13b9dbcc",
      "Id": "93e9e8e69d574a5a8aaf5d9e9e55da67",
      "IsHidden": "False"
    },
    {
      "Start": "1d3f5e1b73524bd28c3c2503ff0ac5a3",
      "End": "f693cd49e853492fab5df687717c735a",
      "Id": "e2106b8700584a3684fbe68b5e2df563",
      "IsHidden": "False"
    },
    {
      "Start": "88b392c8d7684f0288542958612344a1",
      "End": "076991925f694a6a90916792445b96c7",
      "Id": "925c6e4a19a64e73a55ac496e0005cad",
      "IsHidden": "False"
    },
    {
      "Start": "1d672dfea8fe40b8bf481f4cda2d97eb",
      "End": "24558ff4dd4145ea9e100258fa14921b",
      "Id": "9739ac61122c4e179dcbf20c0b609302",
      "IsHidden": "False"
    },
    {
      "Start": "5cf422922b6643cfbe39d6ac45bad3cc",
      "End": "af4713cbe3f54b51b7a8020b60685889",
      "Id": "29a491f569c84e678ce40b943d24afa1",
      "IsHidden": "False"
    },
    {
      "Start": "ed98e42c2fde4398851e29d882e428e8",
      "End": "f397270c5b9b4fc8b8e241ab34ff28d6",
      "Id": "5643e5144a7e4d41b69260119b4f03f9",
      "IsHidden": "False"
    },
    {
      "Start": "5c0a6af44c6540958fdff9a47cb44d98",
      "End": "7a6ff8f802e4449d8ff8c6000dacd645",
      "Id": "3736a185cc644c2ba93b84e56fed2e64",
      "IsHidden": "False"
    },
    {
      "Start": "81cadb40f67f452e8942df2e2d3d4a4b",
      "End": "1d746d31eb2e478b89e26ad590f235f1",
      "Id": "fe21182582d84201a22b2790f0a0e386",
      "IsHidden": "False"
    },
    {
      "Start": "c66b41ac5d6647a9a1090b70547890b7",
      "End": "3858261034ba4d1a916590e35493c8c7",
      "Id": "2aa2cfde08b441fcb8a158ed9691d130",
      "IsHidden": "False"
    },
    {
      "Start": "99c500b31e5447ab811cfa5758da0a87",
      "End": "317515641f9a4206ba70fb5125e8b538",
      "Id": "fc210a86949c44bc88e5758ab987e4c9",
      "IsHidden": "False"
    },
    {
      "Start": "a45cc39f3b3444349cf5886dadab2f4c",
      "End": "cc7c0cea84f04fd588fa4eb807d1293f",
      "Id": "57c8261cf6ca42d492d30e529ddd6735",
      "IsHidden": "False"
    },
    {
      "Start": "a45cc39f3b3444349cf5886dadab2f4c",
      "End": "376a7e04b1f44ad89aaa05a2932fc9e0",
      "Id": "f967fd20fad14948bdca3ef381574903",
      "IsHidden": "False"
    },
    {
      "Start": "3d0916d8d2c644da8d04617a93da0674",
      "End": "1ffba980fde0466f931a2969b6ef47a5",
      "Id": "b7d8424d07c54dc287c85b4f27448e8b",
      "IsHidden": "False"
    },
    {
      "Start": "3d0916d8d2c644da8d04617a93da0674",
      "End": "2b0befe3a3854c589ad2144ab87996d4",
      "Id": "b2068424eb3e493eb4ace645cfe90433",
      "IsHidden": "False"
    },
    {
      "Start": "4785c3abfaaf4846ae1825e059db960e",
      "End": "23e3cf6baaab4267abfe069804e180fd",
      "Id": "3a993e944eca4673b054f18952f2fcd9",
      "IsHidden": "False"
    },
    {
      "Start": "fc70a95a4288498f836ad97c1370de1c",
      "End": "277de11a3ad94c7dbb79f96b6934bcb9",
      "Id": "c3ab1d2771634580a15ad03b054d9597",
      "IsHidden": "False"
    },
    {
      "Start": "47909c7deefb418bbef7d00d6e1ed287",
      "End": "6466373831674ccc92f0d402defbf93b",
      "Id": "34f6bf043a4d4d51b979f55a0aab4a52",
      "IsHidden": "False"
    },
    {
      "Start": "770516fea8f04038a55fb824ce456339",
      "End": "aaf1dac375374203ad3b6b7a4cbd5189",
      "Id": "d5b333855ab2440399b4cdc5150b0074",
      "IsHidden": "False"
    },
    {
      "Start": "154a95421fdf4cbc8893d7975cb4922d",
      "End": "7113a3e9ec6f4d07aa8a8b5e65ed7f4e",
      "Id": "ed73980659d642fe8b4098865b674866",
      "IsHidden": "False"
    },
    {
      "Start": "b0b36358f7884db39c346d855dbba6cf",
      "End": "8b0a706ad9884f4aad6cebb02b98e61e",
      "Id": "b76f9fda287a48e19d3a4cac04de8ccd",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "5610d24d-04fc-4ef0-ba86-cd8215d14e9b"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "4.2.4",
      "ReferenceType": "Package",
      "Nodes": [
        "27d9a802f570423f8e26ba473110c061",
        "f7590613b1d5476d8c044b3ba03aa953",
        "bf6f9c335b3c43e98b2207d1b01fe2c2",
        "3c5a5a7886dc4a6f94bdc074e697a522",
        "5f1ce0004cef400db75e51a9d10d3ea6",
        "b246e88a8ace45e29bffc04d4d82f153",
        "eeb834e377c2449fbc25ae0c44c4eed8",
        "2bb09eef1d9c4507b99f4bc1efd7f132",
        "5e8fa3b5726a4822b198db6ee4eccf1d",
        "53a45f5ab10c4b9180105efd9b3a6a79"
      ]
    },
    {
      "Name": "Sparrow",
      "Version": "2021.2.1",
      "ReferenceType": "Package",
      "Nodes": [
        "7a68df7a039643f793b771c974bb7150"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Propriedades",
      "Version": "2.19",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.1",
      "Data": {}
    }
  ],
  "Author": "Jose Nelson",
  "Linting": {
    "activeLinter": "Nenhum",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.19.3.6394",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Visualização do plano de fundo",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "4d030244cdff41108dce6d340db3deaf",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 461.49779607257256,
        "Y": -104.09035097740696
      },
      {
        "Id": "152484bc5ea345878a4bbe2d5dd0715a",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 523.09480635187379,
        "Y": 385.23912233918213
      },
      {
        "Id": "27d9a802f570423f8e26ba473110c061",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1273.1824420604435,
        "Y": -541.32112306472231
      },
      {
        "Id": "f642baf536e34a3e8cb74808c1787f24",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1054.4615143684798,
        "Y": -479.37932994017649
      },
      {
        "Id": "349991248b904436bcea734462ed6d1f",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1017.9365992301614,
        "Y": -381.34105834904653
      },
      {
        "Id": "974fecacb61649d08cad877ce085a399",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1239.1274002837247,
        "Y": -30.0840368427819
      },
      {
        "Id": "1e1e2cb79b8b4302949f2e1372ade33f",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1185.4675222614737,
        "Y": 249.08314914360693
      },
      {
        "Id": "acc59ab50eda4eb7804aa29818ca8972",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1223.8582338806623,
        "Y": 458.01538168558045
      },
      {
        "Id": "f7590613b1d5476d8c044b3ba03aa953",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1431.6582772969639,
        "Y": 341.22396171972622
      },
      {
        "Id": "bf6f9c335b3c43e98b2207d1b01fe2c2",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1417.8551720748276,
        "Y": -93.976448958288231
      },
      {
        "Id": "3f2930e639524104884d2098b4448567",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4355.5489038008127,
        "Y": -235.64166116550246
      },
      {
        "Id": "7fddc8fb8c954860a2df0d7a22c43634",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4648.3876344922382,
        "Y": -241.25500569886606
      },
      {
        "Id": "ea09c0976ad449e499c255b466f80f4a",
        "Name": "Tabela SOMA Cabos PVC ELE TOTAL POR DIAM.",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5662.6944236025265,
        "Y": -547.06878031027884
      },
      {
        "Id": "c65c8786303e45679e5762b80df825e1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6280.7380899320651,
        "Y": -398.44411027874196
      },
      {
        "Id": "3c5a5a7886dc4a6f94bdc074e697a522",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6450.259623636075,
        "Y": -489.78705713452439
      },
      {
        "Id": "589f1535671948f69786e5c447c7e823",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7465.8320888848448,
        "Y": -196.20777208824143
      },
      {
        "Id": "646793082fa8468ab827f25bff06cbe1",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4362.2801973345522,
        "Y": 811.65966200593266
      },
      {
        "Id": "e6f7abf4031e4f1498ce0a45e4d831fe",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6121.5432127450913,
        "Y": 591.21391210054821
      },
      {
        "Id": "5d2a6a7bfb00464fb109ff277e8bf406",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5897.1182677211691,
        "Y": 604.49173969186
      },
      {
        "Id": "6ebb6ba3b425490b9390ad6c2f5fb898",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5576.5373117087565,
        "Y": 602.55622988519167
      },
      {
        "Id": "fe17bc5026094e789a58a880a4ab68b7",
        "Name": "Comprimento Real",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4757.5699639956911,
        "Y": 693.47525314883853
      },
      {
        "Id": "7c31af35b5f840efb52c4f9e7a5f75ec",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4990.7505948105709,
        "Y": 603.59612119856718
      },
      {
        "Id": "7eb278cd7c3149c385199991fd4aac4b",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4989.817909267108,
        "Y": 882.4861673382145
      },
      {
        "Id": "0338c31116ec4d7babc68b8ed62068aa",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5575.6046261652918,
        "Y": 881.44627602483934
      },
      {
        "Id": "b8cd702a4aa9464b8dd2caaf07dd020c",
        "Name": "Comprimento Calculado",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4638.5916303477952,
        "Y": 975.8287520105664
      },
      {
        "Id": "d60f8b9b3d764e58be0c9cf3e002de11",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5896.1855821777017,
        "Y": 883.38178583150727
      },
      {
        "Id": "b90cf32ff1ff46e694aac9f123b63ec5",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6114.9471242947538,
        "Y": 877.70404000743258
      },
      {
        "Id": "492608896bdf4a468ddf812eb6855ea4",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6798.127916762387,
        "Y": 2183.3095182528323
      },
      {
        "Id": "182a08405ec04e80bfe05224e7cfcb83",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7097.1567429139177,
        "Y": 2179.7760775802271
      },
      {
        "Id": "adf5c5b9174f412b85ce6287a8297519",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4979.5036242551487,
        "Y": 1156.4504307433558
      },
      {
        "Id": "c787ba6c2aba46a89ddfd212a1048167",
        "Name": "1,5mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4664.8770268147446,
        "Y": 1263.5413674684112
      },
      {
        "Id": "7fe7f089a33e4ab69ce46bceadbda1a0",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5568.6244259561317,
        "Y": 1155.4105394299813
      },
      {
        "Id": "8acab328dc574907968e7c3e65a9d162",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5885.8712971657424,
        "Y": 1157.3460492366485
      },
      {
        "Id": "48976dad3dfc4520b6a0df6f860ba525",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6104.6328392827918,
        "Y": 1151.6683034125745
      },
      {
        "Id": "c1c47d2f89db447dba98986c3b5877a1",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4991.39406786394,
        "Y": 1463.4960376133376
      },
      {
        "Id": "6979fbddf7fc463680495914d8ad25ec",
        "Name": "2,5mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4683.3354195246857,
        "Y": 1564.4292072729318
      },
      {
        "Id": "4631c63b0f9743d5aadbc2f0ea23dedd",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5577.1807847621239,
        "Y": 1462.4561462999559
      },
      {
        "Id": "8d6097ba17794b8097d293d1d47c1875",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5897.7617407745338,
        "Y": 1464.3916561066258
      },
      {
        "Id": "a98de3e60e5b478e981fa1b088e9339d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6116.5232828915841,
        "Y": 1458.7139102825558
      },
      {
        "Id": "dd06706c788c4fb098d21d4532d9f40a",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4991.736023924901,
        "Y": 1745.5910145165299
      },
      {
        "Id": "f0a5faaf90204cc8b0ec750ab7ab4c2b",
        "Name": "4,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4697.985919113361,
        "Y": 1854.32884428215
      },
      {
        "Id": "18a529a9dd274527a888e30174163c44",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5577.522740823084,
        "Y": 1744.5511232031479
      },
      {
        "Id": "657274e29b4a4ecdb6406dded01d924b",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5898.1036968354938,
        "Y": 1746.4866330098178
      },
      {
        "Id": "2acb5f845fb24994aa5c2a7e2ccb89a8",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6116.8652389525441,
        "Y": 1740.8088871857478
      },
      {
        "Id": "89f5b5e061d640cb8281f8f9666d5b20",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5001.736023924901,
        "Y": 2027.2797383599873
      },
      {
        "Id": "54e4073f58424a468841b178e9b9fc15",
        "Name": "6,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4707.985919113361,
        "Y": 2136.0175681256073
      },
      {
        "Id": "f462fe3c60294ff098cd32383059c02f",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5587.522740823084,
        "Y": 2026.2398470466053
      },
      {
        "Id": "32a5fb78700a4895a6c1763cc5f1c46b",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5908.1036968354938,
        "Y": 2028.1753568532752
      },
      {
        "Id": "734fa0052a7c4077a9bc1f88567dfa1b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6126.8652389525441,
        "Y": 2022.4976110292052
      },
      {
        "Id": "8bd3dc8019444266877cb35855b82f9d",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5001.7961925647751,
        "Y": 2315.5950164435289
      },
      {
        "Id": "61447a770a494a29ad6bbe18f35c6a83",
        "Name": "10,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4708.046087753235,
        "Y": 2424.3328462091486
      },
      {
        "Id": "94551aee3d4942a7bdf34e7b7eb76d57",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5587.582909462958,
        "Y": 2314.5551251301467
      },
      {
        "Id": "14837c99ac0d41fc8dcca999249dab8c",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5908.1638654753679,
        "Y": 2316.4906349368166
      },
      {
        "Id": "0db53f73beb146f1affd7c2e6710bd93",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6126.9254075924182,
        "Y": 2310.8128891127462
      },
      {
        "Id": "dcfda8e74410417ba7e370e3717d8179",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5015.1094696848168,
        "Y": 2600.597017407028
      },
      {
        "Id": "d0ee3683b8da488b835e7f7e8a9b25a8",
        "Name": "16,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4721.3593648732767,
        "Y": 2709.3348471726486
      },
      {
        "Id": "ceb30ca6d13245baad2bbbcd09694a5c",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5600.896186583,
        "Y": 2599.5571260936458
      },
      {
        "Id": "39d931774bda4ef0908525f8bbfff700",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5921.4771425954095,
        "Y": 2601.4926359003157
      },
      {
        "Id": "2cb15a242a654550813598fb6d36fafe",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6140.23868471246,
        "Y": 2595.8148900762462
      },
      {
        "Id": "05de688ee2b64c768ccef72465027b67",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5021.5884010111013,
        "Y": 2880.1648189893494
      },
      {
        "Id": "93bae9984d7a43d3bb76f9323faea2eb",
        "Name": "25,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4732.8876189284238,
        "Y": 2991.4273101194
      },
      {
        "Id": "590a3ce05eab4321aa00675dc7807ccf",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5607.3751179092842,
        "Y": 2879.1249276759672
      },
      {
        "Id": "80eba717806d490995610c71301409a4",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5927.956073921694,
        "Y": 2881.0604374826371
      },
      {
        "Id": "e252505550b94deb9844f97f0c826a03",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6146.7176160387444,
        "Y": 2875.3826916585667
      },
      {
        "Id": "ad6dd2bd3f304a8fa7704b6f0510dc8b",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5021.3838279566526,
        "Y": 3153.8350941354292
      },
      {
        "Id": "7631d4f23578494ab1369d0054fd2ec1",
        "Name": "35,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4727.6337231451125,
        "Y": 3262.5729239010498
      },
      {
        "Id": "a81d221b839e49c48d782cca0bc9f7b7",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5607.1705448548355,
        "Y": 3152.795202822047
      },
      {
        "Id": "f8766cfe750a4f04bccc312d4d8562a5",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5927.7515008672453,
        "Y": 3154.7307126287169
      },
      {
        "Id": "c3b963f18556461691954f2718f1fc63",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6146.5130429842957,
        "Y": 3149.0529668046474
      },
      {
        "Id": "910651aebec944819729367110fc59a8",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5024.3590714266138,
        "Y": 3402.6207407903466
      },
      {
        "Id": "a83dfffec3a24648b951a353dcafd910",
        "Name": "50,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4730.6089666150738,
        "Y": 3511.3585705559667
      },
      {
        "Id": "8d3fed2ee4714eb0bf66a815e2d2c67f",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5610.1457883247967,
        "Y": 3401.5808494769644
      },
      {
        "Id": "f52757252e684d97908684544803299d",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5930.7267443372075,
        "Y": 3403.5163592836343
      },
      {
        "Id": "f9f72c3d12104551b31301eb03e31cdc",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6149.4882864542569,
        "Y": 3397.8386134595639
      },
      {
        "Id": "370c3c44f1104d54a98a0a6f577e29e0",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5033.3581015108193,
        "Y": 3642.4817904313604
      },
      {
        "Id": "274745e3c4634172bb68650b5520855d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5619.1448184090023,
        "Y": 3641.4418991179782
      },
      {
        "Id": "db4afc4e367346f1a679caf6b84614c6",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5939.7257744214121,
        "Y": 3643.3774089246481
      },
      {
        "Id": "7dd5fb25c7b84d40b54fb4aa9bfc3b37",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6158.4873165384624,
        "Y": 3637.6996631005786
      },
      {
        "Id": "89c92af4066f44afb186b038226251bc",
        "Name": "70,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4739.6079966992793,
        "Y": 3751.2196201969805
      },
      {
        "Id": "f317a41c0a1a441f90e91b077ac50e52",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5043.1888156188043,
        "Y": 3896.0208188123561
      },
      {
        "Id": "cdc591700b634527842ecdee45ef4ae5",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5628.9755325169872,
        "Y": 3894.9809274989739
      },
      {
        "Id": "a04531bee02341949c3fc9aa4b7c7643",
        "Name": "95,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4749.4387108072642,
        "Y": 4004.7586485779761
      },
      {
        "Id": "54c6f803b4b54d469d75a7cd75b88341",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5949.556488529397,
        "Y": 3896.9164373056437
      },
      {
        "Id": "fa8544495de24efc97bdd9d054f6f9bf",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6168.3180306464474,
        "Y": 3891.2386914815734
      },
      {
        "Id": "1c83afea2e0d4fd2834c99e6d7f72d62",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5054.0759148247771,
        "Y": 4151.66815382054
      },
      {
        "Id": "02ab3e8164eb49919a88151f5452ec8e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5639.8626317229609,
        "Y": 4150.6282625071581
      },
      {
        "Id": "fa01bd353924491c8f5220a4590588f1",
        "Name": "120,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4760.3258100132371,
        "Y": 4260.40598358616
      },
      {
        "Id": "e6d764a6d841477aaffb631f8b5dbf72",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5960.4435877353708,
        "Y": 4152.5637723138279
      },
      {
        "Id": "d0a071c048f741398d872b3854316ec8",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6179.20512985242,
        "Y": 4146.8860264897585
      },
      {
        "Id": "c0fd8c481d1a464f969b9d23f63d054c",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5061.74030257092,
        "Y": 4400.5611586846526
      },
      {
        "Id": "74f34413d21f4ff4a3da989c871176bf",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5647.5270194691029,
        "Y": 4399.52126737127
      },
      {
        "Id": "3cd4eedadf1b45288f89f1361dc05738",
        "Name": "150,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4767.99019775938,
        "Y": 4509.2989884502722
      },
      {
        "Id": "321cb4b2ec5d47ee8f394107dd1dba37",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5968.1079754815137,
        "Y": 4401.45677717794
      },
      {
        "Id": "5a1b20a75b9547f391703cc74d801e9a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6186.8695175985631,
        "Y": 4395.7790313538708
      },
      {
        "Id": "33a7bc11b2a444e3802c7c5d2e4fc52b",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4955.6123545956962,
        "Y": -39.413445684990904
      },
      {
        "Id": "7bf2b5eafbad4faeabbfc7584be7ba14",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5268.2813366445016,
        "Y": -38.506688952544096
      },
      {
        "Id": "44340526a5b344abb9b3ca86918e837f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5007.3047681174758,
        "Y": 129.65118936585282
      },
      {
        "Id": "c1efda31f3e84611a77d59b2d1aeca27",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5549.2821310157688,
        "Y": -216.80202370319836
      },
      {
        "Id": "ab27601c3cb140c68b13c05bb0e860ae",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3210.6177884800081,
        "Y": 326.57493904867397
      },
      {
        "Id": "89703e4a5b9246e3bdea83fbc2a06057",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1256.0178026116196,
        "Y": 878.46241654120331
      },
      {
        "Id": "5f1ce0004cef400db75e51a9d10d3ea6",
        "Name": "Schedule.GetDataRows",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1491.0954004114797,
        "Y": 789.66385126161344
      },
      {
        "Id": "9da28366193e400a8ccc983fc5c20c0d",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 586.44223828345184,
        "Y": 793.45846332075109
      },
      {
        "Id": "4d7e08b6e37f478e924a9cf2ea262994",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2908.638505008083,
        "Y": 477.86707782406643
      },
      {
        "Id": "542acc065bd448b7857b499466cdfd37",
        "Name": "185,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4780.9006948518308,
        "Y": 4719.0172882212482
      },
      {
        "Id": "4d0897b2c41c44539cee11d3a1022524",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5074.6507996633709,
        "Y": 4610.2794584556277
      },
      {
        "Id": "50676d8f8aab4755b118e11d15e5fefa",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6199.780014691014,
        "Y": 4605.4973311248459
      },
      {
        "Id": "9d069de2d3964841881194a797b2ca6d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5660.4375165615538,
        "Y": 4609.2395671422464
      },
      {
        "Id": "407df3375c294af89547b58255cd44f7",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5981.0184725739637,
        "Y": 4611.1750769489163
      },
      {
        "Id": "2a147e4c5bbc464ebacd62d6c3bfe4ee",
        "Name": "240,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4782.4841186259564,
        "Y": 4943.0197124306223
      },
      {
        "Id": "a6113ddabe28440daaec77bf1bea70a3",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5076.2342234374964,
        "Y": 4834.2818826650027
      },
      {
        "Id": "e3af05613a3a4e8c9465653ea0124d12",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6201.36343846514,
        "Y": 4829.4997553342209
      },
      {
        "Id": "46526557e45b4d9b858e0624fc48434e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5662.0209403356794,
        "Y": 4833.2419913516205
      },
      {
        "Id": "88b368db61c54de1ae89e4c23b0a44e3",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5982.6018963480892,
        "Y": 4835.17750115829
      },
      {
        "Id": "38fecd2e5ffe43caa1e2a9ef52d5d0aa",
        "Name": "300,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4762.2987984112788,
        "Y": 5171.3846424377834
      },
      {
        "Id": "f084529d56494ceaa07d4721964e76b9",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5056.0489032228188,
        "Y": 5062.6468126721638
      },
      {
        "Id": "6c58349b185f4adeb48ac4c6e915220a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6181.1781182504619,
        "Y": 5057.864685341382
      },
      {
        "Id": "0f90f16e866f4aa8b4e7c937bec4381d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5641.8356201210017,
        "Y": 5061.6069213587825
      },
      {
        "Id": "c2ff548248aa4b3c8bc84b003862cfa2",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5962.4165761334116,
        "Y": 5063.5424311654524
      },
      {
        "Id": "1ba026ffa54647af9a3e58ff2b0dc348",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5096.0997492023725,
        "Y": 5248.2505644988887
      },
      {
        "Id": "cf231dfecf324a9f8a65c089cc981c73",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6221.2289642300157,
        "Y": 5243.4684371681069
      },
      {
        "Id": "2d7a3282dc984fd192277e0104cfcdf7",
        "Name": "400,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4781.2557398630279,
        "Y": 5357.6088032212092
      },
      {
        "Id": "76f7f6fe6350491fa406710faff1edce",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5681.8864661005564,
        "Y": 5247.2106731855065
      },
      {
        "Id": "ab0861eafb69421dab984b86de12df39",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6002.4674221129662,
        "Y": 5249.1461829921764
      },
      {
        "Id": "10c31fe924b24b99a07aef36fd6b1eec",
        "Name": "500,0mm²",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4784.6659364713678,
        "Y": 5550.4166024275573
      },
      {
        "Id": "a5a5d086db344e9da963479de57fd60b",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5085.0138288197095,
        "Y": 5475.400797850034
      },
      {
        "Id": "91292b8274fd48568683df122fd030e9",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6210.1430438473526,
        "Y": 5470.6186705192531
      },
      {
        "Id": "d9133d00a35a428c8eba79cd14fc814c",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5670.8005457178924,
        "Y": 5474.3609065366527
      },
      {
        "Id": "fa467b2075194120a198175aac20b56f",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5991.3815017303032,
        "Y": 5476.2964163433226
      },
      {
        "Id": "52ed74ba85864f22bccbc187aa7fbfe5",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5210.4735521263528,
        "Y": 1151.7513718787802
      },
      {
        "Id": "b43f909ee54e4aa0b2ee18489ea66ee2",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5355.0711973328807,
        "Y": 1152.2142283066344
      },
      {
        "Id": "2c4b093156014a9d84ad021f1a1ba705",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5354.719275426999,
        "Y": 1470.4357032990288
      },
      {
        "Id": "8455e815aca34f409fc90db98e58b978",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5210.1216302204693,
        "Y": 1469.9728468711787
      },
      {
        "Id": "d53b8ec1c7534dce8953c5b3a87c887e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5359.1372180187391,
        "Y": 1746.7952374910933
      },
      {
        "Id": "168b6664ee0741639ece699ad53cd3b5",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5214.5395728122094,
        "Y": 1746.3323810632432
      },
      {
        "Id": "289b20c0a8d441748dfbda0dd0127a54",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5373.5064822597278,
        "Y": 2031.4859561558305
      },
      {
        "Id": "003213457ef34e429d201b14c5be8b52",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5228.9088370531981,
        "Y": 2031.0230997279805
      },
      {
        "Id": "667679e450fd4ae48a73c8e2340b45ff",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5371.9267510629352,
        "Y": 2315.729168922056
      },
      {
        "Id": "694f88c5165141d8ab070addca5f1fc5",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5227.3291058564055,
        "Y": 2315.266312494206
      },
      {
        "Id": "46f4a016a935449e9eb3be99224c545d",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5244.4427828958678,
        "Y": 2599.2954738003136
      },
      {
        "Id": "ba511b4eba8149f1a4f49c110f595d9b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5389.0404281023975,
        "Y": 2599.7583302281637
      },
      {
        "Id": "41fc1a5b7f4d4ffd8fd25b8c0be7f983",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5395.193396525824,
        "Y": 2880.4369932945165
      },
      {
        "Id": "ff60d58ff6b548adb4731c0a343cde20",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5250.5957513192925,
        "Y": 2879.9741368666664
      },
      {
        "Id": "111acb9d5438418aa55772dda35067d4",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5260.8985089168127,
        "Y": 3154.1975437501378
      },
      {
        "Id": "66043f6559f44e1eb314eb3a21932905",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5405.4961541233424,
        "Y": 3154.6604001779879
      },
      {
        "Id": "09454d0602cd4341ac76b3d3f7a274eb",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5246.2571356028639,
        "Y": 3401.903246745821
      },
      {
        "Id": "306c59ce3fcb4c79a1743af36949dd8e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5390.8547808093936,
        "Y": 3402.366103173671
      },
      {
        "Id": "0c689a25bbd141e48d1caf234638ba37",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5251.62611796128,
        "Y": 3636.7701768831289
      },
      {
        "Id": "c4ec726888f74e5aa2fce3f54b9e372b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5396.22376316781,
        "Y": 3637.233033310979
      },
      {
        "Id": "b2a86b74b2ce4f4480704a3a44a8af0e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5256.6434902751789,
        "Y": 3896.1559828821141
      },
      {
        "Id": "f27373752dbb4f4fa60d2eae7739f793",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5404.5057557030486,
        "Y": 3893.3542190886242
      },
      {
        "Id": "1ffd015e2582424a816c2d4b63a6f18b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5411.7673528418181,
        "Y": 4154.552475351441
      },
      {
        "Id": "414a50541199454fba59f92f751861a2",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5263.9050874139475,
        "Y": 4157.3542391449309
      },
      {
        "Id": "f5efa8ea2b8c4173aa1536a43267f128",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5436.7076134114568,
        "Y": 4395.5448513280235
      },
      {
        "Id": "7abed2e917e646a58cb20dfaf6590e10",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5288.8453479835871,
        "Y": 4398.3466151215134
      },
      {
        "Id": "b78a981bd80648c9824c610a00a53bc9",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5445.8640003754645,
        "Y": 4612.1824061345988
      },
      {
        "Id": "ae695efd430b446b9d1123e541902711",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5298.0017349475938,
        "Y": 4614.9841699280887
      },
      {
        "Id": "9b6ee560f6fb496887ea15d5f33be59f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5442.3207869717244,
        "Y": 4829.8211790665955
      },
      {
        "Id": "d30f71b4713345efbde7caac94c62734",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5294.4585215438547,
        "Y": 4832.6229428600855
      },
      {
        "Id": "d6051556292a42cdbce3c8741a5b2fe0",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5418.8967127254236,
        "Y": 5054.636509793203
      },
      {
        "Id": "ddade035f50046f2b83c95fde6259607",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5271.0344472975539,
        "Y": 5057.438273586693
      },
      {
        "Id": "319f3b8b8fb143bd8952b7b8bf20a152",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5309.7704939968953,
        "Y": 5243.4057729956821
      },
      {
        "Id": "5890b0ec0fe047a796930e1796033270",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5457.632759424765,
        "Y": 5240.6040092021922
      },
      {
        "Id": "9229bf11142d4d70bd751e1fed72e663",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5451.3664491501568,
        "Y": 5469.2356292725908
      },
      {
        "Id": "a38a47ab29484ddcb0c0b3c03fb63dc6",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5303.5041837222871,
        "Y": 5472.0373930660808
      },
      {
        "Id": "aa6ef12860d242f0939ffb603a061e2f",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3152.16244588457,
        "Y": 4377.87980301326
      },
      {
        "Id": "02981f9ee4a048de84baf08464859dfc",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3142.46367146237,
        "Y": 4775.47850638161
      },
      {
        "Id": "2d2b468417e34fd4b4777907c6399142",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3150.52707759117,
        "Y": 3600.79164412026
      },
      {
        "Id": "8e7caa20323a4f23ac000b2d4e02e4c0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3149.83309095727,
        "Y": 3994.40827408739
      },
      {
        "Id": "4f4086765c6c43a098a03c8187ec1a47",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3151.83991743767,
        "Y": 3208.12585700527
      },
      {
        "Id": "16edc0e56cc3422492c984e6a5638e1c",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3137.70363275567,
        "Y": 2813.93317847333
      },
      {
        "Id": "c8d561afcf2b4c4f9f4cf8accd4fe4f0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3141.91078146887,
        "Y": 2425.58564837716
      },
      {
        "Id": "ae49e6f9176d418abdb02005950386c8",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3145.06674295127,
        "Y": 2021.72339479339
      },
      {
        "Id": "7f2a405451a949bf8b85a75a17509ba7",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3138.73845155047,
        "Y": 1627.81137926772
      },
      {
        "Id": "86f95e21967b44f6840f114ff82db6e6",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3133.16285186307,
        "Y": 1236.74097853373
      },
      {
        "Id": "49e2437559aa4642a8baf41496fc88b7",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3155.81253048967,
        "Y": 7923.09494257874
      },
      {
        "Id": "a2ab0fa4c8424438a9a540d86047c966",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3153.83684168967,
        "Y": 6364.91341479176
      },
      {
        "Id": "9205e0cba15b450ebd0d35247fc7fc9b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3154.57439447527,
        "Y": 6754.60076012685
      },
      {
        "Id": "64ea98d9aa1f4679861101fa59de8a57",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3156.00076988877,
        "Y": 7142.42367116711
      },
      {
        "Id": "3bafd02f665c4523a74aeb1063bbd106",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3154.17793903857,
        "Y": 7535.22134452443
      },
      {
        "Id": "dcb538c40bf74a0b99095dc59fce0d5e",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3154.01028421897,
        "Y": 5171.97836167689
      },
      {
        "Id": "06c6bfb1d9a74db4bf8cffbaf35648b3",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3158.45259730607,
        "Y": 5571.32153647105
      },
      {
        "Id": "a40ee3719a6d487db8adc55d5479c1ec",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3161.93626385177,
        "Y": 5967.87421912094
      },
      {
        "Id": "3e638692d2d244d092f54dfe2032a5d8",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4182.87858798917,
        "Y": 7009.7378646582
      },
      {
        "Id": "e5942f90c25a4ab29051de52f3824b42",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4170.57551263377,
        "Y": 7399.11834463025
      },
      {
        "Id": "b35e3f2b443c4fb094f44610ceed667b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4178.66127737557,
        "Y": 7759.36748426849
      },
      {
        "Id": "089366555c9e49b4ba88b5465da59103",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4187.64363037227,
        "Y": 6611.50576137768
      },
      {
        "Id": "cca032bad4f24dedb1cf78fef5e43523",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4165.66599508517,
        "Y": 6225.37816652812
      },
      {
        "Id": "1719bf191b63450c8e0ade9f7f5ba0b2",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3921.85732960287,
        "Y": 7780.60913238031
      },
      {
        "Id": "10552edc79ac48fc94c3b1a38ce28261",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3920.61919358837,
        "Y": 6612.11494992843
      },
      {
        "Id": "3f6f3ad477e24317bc2cd6b5baeafd1a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3922.04556900187,
        "Y": 6999.93786096869
      },
      {
        "Id": "58f6891a72b0497db9b75f896ed87531",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3920.22273815167,
        "Y": 7392.73553432601
      },
      {
        "Id": "3f46753ee98b464a87ab4ba91df991c0",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3927.98106296497,
        "Y": 5825.38840892252
      },
      {
        "Id": "315ef149172a4f67bfdd695d0945efbf",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3919.88164080277,
        "Y": 6222.42760459334
      },
      {
        "Id": "ee7d9d6977fe4b6b80544077750a5cd4",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4170.01780037267,
        "Y": 5838.96851232896
      },
      {
        "Id": "44a02eff908a41a7b927dce4239f4ae0",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3692.14012306307,
        "Y": 7779.54423380874
      },
      {
        "Id": "7532e3a51ead48a086e09a1d658b203c",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3381.04422209857,
        "Y": 7846.2955138734
      },
      {
        "Id": "ae3ebbc6a4e045d2a9a2d420ab035508",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3690.90198704857,
        "Y": 6611.05005135686
      },
      {
        "Id": "7ed8d2e4b2ab4290afd8d10f467e38a8",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3379.80608608407,
        "Y": 6677.80133142152
      },
      {
        "Id": "04add623e9ce4d06902b1cf4d5465a04",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3692.32836246207,
        "Y": 6998.87296239712
      },
      {
        "Id": "dc95168ee4434a5da1de0b561b5b6dc5",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3381.23246149757,
        "Y": 7065.62424246178
      },
      {
        "Id": "773e92987b6e46b28951260859dbaeef",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3690.50553161187,
        "Y": 7391.67063575444
      },
      {
        "Id": "9606857ccf314936836088ca366843e3",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3379.40963064737,
        "Y": 7458.4219158191
      },
      {
        "Id": "ea85048b72e34cb0a93c6606f4c1bd5a",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3688.49003845797,
        "Y": 4234.32909424326
      },
      {
        "Id": "b6ac3ad143064a599677eae673b91c5e",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3377.39413749347,
        "Y": 4301.08037430792
      },
      {
        "Id": "352ddd796c58464a83680931f1c53479",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3918.20724499777,
        "Y": 4235.39399281484
      },
      {
        "Id": "7ee694c30cac43828899da5760560d3e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3678.79126403567,
        "Y": 4631.92779761161
      },
      {
        "Id": "ae6c4085edf4406a80682b1c0d681375",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3367.69536307117,
        "Y": 4698.67907767627
      },
      {
        "Id": "e04d7d0a62aa488496a99f3f6a71901f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3908.50847057547,
        "Y": 4632.99269618319
      },
      {
        "Id": "11f053bc9f3848bb8a37e57862f2fb09",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3690.33787679227,
        "Y": 5028.4276529069
      },
      {
        "Id": "d2c03db2f81c4f458ab7209e38610aef",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3379.24197582777,
        "Y": 5095.17893297156
      },
      {
        "Id": "59afcf2dc749424aa94779ca8dd22f81",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3920.05508333207,
        "Y": 5029.49255147847
      },
      {
        "Id": "b6177c5aa3934d68b9a74cf7f6ffbca3",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3694.78018987937,
        "Y": 5427.77082770106
      },
      {
        "Id": "7cacaff703fa41df8ecd25e41fa7e8e2",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3383.68428891487,
        "Y": 5494.52210776572
      },
      {
        "Id": "f6d751d3096846a3b11d0bb06705fe1e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3924.49739641917,
        "Y": 5428.83572627263
      },
      {
        "Id": "21429be278b140a58896555e8be80e9d",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3698.26385642517,
        "Y": 5824.32351035095
      },
      {
        "Id": "5b815bb7bfcf4489a6e9a06afd283161",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3387.16795546067,
        "Y": 5891.07479041561
      },
      {
        "Id": "a2fb975b395a490ba42bc0db2ef04bc0",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3690.16443426297,
        "Y": 6221.36270602177
      },
      {
        "Id": "a3f04601f3dc4d9bbc1c991185e84898",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3379.06853329847,
        "Y": 6288.11398608643
      },
      {
        "Id": "09e46aa95c5145c7bbe67d453cae92d5",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3686.85467016447,
        "Y": 3457.24093535026
      },
      {
        "Id": "7f3f86f8e6fb4607b896f65978fa0d40",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3375.75876919997,
        "Y": 3523.99221541492
      },
      {
        "Id": "03bf4093e96d4c4385ff920d9ba0f581",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3916.57187670427,
        "Y": 3458.30583392184
      },
      {
        "Id": "5677462bc87d4f75a3cb776c730ae65d",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3686.16068353057,
        "Y": 3850.85756531739
      },
      {
        "Id": "c89d17c0dc1240b3a1c320e314d80cc7",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3375.06478256607,
        "Y": 3917.60884538205
      },
      {
        "Id": "a352c40f45cc4b99bc2fbb1293b17b33",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3915.87789007037,
        "Y": 3851.92246388897
      },
      {
        "Id": "ebf85da8bf5c48b3b7bba28706c5e872",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3696.76389824447,
        "Y": 3060.27695411852
      },
      {
        "Id": "143648bea6264002a34de88f44edd18e",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3388.53346002447,
        "Y": 3076.88263615445
      },
      {
        "Id": "d2c7894fdee84cf4b0172e2091738a95",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3917.88471655077,
        "Y": 3065.64004680685
      },
      {
        "Id": "cd63af312aba40a3baa0dafe90766556",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4167.37862980237,
        "Y": 3069.2142058498
      },
      {
        "Id": "370208630d2d4ab892bd28788e149191",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4160.56400234977,
        "Y": 3458.08821878382
      },
      {
        "Id": "342509900a834ae7946bd02a674bdac2",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4150.11939486527,
        "Y": 3848.52121102386
      },
      {
        "Id": "142ac7b7697246b09dafaa78ee2e2c16",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4147.20694940717,
        "Y": 4236.61501339629
      },
      {
        "Id": "4e1461f46320466abd3a15706ed63ff6",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4155.34457108157,
        "Y": 4608.4979909202
      },
      {
        "Id": "499f3473cd9f4431aae12a3d61f87d89",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4163.76665400147,
        "Y": 5040.03102662749
      },
      {
        "Id": "5ec03d76532746a99e9597d5f243120e",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4178.63499491597,
        "Y": 5434.25406635526
      },
      {
        "Id": "6c3ecdd4fd2b4e8b9da2c496def2e543",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3362.93532436447,
        "Y": 2737.13374976799
      },
      {
        "Id": "924490aa8eae480495331aca3350a21b",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3674.03122532897,
        "Y": 2670.38246970333
      },
      {
        "Id": "33228b55256c41fb86ca2b8a260600be",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3903.74843186877,
        "Y": 2671.44736827491
      },
      {
        "Id": "64903abd8daf4bf9b01b2f2f2a84a04e",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2469.45565523767,
        "Y": 2751.69836025956
      },
      {
        "Id": "9c5fab5992d04f1d9af8bdb9d8e6a23b",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4154.83766169187,
        "Y": 2694.27132155203
      },
      {
        "Id": "9937c236bea543a5a597447a99da1ae3",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3367.14247307767,
        "Y": 2348.78621967182
      },
      {
        "Id": "30690338bcbf4b5f947c901fdff57e22",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3678.23837404217,
        "Y": 2282.03493960716
      },
      {
        "Id": "392a5744808d4599b83c60f3ef8bacbf",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3907.95558058197,
        "Y": 2283.09983817874
      },
      {
        "Id": "b246e88a8ace45e29bffc04d4d82f153",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1636.22013346157,
        "Y": 2195.8682314309
      },
      {
        "Id": "9c921839f394489cb07109a7d31a5414",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1399.66767839827,
        "Y": 2231.7717800097
      },
      {
        "Id": "794a717a535446aba3a05add73debd9a",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3370.29843456007,
        "Y": 1955.48250436234
      },
      {
        "Id": "9b81cd9e46334684b380035a0b2b16e7",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3681.39433552457,
        "Y": 1888.73122429768
      },
      {
        "Id": "1eef73fc7bfa434da9aeb2cc4f1f3877",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3911.11154206437,
        "Y": 1889.79612286926
      },
      {
        "Id": "5281fba102ca4b20bda7b28504419d19",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1392.96534396427,
        "Y": 1899.92748787822
      },
      {
        "Id": "eeb834e377c2449fbc25ae0c44c4eed8",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1624.42084049517,
        "Y": 1788.69330822586
      },
      {
        "Id": "2d0ce12d88a74369bd9b64b21c63ff22",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 770.783161123469,
        "Y": 1742.26025925771
      },
      {
        "Id": "2bb09eef1d9c4507b99f4bc1efd7f132",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1311.22518240907,
        "Y": 3472.11223886083
      },
      {
        "Id": "666770f2e8d744119d749dfaaa459f4b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1074.67272734577,
        "Y": 3508.01578743963
      },
      {
        "Id": "82be08e69f154a88806b60c60a3a21e5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1067.97039291177,
        "Y": 3176.17149530815
      },
      {
        "Id": "5e8fa3b5726a4822b198db6ee4eccf1d",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1304.17447033137,
        "Y": 3121.92028632067
      },
      {
        "Id": "53a45f5ab10c4b9180105efd9b3a6a79",
        "Name": "Schedule.GetDataColumns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1300.52237327767,
        "Y": 2784.63372781356
      },
      {
        "Id": "eca71a4f27bb4f17bfe2079ddc838781",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1075.43810071637,
        "Y": 2976.14532948228
      },
      {
        "Id": "23b8b356a5fb499ea2659d09de43ecdd",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1728.94686338657,
        "Y": 2828.3921422578
      },
      {
        "Id": "8b562e0b4fc54696ade31071e11f6224",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1602.27528877077,
        "Y": 2897.63957137539
      },
      {
        "Id": "888145cb0af345ac89d9998f6e6d5d2c",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2473.39770144944,
        "Y": 2336.86236936917
      },
      {
        "Id": "bc0d6f9f637c4ca99c57f52bf39e3d7d",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4148.33433357847,
        "Y": 2285.16431691152
      },
      {
        "Id": "79e408b02429421dba0a2275cc2638f7",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4139.86540680797,
        "Y": 1889.40660700678
      },
      {
        "Id": "4f4065bcdbc24f74b720e2c02f538dc8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3675.06604412377,
        "Y": 1484.26067049772
      },
      {
        "Id": "a0cc95471b164a68a928064ffe2521d4",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3363.97014315927,
        "Y": 1551.01195056238
      },
      {
        "Id": "a42d2160473e4c43a833c728538f7a33",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3904.78325066357,
        "Y": 1485.3255690693
      },
      {
        "Id": "32591eb12d09411fbbf1a9cc612438d5",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4158.41201575077,
        "Y": 1501.55441812
      },
      {
        "Id": "2b1264ca383f49a8813e18aae3e69602",
        "Name": "Views",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 525.922997666868,
        "Y": 3062.58371012716
      },
      {
        "Id": "6d7ca80137fc479aa8a4caed6296489e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3689.32392029457,
        "Y": 1095.17361734955
      },
      {
        "Id": "8de2a484086a4b8d876f0ec11b48706d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3378.22801933007,
        "Y": 1160.33749666669
      },
      {
        "Id": "44222ff9af984c1a914763be063958c0",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3919.04112683437,
        "Y": 1096.23851592113
      },
      {
        "Id": "f577a28958154c8cb9e72476d462410f",
        "Name": "Math.Sum",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4177.20879542817,
        "Y": 1136.26557584178
      },
      {
        "Id": "d33d44aa237e4a2993d987169508abaf",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9222.01413618424,
        "Y": -177.571124145278
      },
      {
        "Id": "68aa7764812644d8bded67c4c5b3e982",
        "Name": ">",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8965.97760334454,
        "Y": -281.142547789866
      },
      {
        "Id": "aea8042acb6249b99f5aca736649ccf4",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8753.85010883574,
        "Y": 72.6923326969716
      },
      {
        "Id": "717bc759cc9743db8cb6d36a9c2d7e9e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8558.53160404934,
        "Y": -103.39251064233
      },
      {
        "Id": "1d76159d34fe4bcf8cb8d3833651d8e0",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8848.36252398634,
        "Y": -231.760433050744
      },
      {
        "Id": "c88ae387e3f0420c9164793d16fd70f8",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9934.28458328274,
        "Y": -212.212170757284
      },
      {
        "Id": "03642a0538184edb98225f2a600a62b5",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9504.59785264974,
        "Y": -205.052660668533
      },
      {
        "Id": "f797ddab6c9e45f48c5f6a4a15b6d952",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8269.00443071804,
        "Y": -244.558758380461
      },
      {
        "Id": "01f97593c9ef494685b84e836f3e6d40",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7551.6315755807718,
        "Y": 485.91356842453285
      },
      {
        "Id": "e909195620a74049be16c0d86b1ab742",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7844.4703062722019,
        "Y": 480.30022389116891
      },
      {
        "Id": "5c5c6dbb743a447aa22e1a9d5cba89e3",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8151.6950263756626,
        "Y": 682.141783905044
      },
      {
        "Id": "0acc4c2e6ef14d608fcc7a3e6e0d30f0",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8464.3640084244616,
        "Y": 683.04854063749065
      },
      {
        "Id": "142b9cde8e1648e48dc369656a5859f2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8129.5229865931615,
        "Y": 839.43092640013322
      },
      {
        "Id": "8961d4fa827b4d9789eabbff1e245042",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8745.3648027957315,
        "Y": 504.75320588683678
      },
      {
        "Id": "6c1ecd28cb2445f8b6557c01a41d5de1",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9134.8096530363309,
        "Y": 564.14493653407226
      },
      {
        "Id": "7a68df7a039643f793b771c974bb7150",
        "Name": "number_roundUpTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7485.8546628346367,
        "Y": 2183.3310963660842
      },
      {
        "Id": "7a57176cc00d4d9eac76b4c693e32bc3",
        "Name": "String.FromList",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9743.1562149290748,
        "Y": -186.72722323064295
      },
      {
        "Id": "0100d7faa2734d19a50b0862b96d31ce",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2364.6600854514413,
        "Y": -58.592904341156128
      },
      {
        "Id": "b4e6f28c70a2454aa7f24227773a21c2",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2253.5491268907986,
        "Y": 330.04280836412977
      },
      {
        "Id": "d5dab189acb8461493310c19d332665a",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2346.0510049541222,
        "Y": 739.33330961986144
      },
      {
        "Id": "0199736090ac4b68ab948e3e0923b538",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3361.2982940295815,
        "Y": 1358.3043297270267
      },
      {
        "Id": "5eabb59222c243f4b5aea5df20812229",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3353.3021394678826,
        "Y": 1750.1159032502319
      },
      {
        "Id": "d7adaea0a148442caa986ff5a3ee1668",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3354.634831894833,
        "Y": 2148.5909389081849
      },
      {
        "Id": "fa55411e977a4fcdaac9c83670ef0386",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3361.2982940295819,
        "Y": 2541.73520485834
      },
      {
        "Id": "6ca924a7e6ff4214a47b8f048d729880",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3355.9675243217821,
        "Y": 2920.2198541120474
      },
      {
        "Id": "2993ddccd571460b9ac57790f53e9e8b",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3380.8534355256024,
        "Y": 3277.0905916292895
      },
      {
        "Id": "92280a9983d64eeb8e00181bf1461cd5",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3371.6690005399064,
        "Y": 3727.1279059283406
      },
      {
        "Id": "70f0c25d8d9442b9a2f7799066416ecb",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3363.632619927424,
        "Y": 4114.02222970074
      },
      {
        "Id": "4931421454ee492aadef02bc113c6e1f",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3362.4845655542117,
        "Y": 4487.1399009945972
      },
      {
        "Id": "3cfbb954326b4fb3bad3233e41ef6328",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3365.8734261058094,
        "Y": 4877.1694292984839
      },
      {
        "Id": "c14f0fc96c784a119e9d0b6c4da8bfda",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3367.8545713103949,
        "Y": 5279.3419058295067
      },
      {
        "Id": "2e194aaad5cd4aad86c8c7ba786a5717",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3375.7791521287404,
        "Y": 5678.5426645536509
      },
      {
        "Id": "5be44d6c4da9435a9ceae8351bcd6b2c",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3374.7885795264469,
        "Y": 6083.6868588915531
      },
      {
        "Id": "1daa2b65fe9e41dfa0f004b29c486137",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3376.7697247310334,
        "Y": 6481.8970450134038
      },
      {
        "Id": "960087f05b194db6a9e29bff912f26ba",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3373.7980069241544,
        "Y": 6883.078948942134
      },
      {
        "Id": "6b9cb3c2fc5a40cd9316aba45a148627",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3376.769724731033,
        "Y": 7261.4776830181208
      },
      {
        "Id": "aeeb9f46fa5b4c1aabf2052c18a34b5a",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3377.7602973333273,
        "Y": 7649.78214311704
      },
      {
        "Id": "6de375783d8a4c1a9a3b8601a9c468f1",
        "Name": "Sring.ToNumber - Bimacon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3379.74144253791,
        "Y": 8136.15329084298
      },
      {
        "Id": "67b208dfa628489ba5fbba8eb846ed7f",
        "Name": "+",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1982.965589709291,
        "Y": 3022.543630248967
      },
      {
        "Id": "6d062c6478eb4b5dbed75c157a7dcc8a",
        "Name": "ReplaceByCondition",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2139.2210797312491,
        "Y": -70.020230382913752
      },
      {
        "Id": "1e657687e09a4887a748346d4685d956",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1882.7255765348923,
        "Y": -80.089650479757012
      },
      {
        "Id": "ad052bdd1ad54bc7ba11bf7ebb316189",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1765.3815289505258,
        "Y": -161.22789041780447
      },
      {
        "Id": "da2a4d6b7ea44f6b9806ed7e4317896b",
        "Name": "ReplaceByCondition",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1964.7942875636095,
        "Y": 363.27980981220367
      },
      {
        "Id": "9b9da2fb9956450e908a6afd1dbb82a2",
        "Name": "ReplaceByCondition",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2152.4243940950973,
        "Y": 743.26301721076663
      },
      {
        "Id": "789c5d037b5a46a2bfcd38a891c52a81",
        "Name": "==",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1940.7233336643508,
        "Y": 886.52162603942486
      },
      {
        "Id": "5e394dd2f26b48caa598b3978b769578",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1781.407377883035,
        "Y": 843.38020152692752
      }
    ],
    "Annotations": [
      {
        "Id": "2b20a1d27be44f6e8f2cecb66bc3cffc",
        "Title": "<Clique aqui para editar o título do grupo>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aa6ef12860d242f0939ffb603a061e2f",
          "02981f9ee4a048de84baf08464859dfc",
          "2d2b468417e34fd4b4777907c6399142",
          "8e7caa20323a4f23ac000b2d4e02e4c0",
          "4f4086765c6c43a098a03c8187ec1a47",
          "16edc0e56cc3422492c984e6a5638e1c",
          "c8d561afcf2b4c4f9f4cf8accd4fe4f0",
          "ae49e6f9176d418abdb02005950386c8",
          "7f2a405451a949bf8b85a75a17509ba7",
          "86f95e21967b44f6840f114ff82db6e6",
          "49e2437559aa4642a8baf41496fc88b7",
          "a2ab0fa4c8424438a9a540d86047c966",
          "9205e0cba15b450ebd0d35247fc7fc9b",
          "64ea98d9aa1f4679861101fa59de8a57",
          "3bafd02f665c4523a74aeb1063bbd106",
          "dcb538c40bf74a0b99095dc59fce0d5e",
          "06c6bfb1d9a74db4bf8cffbaf35648b3",
          "a40ee3719a6d487db8adc55d5479c1ec",
          "44a02eff908a41a7b927dce4239f4ae0",
          "7532e3a51ead48a086e09a1d658b203c",
          "1719bf191b63450c8e0ade9f7f5ba0b2",
          "10552edc79ac48fc94c3b1a38ce28261",
          "3f6f3ad477e24317bc2cd6b5baeafd1a",
          "58f6891a72b0497db9b75f896ed87531",
          "3e638692d2d244d092f54dfe2032a5d8",
          "e5942f90c25a4ab29051de52f3824b42",
          "b35e3f2b443c4fb094f44610ceed667b",
          "ae3ebbc6a4e045d2a9a2d420ab035508",
          "7ed8d2e4b2ab4290afd8d10f467e38a8",
          "04add623e9ce4d06902b1cf4d5465a04",
          "dc95168ee4434a5da1de0b561b5b6dc5",
          "773e92987b6e46b28951260859dbaeef",
          "9606857ccf314936836088ca366843e3",
          "ea85048b72e34cb0a93c6606f4c1bd5a",
          "b6ac3ad143064a599677eae673b91c5e",
          "352ddd796c58464a83680931f1c53479",
          "7ee694c30cac43828899da5760560d3e",
          "ae6c4085edf4406a80682b1c0d681375",
          "e04d7d0a62aa488496a99f3f6a71901f",
          "11f053bc9f3848bb8a37e57862f2fb09",
          "d2c03db2f81c4f458ab7209e38610aef",
          "59afcf2dc749424aa94779ca8dd22f81",
          "b6177c5aa3934d68b9a74cf7f6ffbca3",
          "7cacaff703fa41df8ecd25e41fa7e8e2",
          "f6d751d3096846a3b11d0bb06705fe1e",
          "21429be278b140a58896555e8be80e9d",
          "5b815bb7bfcf4489a6e9a06afd283161",
          "3f46753ee98b464a87ab4ba91df991c0",
          "a2fb975b395a490ba42bc0db2ef04bc0",
          "a3f04601f3dc4d9bbc1c991185e84898",
          "315ef149172a4f67bfdd695d0945efbf",
          "09e46aa95c5145c7bbe67d453cae92d5",
          "7f3f86f8e6fb4607b896f65978fa0d40",
          "03bf4093e96d4c4385ff920d9ba0f581",
          "5677462bc87d4f75a3cb776c730ae65d",
          "c89d17c0dc1240b3a1c320e314d80cc7",
          "a352c40f45cc4b99bc2fbb1293b17b33",
          "ebf85da8bf5c48b3b7bba28706c5e872",
          "143648bea6264002a34de88f44edd18e",
          "d2c7894fdee84cf4b0172e2091738a95",
          "6c3ecdd4fd2b4e8b9da2c496def2e543",
          "924490aa8eae480495331aca3350a21b",
          "33228b55256c41fb86ca2b8a260600be",
          "9937c236bea543a5a597447a99da1ae3",
          "30690338bcbf4b5f947c901fdff57e22",
          "392a5744808d4599b83c60f3ef8bacbf",
          "b246e88a8ace45e29bffc04d4d82f153",
          "9c921839f394489cb07109a7d31a5414",
          "794a717a535446aba3a05add73debd9a",
          "9b81cd9e46334684b380035a0b2b16e7",
          "1eef73fc7bfa434da9aeb2cc4f1f3877",
          "5281fba102ca4b20bda7b28504419d19",
          "eeb834e377c2449fbc25ae0c44c4eed8",
          "2d0ce12d88a74369bd9b64b21c63ff22",
          "2bb09eef1d9c4507b99f4bc1efd7f132",
          "666770f2e8d744119d749dfaaa459f4b",
          "82be08e69f154a88806b60c60a3a21e5",
          "5e8fa3b5726a4822b198db6ee4eccf1d",
          "2b1264ca383f49a8813e18aae3e69602",
          "53a45f5ab10c4b9180105efd9b3a6a79",
          "eca71a4f27bb4f17bfe2079ddc838781",
          "23b8b356a5fb499ea2659d09de43ecdd",
          "8b562e0b4fc54696ade31071e11f6224",
          "888145cb0af345ac89d9998f6e6d5d2c",
          "64903abd8daf4bf9b01b2f2f2a84a04e",
          "cd63af312aba40a3baa0dafe90766556",
          "9c5fab5992d04f1d9af8bdb9d8e6a23b",
          "bc0d6f9f637c4ca99c57f52bf39e3d7d",
          "79e408b02429421dba0a2275cc2638f7",
          "370208630d2d4ab892bd28788e149191",
          "342509900a834ae7946bd02a674bdac2",
          "142ac7b7697246b09dafaa78ee2e2c16",
          "4e1461f46320466abd3a15706ed63ff6",
          "499f3473cd9f4431aae12a3d61f87d89",
          "5ec03d76532746a99e9597d5f243120e",
          "ee7d9d6977fe4b6b80544077750a5cd4",
          "cca032bad4f24dedb1cf78fef5e43523",
          "089366555c9e49b4ba88b5465da59103",
          "4f4065bcdbc24f74b720e2c02f538dc8",
          "a0cc95471b164a68a928064ffe2521d4",
          "a42d2160473e4c43a833c728538f7a33",
          "6d7ca80137fc479aa8a4caed6296489e",
          "8de2a484086a4b8d876f0ec11b48706d",
          "44222ff9af984c1a914763be063958c0",
          "32591eb12d09411fbbf1a9cc612438d5",
          "f577a28958154c8cb9e72476d462410f",
          "6de375783d8a4c1a9a3b8601a9c468f1"
        ],
        "HasNestedGroups": false,
        "Left": 515.922997666868,
        "Top": 1022.1736173495501,
        "Width": 3890.7206327054023,
        "Height": 7245.97967349343,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1095.17361734955,
        "InitialHeight": 7185.97967349343,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "edc188480d5d451fbcf88a7e26d5c84c",
        "Title": "Mensagem",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d33d44aa237e4a2993d987169508abaf",
          "68aa7764812644d8bded67c4c5b3e982",
          "aea8042acb6249b99f5aca736649ccf4",
          "717bc759cc9743db8cb6d36a9c2d7e9e",
          "1d76159d34fe4bcf8cb8d3833651d8e0",
          "03642a0538184edb98225f2a600a62b5",
          "c88ae387e3f0420c9164793d16fd70f8",
          "f797ddab6c9e45f48c5f6a4a15b6d952",
          "7a57176cc00d4d9eac76b4c693e32bc3"
        ],
        "HasNestedGroups": false,
        "Left": 8259.00443071804,
        "Top": -354.142547789866,
        "Width": 1859.280152564701,
        "Height": 558.83488048683762,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -281.142547789866,
        "InitialHeight": 498.83488048683762,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "255a248f1e73422cbc24c58b86f96296",
        "Title": "Modelo genérico",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3f2930e639524104884d2098b4448567",
          "7fddc8fb8c954860a2df0d7a22c43634",
          "33a7bc11b2a444e3802c7c5d2e4fc52b",
          "7bf2b5eafbad4faeabbfc7584be7ba14",
          "44340526a5b344abb9b3ca86918e837f",
          "c1efda31f3e84611a77d59b2d1aeca27"
        ],
        "HasNestedGroups": false,
        "Left": 4345.5489038008127,
        "Top": -314.25500569886606,
        "Width": 1448.7332272149561,
        "Height": 575.90619506471887,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -241.25500569886606,
        "InitialHeight": 515.90619506471887,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "565abfd80fdc4ce08fdee77bd4a05f60",
        "Title": "Modelo genérico",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "01f97593c9ef494685b84e836f3e6d40",
          "e909195620a74049be16c0d86b1ab742",
          "5c5c6dbb743a447aa22e1a9d5cba89e3",
          "0acc4c2e6ef14d608fcc7a3e6e0d30f0",
          "142b9cde8e1648e48dc369656a5859f2",
          "8961d4fa827b4d9789eabbff1e245042"
        ],
        "HasNestedGroups": false,
        "Left": 7541.6315755807718,
        "Top": 407.30022389116891,
        "Width": 1448.7332272149597,
        "Height": 564.1307025089643,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 480.30022389116891,
        "InitialHeight": 504.1307025089643,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -331.68657052525327,
    "Y": 208.78445800242733,
    "Zoom": 0.55489144693086812
  }
}