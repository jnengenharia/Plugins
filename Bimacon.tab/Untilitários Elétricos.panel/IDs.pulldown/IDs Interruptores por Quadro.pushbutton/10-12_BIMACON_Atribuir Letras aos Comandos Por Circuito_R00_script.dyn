{
  "Uuid": "e2c4035c-69be-4a7c-b6ba-9ce9d26f9fd4",
  "IsCustomNode": false,
  "Description": "Inseri Identificadores nas conexões ",
  "Name": "10-12_BIMACON_Atribuir Letras aos Comandos Por Circuito_R00_script",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e485d345-342c-403b-af78-a6387e65711b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "318eb77f29cc4443bc146c8cbc8802b4",
      "Inputs": [
        {
          "Id": "0474d130b8ac4cbc92527f0ad395478a",
          "Name": "Electrical_Circuits",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e0023ce425443f78a6261de2d0a019c",
          "Name": "Panels",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0bcee97e8864868a43e61bb6a358e6b",
          "Name": "Elements",
          "Description": "valor de retorno",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the Panels and Elements belonging to the given electrical circuits"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"ID da chave\";",
      "Id": "c0996a9a30c94d31870007239eb79e7a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c61c65d9dd27472dbe274996529485a8",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"ID do comando\";",
      "Id": "0c0a573666604c6bbc4a82fa750c1fac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f75f03714b5f4ec8bce72a9199e2094d",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "07f568c982ff41839d79dfebb8d1a60e",
      "Inputs": [
        {
          "Id": "94cdd6749142458a979cd31673ceab9d",
          "Name": "test",
          "Description": "Testar bloco",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd12356a5d1d47818e7ebf76721bea7c",
          "Name": "true",
          "Description": "Bloco verdadeiro",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0d3db7852284fd7adea21febc1577ba",
          "Name": "false",
          "Description": "Bloco falso",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15ce662cd8ba4335af1c8af072610e62",
          "Name": "result",
          "Description": "resultado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Declaração condicional"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "5ed60b4396aa41fb9e1f8b83ec318403",
      "Inputs": [
        {
          "Id": "4ec8a5b8c6274be1861d2f4476401024",
          "Name": "x",
          "Description": "valor de x.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcc44f31a894482bb45de9aff38f56f3",
          "Name": "y",
          "Description": "valor de y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8437a4021664ed8aef1e0fcf0b3ca90",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Igualar x a y?\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "15e533245f0f4406928bd1dcc3e70981",
      "Inputs": [
        {
          "Id": "12003028faf94f3a9d27e43ebafd181a",
          "Name": "str",
          "Description": "Sequência de caracteres para dividir.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbff0d29dc9a4736a69603521632e432",
          "Name": "separator0",
          "Description": "Sequências de caracteres que, se presentes, determinam o início e o final da divisão.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0037e3411dc64213b0450ffaae65447b",
          "Name": "strings",
          "Description": "Lista de sequências de caracteres a partir da sequência de caracteres de entrada.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divide uma única sequência de caracteres em uma lista de sequência de caracteres, com as divisões determinadas pelo separador de sequências de caracteres fornecido.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "670c231f36564fb89e806b65d9ca89ee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3c296108f6d4570a958f04f761dd148",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "3ecb44c18bc14025a741aea314d9de55",
      "Inputs": [
        {
          "Id": "c18e4a8f927045698aad73a452b3e76f",
          "Name": "str",
          "Description": "Sequência de caracteres a ser convertida.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ede345827d564d7eb2c3081b8ceffb7c",
          "Name": "number",
          "Description": "Número inteiro ou número de tipo duplo.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converte uma sequência de caracteres em um inteiro ou um duplo.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Importa as bibliotecas necessárias do Revit\r\nimport clr\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Obtém o documento ativo\r\ndoc = DocumentManager.Instance.CurrentUIApplication.Application\r\n\r\n# Obtém o número da versão do Revit\r\nrevit_version = doc.VersionNumber\r\n\r\n# Retorna o número da versão do Revit\r\nOUT = \"A versão do Revit é: {}\".format(revit_version)\r\n",
      "VariableInputPorts": true,
      "Id": "7c3e7f3a865e411889d4cf5d2142b740",
      "Inputs": [
        {
          "Id": "e73617df3f6640988369f3d9ed04980e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed120cd0c74c43e79e04b14d25a98b97",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script IronPython incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9e2b43b9f51b406cad5e222c9c74de32",
      "Inputs": [
        {
          "Id": "195a205252b8462fbf2e6e0bec082ba2",
          "Name": "list",
          "Description": "Lista da qual obter o último item.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4245324a3c549dab03e43e6a6bbfbaa",
          "Name": "last",
          "Description": "O último item na lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Recupera o último item em uma lista.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2021;",
      "Id": "0b25397dcccc4fc08e9048f08ee93334",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52672c3e978d4dbb825b090ce61551b3",
          "Name": "",
          "Description": "Valor da expressão na linha 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite que o código DesignScript seja criado diretamente"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "60069e101f1c472294432009d0badb64",
      "Inputs": [
        {
          "Id": "d5cb55a70bd048b18eb717bfe5572803",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e41868c16e734497b443029ecbd1b596",
          "Name": "parameterName",
          "Description": "O nome do parâmetro cujos valores você deseja obter.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3c6382487e04acf87e0a15e7d5b14f2",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obter o valor de um os parâmetros do elemento.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "8d4f1292e19546ae8bd571ceff61da54",
      "Inputs": [
        {
          "Id": "18a012d758fb459ab842c7c51c70d697",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b2f0f715b864d28a963b30539553733",
          "Name": "parameterName",
          "Description": "O nome do parâmetro a ser definido.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "936a01557f284ff6a2312b2e8379d3e5",
          "Name": "value",
          "Description": "O valor.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1d5ff3583ac4e38b13ad52d1bd707e9",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Defina um dos parâmetros do elemento.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "b39a7fcd4ea642b48d5de17e134e983f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d6156d61b5b14ce0a49b4012a28cef68",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria um número."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "ac5c442db7d94e738f3ef2b7eedf5baf",
      "Inputs": [
        {
          "Id": "cc5fb057c48b4d788ac551e7d5512574",
          "Name": "list",
          "Description": "Lista da qual para obter a contagem de itens.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1bcfe82160bd48cd9cb5d335f76fd389",
          "Name": "count",
          "Description": "Comprimento da lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retorna o número de itens armazenados na determinada lista.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8af597bb17cf4c7bbb6aec739cc2d63c",
      "Inputs": [
        {
          "Id": "02827f3c29974aefbc80c291528a7996",
          "Name": "start",
          "Description": "Número ou letra com o qual iniciar a sequência\r\nValor padrão: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bba8372179f4758a5d4c205f4d6c98d",
          "Name": "end",
          "Description": "Número ou letra com o qual finalizar a sequência\r\nValor padrão: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4026e817ffe4509967d1f6d951ed177",
          "Name": "step",
          "Description": "Espaço entre números ou letras\r\nValor padrão: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf3ab15e582c42b3ab84d801c450d65a",
          "Name": "seq",
          "Description": "Nova sequência",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cria uma sequência de números ou letras na faixa especificada."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Importa as bibliotecas do Revit/Dynamo\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Entrada do Dynamo\r\nentrada = IN[0]  # Pode ser uma lista de índices numéricos ou uma lista de listas\r\n\r\n# Função para converter um índice numérico em uma sequência alfabética tipo Excel\r\ndef numero_para_letras(num):\r\n    letras = \"\"\r\n    while num >= 0:\r\n        letras = chr(97 + (num % 26)) + letras\r\n        num = (num // 26) - 1\r\n    return letras\r\n\r\n# Verifica o tipo da entrada e processa de acordo\r\nif isinstance(entrada, list):\r\n    alfabeto_extendido = []\r\n    for item in entrada:\r\n        if isinstance(item, list):\r\n            # Se o item for uma sublista, processa cada número dentro dela\r\n            sublista_alfabetica = [numero_para_letras(i) for i in item]\r\n            alfabeto_extendido.append(sublista_alfabetica)\r\n        elif isinstance(item, int):\r\n            # Se o item for um inteiro, processa diretamente\r\n            alfabeto_extendido.append(numero_para_letras(item))\r\n        else:\r\n            # Lida com outros tipos de entrada, se necessário\r\n            alfabeto_extendido.append([]) # Ou outra forma de tratamento\r\nelse:\r\n    alfabeto_extendido = []  # Retorna lista vazia se a entrada não for uma lista\r\n\r\n# Saída para o Dynamo\r\nOUT = alfabeto_extendido",
      "VariableInputPorts": true,
      "Id": "8bab5bc5e6c946538e181cbab0788e24",
      "Inputs": [
        {
          "Id": "68d4e58e8baf48cb965ab238af1b137e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a7e92cc359349c9822349f3895bb58e",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script IronPython incorporado."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "676c417c78704411860d8d47dcb08fe4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27080b8f26d04a168037afd1ea4ac92c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Cria um número."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3eaca9e3466b4a6c8ed3d272ddf762c0",
      "Inputs": [
        {
          "Id": "5c3dc029966c43afb2d965459ec604c7",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0e9a3bfcbb424b6682e8871860632430",
          "Name": "amt",
          "Description": "Camadas de aninhamento para remover.\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "952ae8d2ad984416b9d94f85d1c3b37f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "4721faf3f430424ab6dac814f6349598",
      "Inputs": [
        {
          "Id": "f2a69f9bbc8447a289a74f49a9565844",
          "Name": "Category",
          "Description": "Categoria",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b64b32d39ad542a8b4477fe38dacdbaa",
          "Name": "Elements",
          "Description": "Um tipo de elemento.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obter todos os elementos da categoria especificada no modelo."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 157,
      "SelectedString": "OST_ElectricalEquipment",
      "NodeType": "ExtensionNode",
      "Id": "9a597c13022d45ecb5a2efa0c764c6c4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5cba435a9cde472099397577b2e42bd2",
          "Name": "Category",
          "Description": "A categoria selecionada.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas as categorias incorporadas."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# Função auxiliar para desempacotar elementos\r\ndef Unwrap(item):\r\n    return UnwrapElement(item)\r\n\r\n# Função para processar listas aninhadas\r\ndef ProcessList(_func, _list):\r\n    return map(lambda x: ProcessList(_func, x) if isinstance(x, list) else _func(x), _list)\r\n\r\n# Converter entrada\r\nequipamentos = ProcessList(Unwrap, IN[0]) if isinstance(IN[0], list) else [Unwrap(IN[0])]\r\n\r\n# Função para obter circuitos do equipamento\r\ndef GetCircuitos(equipamento):\r\n    if equipamento.MEPModel is not None:\r\n        sistemas_set = equipamento.MEPModel.AssignedElectricalSystems\r\n        if sistemas_set:\r\n            sistemas = list(sistemas_set)  # Correção aqui!\r\n            if len(sistemas) > 0:\r\n                circuitos = [s.ToDSType(True) for s in sistemas]\r\n                return [equipamento.ToDSType(True), circuitos]\r\n    return None\r\n\r\n# Aplicar função e filtrar nulos\r\nresultados = [GetCircuitos(eq) for eq in equipamentos]\r\nresultados_filtrados = [r for r in resultados if r is not None]\r\n\r\nOUT = resultados_filtrados\r\n",
      "VariableInputPorts": true,
      "Id": "5e5ba8f8e7df422dae96574ace9184c1",
      "Inputs": [
        {
          "Id": "57bf42daa2fe4e79baed1e3ec6c57759",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76058c87b8a34bb1aca1b15f3b9be7b4",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script IronPython incorporado."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d5765b2cec1e492ca2d276c016abddc6",
      "Inputs": [
        {
          "Id": "47f7361f9e8549b19293d755ebc532a2",
          "Name": "list",
          "Description": "Lista para aplainar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0187b1a33a1d4a5e9d2c27690adce1a2",
          "Name": "amt",
          "Description": "Camadas de aninhamento para remover.\n\nint\nValor padrão : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c90f140204c048cba35c6014a644a6cf",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplaina uma lista aninhada de listas por um determinado montante.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "a313d9ebc79b4894b8bad60973a35f3c",
      "Inputs": [
        {
          "Id": "98bbcbe9bd3f49c08aa53f70524d5a9f",
          "Name": "list",
          "Description": "Lista da qual para obter o resto.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8eeb70cb8d94e058f62e1f2a378a7e5",
          "Name": "rest",
          "Description": "Restante da lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Remove o primeiro item da determinada lista.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# Função auxiliar para \"desempacotar\" elementos do Dynamo\r\ndef Unwrap(item):\r\n    return UnwrapElement(item)\r\n\r\n# Verifica se o elemento possui o parâmetro\r\ndef TemParametro(elem, nome_parametro):\r\n    if elem is None:\r\n        return False\r\n    try:\r\n        return elem.LookupParameter(nome_parametro) is not None\r\n    except:\r\n        return False\r\n\r\n# Verifica se o elemento é da categoria \"Dispositivos de iluminação\"\r\ndef EhDispositivoIluminacao(elem):\r\n    return elem.Category.Id.IntegerValue == int(BuiltInCategory.OST_LightingDevices)\r\n\r\n# === Entrada segura ===\r\nentrada = IN[0]\r\nnome_parametro = IN[1] if len(IN) > 1 else None  # Evita erro de índice\r\n\r\nif not nome_parametro:\r\n    OUT = None\r\nelse:\r\n    # Garante que seja uma lista de listas\r\n    if not isinstance(entrada, list):\r\n        entrada = [[entrada]]\r\n    elif not all(isinstance(sub, list) for sub in entrada):\r\n        entrada = [entrada]\r\n\r\n    resultado_final = []\r\n\r\n    for sublista in entrada:\r\n        subresultado = []\r\n        for item in sublista:\r\n            elem = Unwrap(item)\r\n            if elem and TemParametro(elem, nome_parametro) and EhDispositivoIluminacao(elem):\r\n                subresultado.append(item)\r\n        resultado_final.append(subresultado)\r\n\r\n    OUT = resultado_final\r\n",
      "VariableInputPorts": true,
      "Id": "9c205f7a024d413b8501d4334edbc5cf",
      "Inputs": [
        {
          "Id": "fdb6cb9d7b30499cac8ffd1b0403b012",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "751c3bbfeb6940ddbb247782d73fd84e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43905904b20f4fa6a5dfbeb2e07b11e0",
          "Name": "OUT",
          "Description": "Resultado do script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Executa um script IronPython incorporado."
    }
  ],
  "Connectors": [
    {
      "Start": "c0bcee97e8864868a43e61bb6a358e6b",
      "End": "5c3dc029966c43afb2d965459ec604c7",
      "Id": "ae3dfcacac20451f81669f61c3519e89"
    },
    {
      "Start": "c61c65d9dd27472dbe274996529485a8",
      "End": "cd12356a5d1d47818e7ebf76721bea7c",
      "Id": "5a466096f73c4140b005193f900c5ed5"
    },
    {
      "Start": "f75f03714b5f4ec8bce72a9199e2094d",
      "End": "a0d3db7852284fd7adea21febc1577ba",
      "Id": "f5d894129159492dad1e93cf04354344"
    },
    {
      "Start": "15ce662cd8ba4335af1c8af072610e62",
      "End": "e41868c16e734497b443029ecbd1b596",
      "Id": "a335ccaa5873410e8e4ae98f273032e4"
    },
    {
      "Start": "15ce662cd8ba4335af1c8af072610e62",
      "End": "7b2f0f715b864d28a963b30539553733",
      "Id": "b58a981d501240fa856b472b732ca1be"
    },
    {
      "Start": "15ce662cd8ba4335af1c8af072610e62",
      "End": "751c3bbfeb6940ddbb247782d73fd84e",
      "Id": "3ee0133acb6e4094a40a99131b188d5a"
    },
    {
      "Start": "e8437a4021664ed8aef1e0fcf0b3ca90",
      "End": "94cdd6749142458a979cd31673ceab9d",
      "Id": "8ce3d52eda9c4dd891fc6f67bb7fa317"
    },
    {
      "Start": "0037e3411dc64213b0450ffaae65447b",
      "End": "195a205252b8462fbf2e6e0bec082ba2",
      "Id": "b2b2d1a1e57a4f988ee8fe85f62ef5da"
    },
    {
      "Start": "f3c296108f6d4570a958f04f761dd148",
      "End": "fbff0d29dc9a4736a69603521632e432",
      "Id": "4cfc1584a9fb490ab02a8edf6ea80904"
    },
    {
      "Start": "ede345827d564d7eb2c3081b8ceffb7c",
      "End": "dcc44f31a894482bb45de9aff38f56f3",
      "Id": "0bf7da74b27e4c5b82699f147c947850"
    },
    {
      "Start": "ed120cd0c74c43e79e04b14d25a98b97",
      "End": "12003028faf94f3a9d27e43ebafd181a",
      "Id": "237090c4806c4ec6ac2c9a69e797fc47"
    },
    {
      "Start": "b4245324a3c549dab03e43e6a6bbfbaa",
      "End": "c18e4a8f927045698aad73a452b3e76f",
      "Id": "a1ee922eba354944aeb12103d68ba237"
    },
    {
      "Start": "52672c3e978d4dbb825b090ce61551b3",
      "End": "4ec8a5b8c6274be1861d2f4476401024",
      "Id": "d342c9f9851e413388e908877b15222f"
    },
    {
      "Start": "d3c6382487e04acf87e0a15e7d5b14f2",
      "End": "cc5fb057c48b4d788ac551e7d5512574",
      "Id": "b18b1b4e1c1948fb958344b65fdd68e9"
    },
    {
      "Start": "d6156d61b5b14ce0a49b4012a28cef68",
      "End": "a4026e817ffe4509967d1f6d951ed177",
      "Id": "3ef44d2f58234553864abd6105dbab4d"
    },
    {
      "Start": "1bcfe82160bd48cd9cb5d335f76fd389",
      "End": "0bba8372179f4758a5d4c205f4d6c98d",
      "Id": "82a0640044194f198f8bfc010078bca0"
    },
    {
      "Start": "cf3ab15e582c42b3ab84d801c450d65a",
      "End": "68d4e58e8baf48cb965ab238af1b137e",
      "Id": "4fd58b2b60444d7fa2aa188fcab5f487"
    },
    {
      "Start": "0a7e92cc359349c9822349f3895bb58e",
      "End": "936a01557f284ff6a2312b2e8379d3e5",
      "Id": "507b4d4670764953acaa25bfc31995cd"
    },
    {
      "Start": "27080b8f26d04a168037afd1ea4ac92c",
      "End": "02827f3c29974aefbc80c291528a7996",
      "Id": "1f3a50affc6e414f810733985fcb9153"
    },
    {
      "Start": "952ae8d2ad984416b9d94f85d1c3b37f",
      "End": "fdb6cb9d7b30499cac8ffd1b0403b012",
      "Id": "a5532b2e8eac4ce8bbd7ee5efcf357de"
    },
    {
      "Start": "b64b32d39ad542a8b4477fe38dacdbaa",
      "End": "57bf42daa2fe4e79baed1e3ec6c57759",
      "Id": "7a44b97fef6745cebc74bc402f63ba79"
    },
    {
      "Start": "5cba435a9cde472099397577b2e42bd2",
      "End": "f2a69f9bbc8447a289a74f49a9565844",
      "Id": "0d45522bde9145309c881daa9e6b0381"
    },
    {
      "Start": "76058c87b8a34bb1aca1b15f3b9be7b4",
      "End": "47f7361f9e8549b19293d755ebc532a2",
      "Id": "4579ee8b328a44e0ab87d9835e7ecb6a"
    },
    {
      "Start": "c90f140204c048cba35c6014a644a6cf",
      "End": "98bbcbe9bd3f49c08aa53f70524d5a9f",
      "Id": "36e04661ead14910acc0c1a8099b24b9"
    },
    {
      "Start": "f8eeb70cb8d94e058f62e1f2a378a7e5",
      "End": "0474d130b8ac4cbc92527f0ad395478a",
      "Id": "f760daf21ce148a198bcea4622be1744"
    },
    {
      "Start": "43905904b20f4fa6a5dfbeb2e07b11e0",
      "End": "d5cb55a70bd048b18eb717bfe5572803",
      "Id": "e5152a1c15244065aa21dec594ba9245"
    },
    {
      "Start": "43905904b20f4fa6a5dfbeb2e07b11e0",
      "End": "18a012d758fb459ab842c7c51c70d697",
      "Id": "f177312ec51f422b9ffdab6b64afc820"
    }
  ],
  "Dependencies": [
    "e485d345-342c-403b-af78-a6387e65711b"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "MEPover",
      "Version": "2022.10.30",
      "ReferenceType": "Package",
      "Nodes": [
        "318eb77f29cc4443bc146c8cbc8802b4"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Visualização do plano de fundo",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "ElectricalCircuit Get Panels and Elements",
        "Id": "318eb77f29cc4443bc146c8cbc8802b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2101.3642714625889,
        "Y": -24.573117824813664
      },
      {
        "ShowGeometry": true,
        "Name": "2021",
        "Id": "c0996a9a30c94d31870007239eb79e7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2088.1777878767775,
        "Y": 504.311493194828
      },
      {
        "ShowGeometry": true,
        "Name": "2022 - 2023 - 2024 - 2025",
        "Id": "0c0a573666604c6bbc4a82fa750c1fac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2089.5972273813777,
        "Y": 787.582479279198
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "07f568c982ff41839d79dfebb8d1a60e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2577.5582796441745,
        "Y": 544.21652065359808
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "5ed60b4396aa41fb9e1f8b83ec318403",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1860.2168339671475,
        "Y": 582.61676896552808
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "15e533245f0f4406928bd1dcc3e70981",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 554.55019453647537,
        "Y": 645.49720255219813
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "670c231f36564fb89e806b65d9ca89ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 352.03160439491552,
        "Y": 807.7715872645681
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "3ecb44c18bc14025a741aea314d9de55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1399.9205537671255,
        "Y": 626.97502554297807
      },
      {
        "ShowGeometry": true,
        "Name": "Document.Version",
        "Id": "7c3e7f3a865e411889d4cf5d2142b740",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 112.92783429713444,
        "Y": 637.799898912408
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "9e2b43b9f51b406cad5e222c9c74de32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1013.2463860001353,
        "Y": 665.089422502288
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0b25397dcccc4fc08e9048f08ee93334",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1462.4129087642254,
        "Y": 810.616953359548
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "60069e101f1c472294432009d0badb64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3596.0314555388236,
        "Y": 237.20538900071097
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "8d4f1292e19546ae8bd571ceff61da54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5285.9830245162648,
        "Y": 459.66460043088796
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "b39a7fcd4ea642b48d5de17e134e983f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4110.9254200535943,
        "Y": 430.89625936409811
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "ac5c442db7d94e738f3ef2b7eedf5baf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3944.6309453845752,
        "Y": 240.04909315778332
      },
      {
        "ShowGeometry": true,
        "Name": "Range",
        "Id": "8af597bb17cf4c7bbb6aec739cc2d63c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4353.2537471847945,
        "Y": 200.175213488875
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "8bab5bc5e6c946538e181cbab0788e24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4646.2080316304782,
        "Y": 206.31595028582012
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "676c417c78704411860d8d47dcb08fe4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4121.6553534744544,
        "Y": 143.61230373667604
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3eaca9e3466b4a6c8ed3d272ddf762c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2489.2905777103415,
        "Y": -14.912938413721236
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "4721faf3f430424ab6dac814f6349598",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 816.626132303551,
        "Y": -34.837039387159962
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "9a597c13022d45ecb5a2efa0c764c6c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 464.89142056663104,
        "Y": -21.280287572797249
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "5e5ba8f8e7df422dae96574ace9184c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1156.8628111401915,
        "Y": -23.76818933155738
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "d5765b2cec1e492ca2d276c016abddc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1464.9021521338304,
        "Y": -20.570987089181074
      },
      {
        "ShowGeometry": true,
        "Name": "List.RestOfItems",
        "Id": "a313d9ebc79b4894b8bad60973a35f3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1785.4523702131278,
        "Y": -22.885947723198626
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9c205f7a024d413b8501d4334edbc5cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3047.9153065070518,
        "Y": -51.806640469763806
      }
    ],
    "Annotations": [
      {
        "Id": "f2bffd4fb35a4ccfbc52edf95747de0c",
        "Title": "comando",
        "Nodes": [
          "0c0a573666604c6bbc4a82fa750c1fac",
          "5ed60b4396aa41fb9e1f8b83ec318403",
          "c0996a9a30c94d31870007239eb79e7a",
          "07f568c982ff41839d79dfebb8d1a60e"
        ],
        "Left": 1850.2168339671475,
        "Top": 458.311493194828,
        "Width": 864.341445677027,
        "Height": 422.27098608436995,
        "FontSize": 30.0,
        "InitialTop": 504.311493194828,
        "InitialHeight": 428.27098608436995,
        "TextblockHeight": 36.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3c7d76f24e4d45c2af6bf6cf6e1290cb",
        "Title": "Versão Revit",
        "Nodes": [
          "3ecb44c18bc14025a741aea314d9de55",
          "0b25397dcccc4fc08e9048f08ee93334",
          "9e2b43b9f51b406cad5e222c9c74de32",
          "15e533245f0f4406928bd1dcc3e70981",
          "670c231f36564fb89e806b65d9ca89ee",
          "7c3e7f3a865e411889d4cf5d2142b740"
        ],
        "Left": 102.92783429713444,
        "Top": 573.97502554297807,
        "Width": 1490.992719469991,
        "Height": 329.64192781656993,
        "FontSize": 36.0,
        "InitialTop": 626.97502554297807,
        "InitialHeight": 328.64192781656993,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 298.6214145219534,
    "Y": 331.37039702316497,
    "Zoom": 0.19825801004847365
  }
}